
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/src/debug/empty.elf:     file format elf32-littleriscv
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/src/debug/empty.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20010000

Program Header:
    LOAD off    0x00001000 vaddr 0x20010000 paddr 0x20010000 align 2**12
         filesz 0x00007fc4 memsz 0x00007fc4 flags rwx
    LOAD off    0x00009ad0 vaddr 0x80000ad0 paddr 0x80000ad0 align 2**12
         filesz 0x00000000 memsz 0x00000ca0 flags rw-
    LOAD off    0x00009000 vaddr 0x80000000 paddr 0x20017fc8 align 2**12
         filesz 0x00000ad0 memsz 0x00000ad0 flags rw-
    LOAD off    0x00009ad0 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00009ad0 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             00000194  20010000  20010000  00001000  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text             00006f20  20010200  20010200  00001200  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata           00000e98  20017120  20017120  00008120  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array       0000000c  20017fb8  20017fb8  00008fb8  2**2  CONTENTS, ALLOC, LOAD, DATA
  4 .data             00000ad0  80000000  20017fc8  00009000  2**3  CONTENTS, ALLOC, LOAD, DATA
  5 .bss              000000a0  80000ad0  80000ad0  00009ad0  2**3  ALLOC
  6 .stack            00000400  80000b70  80000b70  00009ad0  2**0  ALLOC
  7 .heap             00000800  80000f70  80000f70  00009ad0  2**0  ALLOC
  8 .debug_info       00029b68  00000000  00000000  00009ad0  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev     0000414b  00000000  00000000  00033638  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges    00000b30  00000000  00000000  00037788  2**3  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges     00000ac0  00000000  00000000  000382b8  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_line       0000de92  00000000  00000000  00038d78  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_str        00004ee5  00000000  00000000  00046c0a  2**0  CONTENTS, READONLY, DEBUGGING
 14 .comment          00000028  00000000  00000000  0004baef  2**0  CONTENTS, READONLY
 15 .riscv.attributes 0000002b  00000000  00000000  0004bb17  2**0  CONTENTS, READONLY
 16 .debug_frame      00002b30  00000000  00000000  0004bb44  2**2  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc        00001539  00000000  00000000  0004e674  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20010000 l    d  .init	00000000 .init
20010200 l    d  .text	00000000 .text
20017120 l    d  .rodata	00000000 .rodata
20017fb8 l    d  .init_array	00000000 .init_array
80000000 l    d  .data	00000000 .data
80000ad0 l    d  .bss	00000000 .bss
80000b70 l    d  .stack	00000000 .stack
80000f70 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 libriscv__mmachine__sifive-hifive1-revb_a-entry.o
20010060 l       .init	00000000 early_trap_vector
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20010136 l       .init	00000000 _skip_init
20017ea4 l       .rodata	00000000 argv
20017ea8 l       .rodata	00000000 envp
20017eac l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 main.c
2001025a l     F .text	00000150 master_send
00000000 l    df *ABS*	00000000 drv_i2c0.c
80000ad0 l     O .bss	00000004 _baud_rate
200103aa l     F .text	00000148 driver_i2c0_write_addr
200104f2 l     F .text	0000005a driver_sifive_gpio0_enable_io
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
20010dcc l     F .text	00000068 std
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 gettimeofdayr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
200119ca l     F .text	0000002a __sfputc_r
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove-stub.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
20012046 l     F .text	0000002a __metal_driver_sifive_clint0_control_base
20012070 l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
20012098 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
200120d4 l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
20012234 l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20012764 l     F .text	00000024 __metal_driver_cpu_hartid
20012788 l     F .text	0000002a __metal_driver_cpu_timebase
200127b2 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
00000000 l    df *ABS*	00000000 riscv_plic0.c
2001405e l     F .text	0000002a __metal_driver_sifive_plic0_control_base
20014088 l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
200140b2 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
200140da l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20014102 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20014646 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20014660 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20014676 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
2001468a l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20014742 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
2001475c l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20014772 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20014786 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
2001482e l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20014848 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20014862 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20014878 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
2001488c l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
2001489e l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
200148ae l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
200148c4 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
200148d6 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
2001757c l     O .rodata	00000880 pll_configs
200148e8 l     F .text	0000004e get_pll_config_freq
20014936 l     F .text	00000028 metal_sifive_fe310_g000_pll_init
20014b72 l     F .text	000000ac find_closest_config
20014c1e l     F .text	00000132 configure_pll
20014eb6 l     F .text	0000002a use_hfxosc
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20014ee0 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20014f58 l     F .text	00000026 __metal_driver_sifive_gpio0_base
20014f7e l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20014fa8 l     F .text	0000035e __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
200159bc l     F .text	00000040 __metal_driver_sifive_uart0_control_base
200159fc l     F .text	00000042 __metal_driver_sifive_uart0_interrupt_parent
20015a3e l     F .text	0000003c __metal_driver_sifive_uart0_interrupt_line
20015a7a l     F .text	00000048 __metal_driver_sifive_uart0_clock
20015ac2 l     F .text	00000040 __metal_driver_sifive_uart0_pinmux
20015b02 l     F .text	00000040 __metal_driver_sifive_uart0_pinmux_output_selector
20015b42 l     F .text	00000040 __metal_driver_sifive_uart0_pinmux_source_selector
20015d50 l     F .text	000000d8 pre_rate_change_callback_func
20015e28 l     F .text	0000002e post_rate_change_callback_func
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 libriscv__mmachine__sifive-hifive1-revb_a-vector.o
20016380 l       .text	00000000 IRQ_0
20016384 l       .text	00000000 IRQ_1
20016388 l       .text	00000000 IRQ_2
2001638c l       .text	00000000 IRQ_3
20016390 l       .text	00000000 IRQ_4
20016394 l       .text	00000000 IRQ_5
20016398 l       .text	00000000 IRQ_6
2001639c l       .text	00000000 IRQ_7
200163a0 l       .text	00000000 IRQ_8
200163a4 l       .text	00000000 IRQ_9
200163a8 l       .text	00000000 IRQ_10
200163ac l       .text	00000000 IRQ_11
200163b0 l       .text	00000000 IRQ_12
200163b4 l       .text	00000000 IRQ_13
200163b8 l       .text	00000000 IRQ_14
200163bc l       .text	00000000 IRQ_15
200163c0 l       .text	00000000 IRQ_LC0
200163c4 l       .text	00000000 IRQ_LC1
200163c8 l       .text	00000000 IRQ_LC2
200163cc l       .text	00000000 IRQ_LC3
200163d0 l       .text	00000000 IRQ_LC4
200163d4 l       .text	00000000 IRQ_LC5
200163d8 l       .text	00000000 IRQ_LC6
200163dc l       .text	00000000 IRQ_LC7
200163e0 l       .text	00000000 IRQ_LC8
200163e4 l       .text	00000000 IRQ_LC9
200163e8 l       .text	00000000 IRQ_LC10
200163ec l       .text	00000000 IRQ_LC11
200163f0 l       .text	00000000 IRQ_LC12
200163f4 l       .text	00000000 IRQ_LC13
200163f8 l       .text	00000000 IRQ_LC14
200163fc l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 fixed-clock.c
20016400 l     F .text	00000070 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 timer.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_gettimeofday.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
80000ac8 l     O .data	00000004 brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
80000ae0 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 tty.c
200170e8 l     F .text	00000024 metal_tty_init
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
20017fc4 l       .init_array	00000000 __fini_array_end
20017fc4 l       .init_array	00000000 __fini_array_start
20017fc4 l       .init_array	00000000 __init_array_end
20017fb8 l       .init_array	00000000 __preinit_array_end
20017fb8 l       .init_array	00000000 __init_array_start
20017fb8 l       .init_array	00000000 __preinit_array_start
20012032 g     F .text	00000014 _malloc_usable_size_r
20017e84 g     O .rodata	00000020 __metal_driver_vtable_sifive_uart0
20011e38 g     F .text	0000002a _isatty_r
20012fd0  w    F .text	00000096 metal_lc4_interrupt_vector_handler
200108d4 g     F .text	000000da _puts_r
20011e62 g     F .text	0000002e _lseek_r
20015fba g     F .text	00000026 metal_clock_get_rate_hz
20015cb0 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20012410 g     F .text	00000054 __metal_driver_riscv_clint0_set_vector_mode
20012f3a  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20010ff8 g     F .text	0000002c _gettimeofday_r
200137c0 g     F .text	00000038 __metal_valid_interrupt_id
20010890 g     F .text	00000044 printf
80001288 g       .data	00000000 __global_pointer$
20013be4 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
20015f66 g     F .text	00000054 _metal_clock_append_to_callbacks
20014152 g     F .text	00000038 __metal_plic0_complete_interrupt
20013a40 g     F .text	0000014e __metal_driver_riscv_cpu_controller_interrupt_register
20011d78 g     F .text	00000036 __sseek
20010e82 g     F .text	0000006a __sinit
20010a4e g     F .text	000000c0 __swbuf_r
20010e3e g     F .text	00000044 __sfmoreglue
20011fac g     F .text	00000002 __malloc_unlock
20016108 g     F .text	0000002e metal_cpu_get
80000a20 g     O .data	00000020 __metal_dt_serial_10013000
20015596 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
200172dc g     O .rodata	0000004c __metal_driver_vtable_riscv_clint0
80000b70 g       .bss	00000000 metal_segment_bss_target_end
20012104 g     F .text	0000009a __metal_clint0_mtime_get
20013ff2 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
20011f60 g     F .text	0000004a memmove
00000000 g       *ABS*	00000000 __metal_chicken_bit
20015346 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
200167ba g     F .text	0000000c __errno
08000000 g       .init_array	00000000 metal_segment_itim_target_start
200160b8 g     F .text	0000002a metal_cpu_get_timebase
20015bc6 g     F .text	00000034 __metal_driver_sifive_uart0_txready
20010070 g     F .init	0000000e __metal_synchronize_harts
80000ad0 g       .bss	00000000 metal_segment_bss_target_start
2001219e g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20011e0c g     F .text	0000002c _fstat_r
200157e6 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80000b6c g     O .bss	00000004 errno
20014a02 g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
2001602a g     F .text	00000032 metal_clock_register_pre_rate_change_callback
200132be  w    F .text	00000096 metal_lc9_interrupt_vector_handler
80000a40 g     O .data	00000020 __metal_dt_serial_10023000
20017530 g     O .rodata	0000004c __metal_driver_vtable_riscv_plic0
200174f0 g     O .rodata	00000040 __metal_driver_vtable_cpu
200162dc g     F .text	0000002e metal_uart_set_baud_rate
20015e56 g     F .text	000000d0 __metal_driver_sifive_uart0_init
20011eaa g     F .text	000000b6 memcpy
20013c78 g     F .text	00000072 __metal_driver_cpu_mcycle_get
20017dfc g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000f70 g       .heap	00000000 metal_segment_heap_target_start
20010e34 g     F .text	0000000a _cleanup_r
200113a0 g     F .text	0000027c _svfprintf_r
80000a9c g     O .data	00000004 __metal_dt_cpu_0
20013228  w    F .text	00000096 metal_lc8_interrupt_vector_handler
20014d50 g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
200164fa g     F .text	0000004a metal_timer_get_timebase_frequency
200109ae g     F .text	0000000e puts
20013516  w    F .text	00000096 metal_lc13_interrupt_vector_handler
2001294a g     F .text	00000018 __metal_default_exception_handler
20016566 g     F .text	00000026 _fstat
20012730 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
200141ee g     F .text	00000062 __metal_plic0_set_priority
20013c00 g     F .text	0000005c __metal_driver_riscv_cpu_controller_set_vector_mode
200127dc g     F .text	00000030 __metal_driver_cpu_get
200174a4 g     O .rodata	0000004c __metal_driver_vtable_riscv_cpu_intc
2001283e g     F .text	00000018 __metal_interrupt_global_disable
20013192  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20013354  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20011cd0 g     F .text	0000002a _sbrk_r
200145fe g     F .text	00000048 __metal_driver_riscv_plic0_disable
200138b4 g     F .text	0000004e __metal_exception_register
20012004 g     F .text	0000002e _read_r
20013e0c g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
20015428 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
20012a3a g     F .text	00000068 __metal_default_sw_handler
2001605c g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
20015b82 g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
20016d42 g     F .text	00000352 .hidden __umoddi3
20016672 g     F .text	00000020 _isatty
200154ee g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
80000ac0 g     O .data	00000008 __metal_driver_vtable_fixed_clock
80000a90 g     O .data	00000004 _global_impure_ptr
20012aa2  w    F .text	00000092 metal_timer_interrupt_vector_handler
20011fae g     F .text	00000056 _realloc_r
2001682a g     F .text	0000006a __libc_init_array
20015468 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
200133ea  w    F .text	00000096 metal_lc11_interrupt_vector_handler
200169e4 g     F .text	0000035e .hidden __udivdi3
2001480c g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20013b8e g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_enable
200166e6 g     F .text	0000005a _sbrk
200153e2 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
20015f26 g     F .text	00000040 _metal_clock_call_all_callbacks
20010174 g     F .init	00000002 _init
200128a0 g     F .text	0000001a __metal_interrupt_timer_disable
200155e0 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
20013eca g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20017e48 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
2001552e g     F .text	00000068 __metal_driver_sifive_gpio0_enable_io
200167f2 g     F .text	00000038 __libc_fini_array
80000a78 g     O .data	0000000c __metal_dt_clock_4
2001596e g     F .text	00000020 __metal_driver_gpio_interrupt_controller
20013e54 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
80000000 g       .data	00000000 metal_segment_data_target_start
200128f2 g     F .text	0000002c __metal_interrupt_local_enable
200126fc g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
20017094 g     F .text	0000002c metal_tty_putc
20014310 g     F .text	00000018 __metal_plic0_default_handler
80000060 g     O .data	0000000c __metal_dt_clock_0
2001615e g     F .text	000000ea metal_gettimeofday
00000800 g       *ABS*	00000000 __heap_size
20017240 g     O .rodata	00000020 __sf_fake_stderr
200128d6 g     F .text	0000001c __metal_interrupt_external_disable
20015ba2 g     F .text	00000024 __metal_driver_sifive_uart0_get_interrupt_id
20013c5c g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
200112b6 g     F .text	000000ea __ssputs_r
20013902 g     F .text	0000013e __metal_driver_riscv_cpu_controller_interrupt_init
200119f4 g     F .text	00000042 __sfputs_r
20013fac g     F .text	00000046 __metal_driver_cpu_exception_register
20012856 g     F .text	00000018 __metal_interrupt_software_enable
20012e0e  w    F .text	00000096 metal_lc1_interrupt_vector_handler
20011e90 g     F .text	0000001a memchr
2001111c g     F .text	000000b0 _free_r
80000adc g     O .bss	00000004 _global_atexit
200136d8 g     F .text	00000050 __metal_controller_interrupt_vector_mode
2001691c g     F .text	000000c8 __call_exitprocs
80000f70 g       .stack	00000000 _sp
2001007e g     F .init	00000000 _start
2001469c g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
200164b0 g     F .text	0000004a metal_timer_get_cyclecount
20016692 g     F .text	0000002a _lseek
20013f8c g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20014020 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
200106a6 g     F .text	00000142 driver_i2c0_write
200128ba g     F .text	0000001c __metal_interrupt_external_enable
20016894 g     F .text	00000088 __register_exitproc
20015bfa g     F .text	00000040 __metal_driver_sifive_uart0_putc
200143b6 g     F .text	0000013e __metal_driver_riscv_plic0_init
200145b6 g     F .text	00000048 __metal_driver_riscv_plic0_enable
200153b6 g     F .text	0000002c __metal_driver_sifive_gpio0_output
200130fc  w    F .text	00000096 metal_lc6_interrupt_vector_handler
2001280c g     F .text	0000001a __metal_myhart_id
2001598e g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
200129a8  w    F .text	00000092 metal_software_interrupt_vector_handler
20013bb8 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20011de2 g     F .text	0000002a _close_r
2001608e g     F .text	0000002a metal_cpu_get_timer
20015c90 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
200122f2 g     F .text	000000da __metal_driver_riscv_clint0_register
80000a94 g     O .data	00000008 __metal_dt_clint_2000000
20010b0e g     F .text	00000110 __swsetup_r
20010eec g     F .text	000000a0 __sfp
20015fe0 g     F .text	0000004a metal_clock_set_rate_hz
20011cfa g     F .text	00000030 __sread
20015306 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
20010176  w    F .init	00000000 secondary_main
2001297a  w    F .text	0000002e metal_interrupt_vector_handler
20011faa g     F .text	00000002 __malloc_lock
20010d68 g     F .text	00000064 _fflush_r
200141c2 g     F .text	0000002c __metal_plic0_get_threshold
20014ef2 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
20017260 g     O .rodata	00000020 __sf_fake_stdin
200137f8 g     F .text	000000bc __metal_local_interrupt_enable
200125c8 g     F .text	00000134 __metal_driver_riscv_clint0_command_request
200107e8 g     F .text	000000a8 memset
20013066  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20010200 g     F .text	0000005a main
80000ad0 g       .data	00000000 metal_segment_data_target_end
80000aa8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
20013e68 g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20013f2c g     F .text	00000060 __metal_driver_cpu_get_msip
20016150 g     F .text	0000000e metal_shutdown
08000000 g       .init_array	00000000 metal_segment_itim_target_end
2001403e g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20014124 g     F .text	0000002e __metal_plic0_claim_interrupt
20011dae g     F .text	00000006 __sclose
20013480  w    F .text	00000096 metal_lc12_interrupt_vector_handler
200111cc g     F .text	000000ea _malloc_r
20010a18 g     F .text	00000036 time
200123f4 g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
80000aa4 g     O .data	00000004 __metal_dt_prci_10008000
20013cea g     F .text	00000046 __metal_driver_cpu_timebase_get
20010000 g       .init	00000000 _enter
20016136 g     F .text	0000001a metal_cpu_get_current_hartid
20014798 g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20016380 g       .text	00000000 __metal_vector_table
20017fc8 g       *ABS*	00000000 metal_segment_itim_source_start
80000a88  w    O .data	00000004 __metal_cpu_table
80000090 g     O .data	000003b8 __metal_dt_cpu_0_interrupt_controller
20010174 g     F .init	00000002 _fini
20010890 g     F .text	00000044 iprintf
200109bc g     F .text	0000004a sprintf
20017eb8 g     O .rodata	00000100 .hidden __clz_tab
20012826 g     F .text	00000018 __metal_interrupt_global_enable
200167b0 g     F .text	0000000a atexit
200170c0 g     F .text	00000028 metal_tty_putc_raw
20011db4 g     F .text	0000002e _write_r
20012886 g     F .text	0000001a __metal_interrupt_timer_enable
20015c3a g     F .text	00000056 __metal_driver_sifive_uart0_getc
20012516 g     F .text	000000b2 __metal_driver_riscv_clint0_disable
2001161c g     F .text	0000010c _printf_common
80000a8c g     O .data	00000004 _impure_ptr
20013d96 g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20010c1e g     F .text	0000014a __sflush_r
2001495e g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
200113a0 g     F .text	0000027c _svfiprintf_r
20014f20 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
20016470 g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
20012464 g     F .text	000000b2 __metal_driver_riscv_clint0_enable
20017fc8 g       *ABS*	00000000 metal_segment_data_source_start
80001770 g       .heap	00000000 metal_segment_heap_target_end
20013728 g     F .text	00000098 __metal_controller_interrupt_vector
80000a6c g     O .data	0000000c __metal_dt_clock_1
80000448 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
20011024 g     F .text	0000005a __swhatbuf_r
200154a8 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20012b34 g     F .text	00000066 __metal_default_timer_handler
20016740 g     F .text	00000070 _write
20014328 g     F .text	0000008e __metal_plic0_handler
20012ea4  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20013642  w    F .text	00000096 metal_lc15_interrupt_vector_handler
200160e2 g     F .text	00000026 metal_cpu_interrupt_controller
20011d2a g     F .text	0000004e __swrite
200167c6 g     F .text	0000002c exit
20011a36 g     F .text	0000029a _vfiprintf_r
20010f8c g     F .text	0000006c _fwalk_reent
2001054c g     F .text	00000060 driver_i2c0_init
2001648e g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
20017280 g     O .rodata	00000020 __sf_fake_stdout
200109bc g     F .text	0000004a siprintf
2001658c g     F .text	000000e6 _gettimeofday
80000aa0 g     O .data	00000004 __metal_dt_gpio_10012000
20012962 g     F .text	00000018 __metal_default_interrupt_handler
200162ae g     F .text	0000002e metal_uart_putc
200166bc g     F .text	0000002a _read
2001538c g     F .text	0000002a __metal_driver_sifive_gpio0_input
20012c00 g     F .text	00000152 __metal_exception_handler
20012d78  w    F .text	00000096 metal_lc0_interrupt_vector_handler
2001710c g     F .text	00000014 _exit
20013d30 g     F .text	00000066 __metal_driver_cpu_mtime_get
2001107e g     F .text	0000009e __smakebuf_r
200123cc g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
20010a06 g     F .text	00000012 strlen
20011728 g     F .text	000002a2 _printf_i
80000ad8 g     O .bss	00000004 __malloc_sbrk_start
200135ac  w    F .text	00000096 metal_lc14_interrupt_vector_handler
80000ab0 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
2001226a g     F .text	00000088 __metal_driver_riscv_clint0_init
80000ad4 g     O .bss	00000004 __malloc_free_list
200105ac g     F .text	000000fa driver_i2c0_set_baud_rate
20011a36 g     F .text	0000029a _vfprintf_r
20013e26 g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20014284 g     F .text	0000008c __metal_plic0_enable
2001006e  w      .init	00000000 __register_frame_info
20014720 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20013e3a g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
2001291e g     F .text	0000002c __metal_interrupt_local_disable
2001286e g     F .text	00000018 __metal_interrupt_software_disable
20014250 g     F .text	00000034 __metal_plic0_get_priority
20016248 g     F .text	0000003a metal_time
20016282 g     F .text	0000002c metal_uart_init
80000a60 g     O .data	0000000c __metal_dt_clock_3
80000084 g     O .data	0000000c __metal_dt_clock_6
2001418a g     F .text	00000038 __metal_plic0_set_threshold
20016544 g     F .text	00000022 _close
80000ab8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
200144f4 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20010000 <_enter>:
_enter():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20010000:	5fff1197          	auipc	gp,0x5fff1
20010004:	28818193          	addi	gp,gp,648 # 80001288 <__global_pointer$>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:29
.option pop

    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20010008:	00000297          	auipc	t0,0x0
2001000c:	05828293          	addi	t0,t0,88 # 20010060 <early_trap_vector>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:30
    csrw mtvec, t0
20010010:	30529073          	csrw	mtvec,t0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:32
    /* enable chicken bit if core is bullet series*/
    la t0, __metal_chicken_bit
20010014:	00000293          	li	t0,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:33
    beqz t0, 1f
20010018:	00028463          	beqz	t0,20010020 <_enter+0x20>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:34
    csrwi 0x7C1, 0
2001001c:	7c105073          	csrwi	0x7c1,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:43
     * C, so here we set up a C environment.  First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
20010020:	dfff0117          	auipc	sp,0xdfff0
20010024:	fe010113          	addi	sp,sp,-32 # 0 <__metal_boot_hart>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:52
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    .weak __metal_before_start
    la ra, __metal_before_start
20010028:	dfff0097          	auipc	ra,0xdfff0
2001002c:	fd808093          	addi	ra,ra,-40 # 0 <__metal_boot_hart>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:53
    beqz ra, 1f
20010030:	00008363          	beqz	ra,20010036 <_enter+0x36>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:54
    jalr ra
20010034:	9082                	jalr	ra
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:60
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20010036:	f1402573          	csrr	a0,mhartid
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:61
    li a1, 0
2001003a:	4581                	li	a1,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:62
    li a2, 0
2001003c:	4601                	li	a2,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:63
    call _start
2001003e:	2081                	jal	2001007e <_start>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:68

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20010040:	dfff0097          	auipc	ra,0xdfff0
20010044:	fc008093          	addi	ra,ra,-64 # 0 <__metal_boot_hart>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:69
    beqz ra, 1f
20010048:	00008363          	beqz	ra,2001004e <_enter+0x4e>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:70
    jalr ra
2001004c:	9082                	jalr	ra
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:75
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
2001004e:	00000297          	auipc	t0,0x0
20010052:	00c28293          	addi	t0,t0,12 # 2001005a <_enter+0x5a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:76
     csrw mtvec, t0
20010056:	30529073          	csrw	mtvec,t0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:78
1:
     lw t1, 0(x0)
2001005a:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:79
     j 1b
2001005e:	bff5                	j	2001005a <_enter+0x5a>

20010060 <early_trap_vector>:
early_trap_vector():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:89
 * you end up here then there's a bug in the early boot code somewhere. */
.section .text.metal.init.trapvec
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20010060:	342022f3          	csrr	t0,mcause
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:90
    csrr t1, mepc
20010064:	34102373          	csrr	t1,mepc
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:91
    csrr t2, mtval
20010068:	343023f3          	csrr	t2,mtval
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:92
    j early_trap_vector
2001006c:	bfd5                	j	20010060 <early_trap_vector>

2001006e <__register_frame_info>:
__register_frame_info():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/entry.S:105
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
2001006e:	8082                	ret

20010070 <__metal_synchronize_harts>:
__metal_synchronize_harts():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/synchronize_harts.c:19
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init")))
void __metal_synchronize_harts() {
20010070:	1141                	addi	sp,sp,-16
20010072:	c622                	sw	s0,12(sp)
20010074:	0800                	addi	s0,sp,16
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/synchronize_harts.c:61
        /* Wait for hart 0 to clear the MSIP bit */
        while (METAL_MSIP(msip_base, hart) == 1) ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20010076:	0001                	nop
20010078:	4432                	lw	s0,12(sp)
2001007a:	0141                	addi	sp,sp,16
2001007c:	8082                	ret

2001007e <_start>:
_start():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
2001007e:	8406                	mv	s0,ra
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20010080:	5fff1197          	auipc	gp,0x5fff1
20010084:	20818193          	addi	gp,gp,520 # 80001288 <__global_pointer$>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:51

  /* The METAL is designed for a bare-metal environment and therefor is expected
   * to define its own stack pointer.  We also align the stack pointer here
   * because the only RISC-V ABI that's currently defined mandates 16-byte
   * stack alignment. */
  la sp, _sp
20010088:	ce818113          	addi	sp,gp,-792 # 80000f70 <_sp>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:54

  /* Increment by hartid number of stack sizes */
  li t0, 0
2001008c:	4281                	li	t0,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:55
  la t1, __stack_size
2001008e:	40000313          	li	t1,1024
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:57
1:
  beq t0, a0, 1f
20010092:	00a28563          	beq	t0,a0,2001009c <_start+0x1e>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:58
  add sp, sp, t1
20010096:	911a                	add	sp,sp,t1
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:59
  addi t0, t0, 1
20010098:	0285                	addi	t0,t0,1
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:60
  j 1b
2001009a:	bfe5                	j	20010092 <_start+0x14>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:62
1:
  andi sp, sp, -16
2001009c:	ff017113          	andi	sp,sp,-16
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:65

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
200100a0:	00000293          	li	t0,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:66
  bne a0, t0, _skip_init
200100a4:	08551963          	bne	a0,t0,20010136 <_skip_init>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:75
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
200100a8:	00008297          	auipc	t0,0x8
200100ac:	f2028293          	addi	t0,t0,-224 # 20017fc8 <metal_segment_data_source_start>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:76
  la t1, metal_segment_data_target_start
200100b0:	5fff0317          	auipc	t1,0x5fff0
200100b4:	f5030313          	addi	t1,t1,-176 # 80000000 <metal_segment_data_target_start>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:77
  la t2, metal_segment_data_target_end
200100b8:	84818393          	addi	t2,gp,-1976 # 80000ad0 <metal_segment_data_target_end>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:79

  beq t0, t1, 2f
200100bc:	00628c63          	beq	t0,t1,200100d4 <_start+0x56>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:80
  bge t1, t2, 2f
200100c0:	00735a63          	bge	t1,t2,200100d4 <_start+0x56>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:84

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200100c4:	0002a503          	lw	a0,0(t0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:85
  addi t0, t0, 4
200100c8:	0291                	addi	t0,t0,4
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:86
  sw   a0, 0(t1)
200100ca:	00a32023          	sw	a0,0(t1)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:87
  addi t1, t1, 4
200100ce:	0311                	addi	t1,t1,4
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:88
  blt  t1, t2, 1b
200100d0:	fe734ae3          	blt	t1,t2,200100c4 <_start+0x46>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:99
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
200100d4:	00008297          	auipc	t0,0x8
200100d8:	ef428293          	addi	t0,t0,-268 # 20017fc8 <metal_segment_data_source_start>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:100
  la t1, metal_segment_itim_target_start
200100dc:	e7ff0317          	auipc	t1,0xe7ff0
200100e0:	f2430313          	addi	t1,t1,-220 # 8000000 <metal_segment_itim_target_end>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:101
  la t2, metal_segment_itim_target_end
200100e4:	e7ff0397          	auipc	t2,0xe7ff0
200100e8:	f1c38393          	addi	t2,t2,-228 # 8000000 <metal_segment_itim_target_end>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:103

  beq t0, t1, 2f
200100ec:	00628c63          	beq	t0,t1,20010104 <_start+0x86>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:104
  bge t1, t2, 2f
200100f0:	00735a63          	bge	t1,t2,20010104 <_start+0x86>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:108

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200100f4:	0002a503          	lw	a0,0(t0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:109
  addi t0, t0, 4
200100f8:	0291                	addi	t0,t0,4
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:110
  sw   a0, 0(t1)
200100fa:	00a32023          	sw	a0,0(t1)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:111
  addi t1, t1, 4
200100fe:	0311                	addi	t1,t1,4
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:112
  blt  t1, t2, 1b
20010100:	fe734ae3          	blt	t1,t2,200100f4 <_start+0x76>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:124
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
20010104:	0000100f          	fence.i
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:127

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
20010108:	5fff1317          	auipc	t1,0x5fff1
2001010c:	9c830313          	addi	t1,t1,-1592 # 80000ad0 <metal_segment_data_target_end>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:128
  la t2, metal_segment_bss_target_end
20010110:	8e818393          	addi	t2,gp,-1816 # 80000b70 <metal_segment_bss_target_end>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:130

  bge t1, t2, 2f
20010114:	00735763          	bge	t1,t2,20010122 <_start+0xa4>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:134

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
20010118:	00032023          	sw	zero,0(t1)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:135
  addi t1, t1, 4
2001011c:	0311                	addi	t1,t1,4
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:136
  blt  t1, t2, 1b
2001011e:	fe734de3          	blt	t1,t2,20010118 <_start+0x9a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:147
2:

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20010122:	c211                	beqz	a2,20010126 <_start+0xa8>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:148
  jalr a2
20010124:	9602                	jalr	a2
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:152
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20010126:	00006517          	auipc	a0,0x6
2001012a:	6cc50513          	addi	a0,a0,1740 # 200167f2 <__libc_fini_array>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:153
  call atexit
2001012e:	682060ef          	jal	ra,200167b0 <atexit>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:154
  call __libc_init_array
20010132:	6f8060ef          	jal	ra,2001682a <__libc_init_array>

20010136 <_skip_init>:
_skip_init():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:160

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20010136:	3f2d                	jal	20010070 <__metal_synchronize_harts>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:163

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  csrr a5, misa
20010138:	301027f3          	csrr	a5,misa
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:164
  li   a4, 0x10028
2001013c:	00010737          	lui	a4,0x10
20010140:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:165
  and  a5, a5, a4
20010144:	8ff9                	and	a5,a5,a4
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:166
  beqz a5, 1f
20010146:	cb89                	beqz	a5,20010158 <_skip_init+0x22>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:167
  csrr a5, mstatus
20010148:	300027f3          	csrr	a5,mstatus
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:168
  lui  a4, 0x2
2001014c:	6709                	lui	a4,0x2
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:169
  or   a5, a5, a4
2001014e:	8fd9                	or	a5,a5,a4
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:170
  csrw mstatus, a5
20010150:	30079073          	csrw	mstatus,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:171
  csrwi fcsr, 0
20010154:	00305073          	csrwi	fcsr,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:177
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
20010158:	4505                	li	a0,1
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:178
  la a1, argv  /* argv = {"libgloss", NULL} */
2001015a:	00008597          	auipc	a1,0x8
2001015e:	d4a58593          	addi	a1,a1,-694 # 20017ea4 <argv>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:179
  la a2, envp  /* envp = {NULL} */
20010162:	00008617          	auipc	a2,0x8
20010166:	d4660613          	addi	a2,a2,-698 # 20017ea8 <envp>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:180
  call secondary_main
2001016a:	2031                	jal	20010176 <secondary_main>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:186

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
2001016c:	65a060ef          	jal	ra,200167c6 <exit>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:191

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
20010170:	80a2                	mv	ra,s0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:192
  ret
20010172:	8082                	ret

20010174 <_fini>:
_init():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:204
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
20010174:	8082                	ret

20010176 <secondary_main>:
secondary_main():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:215
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
20010176:	1141                	addi	sp,sp,-16
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:217
#if __riscv_xlen == 32
  sw ra, 4(sp)
20010178:	c206                	sw	ra,4(sp)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:221
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
2001017a:	f14022f3          	csrr	t0,mhartid
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:222
  la t1, __metal_boot_hart
2001017e:	00000313          	li	t1,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:223
  beq t0, t1, 2f
20010182:	00628563          	beq	t0,t1,2001018c <secondary_main+0x16>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:225
1:
  wfi
20010186:	10500073          	wfi
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:226
  j 1b
2001018a:	bff5                	j	20010186 <secondary_main+0x10>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:228
2:
  call main
2001018c:	2895                	jal	20010200 <main>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:230
#if __riscv_xlen == 32
  lw ra, 4(sp)
2001018e:	4092                	lw	ra,4(sp)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:234
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
20010190:	0141                	addi	sp,sp,16
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/crt0.S:235
  ret
20010192:	8082                	ret

Disassembly of section .text:

20010200 <main>:
main():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:43

static int master_send(void);
static int master_recv(void);

int main(void)
{
20010200:	1141                	addi	sp,sp,-16
20010202:	c606                	sw	ra,12(sp)
20010204:	c422                	sw	s0,8(sp)
20010206:	0800                	addi	s0,sp,16
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:44
	printf("%s %s \n", __DATE__, __TIME__);
20010208:	200177b7          	lui	a5,0x20017
2001020c:	12078613          	addi	a2,a5,288 # 20017120 <_exit+0x14>
20010210:	200177b7          	lui	a5,0x20017
20010214:	12c78593          	addi	a1,a5,300 # 2001712c <_exit+0x20>
20010218:	200177b7          	lui	a5,0x20017
2001021c:	13878513          	addi	a0,a5,312 # 20017138 <_exit+0x2c>
20010220:	2d85                	jal	20010890 <iprintf>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:45
	printf("Initialize I2C master %d(Hz)\r\n", I2C_BAUDRATE);
20010222:	67e1                	lui	a5,0x18
20010224:	6a078593          	addi	a1,a5,1696 # 186a0 <__heap_size+0x17ea0>
20010228:	200177b7          	lui	a5,0x20017
2001022c:	14078513          	addi	a0,a5,320 # 20017140 <_exit+0x34>
20010230:	2585                	jal	20010890 <iprintf>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:46
	if(driver_i2c0_init(I2C_BAUDRATE, METAL_I2C_MASTER) != 0)
20010232:	4585                	li	a1,1
20010234:	67e1                	lui	a5,0x18
20010236:	6a078513          	addi	a0,a5,1696 # 186a0 <__heap_size+0x17ea0>
2001023a:	2e09                	jal	2001054c <driver_i2c0_init>
2001023c:	87aa                	mv	a5,a0
2001023e:	c799                	beqz	a5,2001024c <main+0x4c>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:48
	{
		printf("I2C initialization failed\r\n");
20010240:	200177b7          	lui	a5,0x20017
20010244:	16078513          	addi	a0,a5,352 # 20017160 <_exit+0x54>
20010248:	766000ef          	jal	ra,200109ae <puts>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:51
	}
#if 1 // I2C MASTER SEND
	master_send();
2001024c:	2039                	jal	2001025a <master_send>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:56
#else // I2C MASTER RECEIVE
	master_recv();
#endif

	return 0;
2001024e:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:57
}
20010250:	853e                	mv	a0,a5
20010252:	40b2                	lw	ra,12(sp)
20010254:	4422                	lw	s0,8(sp)
20010256:	0141                	addi	sp,sp,16
20010258:	8082                	ret

2001025a <master_send>:
master_send():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:60

static int master_send(void)
{
2001025a:	715d                	addi	sp,sp,-80
2001025c:	c686                	sw	ra,76(sp)
2001025e:	c4a2                	sw	s0,72(sp)
20010260:	0880                	addi	s0,sp,80
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:61
	int ret = -1;
20010262:	57fd                	li	a5,-1
20010264:	fef42423          	sw	a5,-24(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:63
	time_t timeout;
	int idx = 0;
20010268:	fe042623          	sw	zero,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:64
	char *s[3] = {"hifive1 ", "hello ", "arduino\r\n"};
2001026c:	200177b7          	lui	a5,0x20017
20010270:	17c78793          	addi	a5,a5,380 # 2001717c <_exit+0x70>
20010274:	fcf42a23          	sw	a5,-44(s0)
20010278:	200177b7          	lui	a5,0x20017
2001027c:	18878793          	addi	a5,a5,392 # 20017188 <_exit+0x7c>
20010280:	fcf42c23          	sw	a5,-40(s0)
20010284:	200177b7          	lui	a5,0x20017
20010288:	19078793          	addi	a5,a5,400 # 20017190 <_exit+0x84>
2001028c:	fcf42e23          	sw	a5,-36(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:65
	char buf[] = "message from hifive1\r\n";
20010290:	200177b7          	lui	a5,0x20017
20010294:	1d878793          	addi	a5,a5,472 # 200171d8 <_exit+0xcc>
20010298:	4388                	lw	a0,0(a5)
2001029a:	43cc                	lw	a1,4(a5)
2001029c:	4790                	lw	a2,8(a5)
2001029e:	47d4                	lw	a3,12(a5)
200102a0:	4b98                	lw	a4,16(a5)
200102a2:	faa42e23          	sw	a0,-68(s0)
200102a6:	fcb42023          	sw	a1,-64(s0)
200102aa:	fcc42223          	sw	a2,-60(s0)
200102ae:	fcd42423          	sw	a3,-56(s0)
200102b2:	fce42623          	sw	a4,-52(s0)
200102b6:	0147d703          	lhu	a4,20(a5)
200102ba:	fce41823          	sh	a4,-48(s0)
200102be:	0167c783          	lbu	a5,22(a5)
200102c2:	fcf40923          	sb	a5,-46(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:67

	driver_i2c0_write(ARDUINO_ADDR, strlen(s[0]), s[0], METAL_I2C_STOP_ENABLE);
200102c6:	fd442783          	lw	a5,-44(s0)
200102ca:	853e                	mv	a0,a5
200102cc:	2f2d                	jal	20010a06 <strlen>
200102ce:	872a                	mv	a4,a0
200102d0:	fd442783          	lw	a5,-44(s0)
200102d4:	4685                	li	a3,1
200102d6:	863e                	mv	a2,a5
200102d8:	85ba                	mv	a1,a4
200102da:	4521                	li	a0,8
200102dc:	26e9                	jal	200106a6 <driver_i2c0_write>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:68
	driver_i2c0_write(ARDUINO_ADDR, strlen(s[1]), s[1], METAL_I2C_STOP_ENABLE);
200102de:	fd842783          	lw	a5,-40(s0)
200102e2:	853e                	mv	a0,a5
200102e4:	270d                	jal	20010a06 <strlen>
200102e6:	872a                	mv	a4,a0
200102e8:	fd842783          	lw	a5,-40(s0)
200102ec:	4685                	li	a3,1
200102ee:	863e                	mv	a2,a5
200102f0:	85ba                	mv	a1,a4
200102f2:	4521                	li	a0,8
200102f4:	2e4d                	jal	200106a6 <driver_i2c0_write>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:69
	driver_i2c0_write(ARDUINO_ADDR, strlen(s[2]), s[2], METAL_I2C_STOP_ENABLE);
200102f6:	fdc42783          	lw	a5,-36(s0)
200102fa:	853e                	mv	a0,a5
200102fc:	2729                	jal	20010a06 <strlen>
200102fe:	872a                	mv	a4,a0
20010300:	fdc42783          	lw	a5,-36(s0)
20010304:	4685                	li	a3,1
20010306:	863e                	mv	a2,a5
20010308:	85ba                	mv	a1,a4
2001030a:	4521                	li	a0,8
2001030c:	2e69                	jal	200106a6 <driver_i2c0_write>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:73

	while(1)
	{
		sprintf(buf, "message from hifive1 %d\r\n", idx);
2001030e:	fbc40713          	addi	a4,s0,-68
20010312:	fec42603          	lw	a2,-20(s0)
20010316:	200177b7          	lui	a5,0x20017
2001031a:	19c78593          	addi	a1,a5,412 # 2001719c <_exit+0x90>
2001031e:	853a                	mv	a0,a4
20010320:	2d71                	jal	200109bc <siprintf>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:74
		ret = driver_i2c0_write(ARDUINO_ADDR, strlen(buf), buf, METAL_I2C_STOP_ENABLE);
20010322:	fbc40793          	addi	a5,s0,-68
20010326:	853e                	mv	a0,a5
20010328:	2df9                	jal	20010a06 <strlen>
2001032a:	872a                	mv	a4,a0
2001032c:	fbc40793          	addi	a5,s0,-68
20010330:	4685                	li	a3,1
20010332:	863e                	mv	a2,a5
20010334:	85ba                	mv	a1,a4
20010336:	4521                	li	a0,8
20010338:	26bd                	jal	200106a6 <driver_i2c0_write>
2001033a:	fea42423          	sw	a0,-24(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:75
		printf("I2C send: return %d, idx %d\r\n", ret, idx);
2001033e:	fec42603          	lw	a2,-20(s0)
20010342:	fe842583          	lw	a1,-24(s0)
20010346:	200177b7          	lui	a5,0x20017
2001034a:	1b878513          	addi	a0,a5,440 # 200171b8 <_exit+0xac>
2001034e:	2389                	jal	20010890 <iprintf>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:76
		++idx;
20010350:	fec42783          	lw	a5,-20(s0)
20010354:	0785                	addi	a5,a5,1
20010356:	fef42623          	sw	a5,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:77
		WAIT_1S(timeout)
2001035a:	4501                	li	a0,0
2001035c:	2d75                	jal	20010a18 <time>
2001035e:	86aa                	mv	a3,a0
20010360:	872e                	mv	a4,a1
20010362:	4585                	li	a1,1
20010364:	4601                	li	a2,0
20010366:	00b687b3          	add	a5,a3,a1
2001036a:	853e                	mv	a0,a5
2001036c:	00d53533          	sltu	a0,a0,a3
20010370:	00c70833          	add	a6,a4,a2
20010374:	01050733          	add	a4,a0,a6
20010378:	883a                	mv	a6,a4
2001037a:	fef42023          	sw	a5,-32(s0)
2001037e:	ff042223          	sw	a6,-28(s0)
20010382:	0001                	nop
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:77 (discriminator 2)
20010384:	4501                	li	a0,0
20010386:	2d49                	jal	20010a18 <time>
20010388:	87aa                	mv	a5,a0
2001038a:	882e                	mv	a6,a1
2001038c:	fe442703          	lw	a4,-28(s0)
20010390:	86c2                	mv	a3,a6
20010392:	fee6c9e3          	blt	a3,a4,20010384 <master_send+0x12a>
20010396:	fe442703          	lw	a4,-28(s0)
2001039a:	86c2                	mv	a3,a6
2001039c:	f6d719e3          	bne	a4,a3,2001030e <master_send+0xb4>
200103a0:	fe042703          	lw	a4,-32(s0)
200103a4:	fee7e0e3          	bltu	a5,a4,20010384 <master_send+0x12a>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/main.c:73
		sprintf(buf, "message from hifive1 %d\r\n", idx);
200103a8:	b79d                	j	2001030e <master_send+0xb4>

200103aa <driver_i2c0_write_addr>:
driver_i2c0_write_addr():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:107
#define METAL_I2C_INIT_OK 1
#define METAL_I2C_RET_OK 0
#define METAL_I2C_RET_ERR -1

static unsigned int _baud_rate = 0;
static int driver_i2c0_write_addr(unsigned long base, unsigned int addr, unsigned char rw_flag) {
200103aa:	7179                	addi	sp,sp,-48
200103ac:	d606                	sw	ra,44(sp)
200103ae:	d422                	sw	s0,40(sp)
200103b0:	1800                	addi	s0,sp,48
200103b2:	fca42e23          	sw	a0,-36(s0)
200103b6:	fcb42c23          	sw	a1,-40(s0)
200103ba:	87b2                	mv	a5,a2
200103bc:	fcf40ba3          	sb	a5,-41(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:109
    time_t timeout;
    int ret = 0;
200103c0:	fe042623          	sw	zero,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:112

    /* Reset timeout */
    METAL_I2C_TIMEOUT_RESET(timeout);
200103c4:	685050ef          	jal	ra,20016248 <metal_time>
200103c8:	86aa                	mv	a3,a0
200103ca:	872e                	mv	a4,a1
200103cc:	4585                	li	a1,1
200103ce:	4601                	li	a2,0
200103d0:	00b687b3          	add	a5,a3,a1
200103d4:	853e                	mv	a0,a5
200103d6:	00d53533          	sltu	a0,a0,a3
200103da:	00c70833          	add	a6,a4,a2
200103de:	01050733          	add	a4,a0,a6
200103e2:	883a                	mv	a6,a4
200103e4:	fef42023          	sw	a5,-32(s0)
200103e8:	ff042223          	sw	a6,-28(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:115

    /* Check if any transfer is in progress */
    METAL_I2C_REG_CHECK(
200103ec:	a035                	j	20010418 <driver_i2c0_write_addr+0x6e>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:115 (discriminator 3)
200103ee:	65b050ef          	jal	ra,20016248 <metal_time>
200103f2:	87aa                	mv	a5,a0
200103f4:	882e                	mv	a6,a1
200103f6:	fe442703          	lw	a4,-28(s0)
200103fa:	86c2                	mv	a3,a6
200103fc:	00d74c63          	blt	a4,a3,20010414 <driver_i2c0_write_addr+0x6a>
20010400:	fe442703          	lw	a4,-28(s0)
20010404:	86c2                	mv	a3,a6
20010406:	00d71963          	bne	a4,a3,20010418 <driver_i2c0_write_addr+0x6e>
2001040a:	fe042703          	lw	a4,-32(s0)
2001040e:	00f76363          	bltu	a4,a5,20010414 <driver_i2c0_write_addr+0x6a>
20010412:	a019                	j	20010418 <driver_i2c0_write_addr+0x6e>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:115 (discriminator 1)
20010414:	57fd                	li	a5,-1
20010416:	a8c9                	j	200104e8 <driver_i2c0_write_addr+0x13e>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:115 (discriminator 2)
20010418:	fdc42783          	lw	a5,-36(s0)
2001041c:	07c1                	addi	a5,a5,16
2001041e:	0007c783          	lbu	a5,0(a5)
20010422:	0ff7f793          	andi	a5,a5,255
20010426:	8b89                	andi	a5,a5,2
20010428:	f3f9                	bnez	a5,200103ee <driver_i2c0_write_addr+0x44>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:120
        (METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_TIP),
        timeout);

    /* Set transmit register to given address with read/write flag */
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) = METAL_SIFIVE_I2C_INSERT_RW_BIT(addr, rw_flag);
2001042a:	fd842783          	lw	a5,-40(s0)
2001042e:	0ff7f793          	andi	a5,a5,255
20010432:	0786                	slli	a5,a5,0x1
20010434:	0ff7f713          	andi	a4,a5,255
20010438:	fd744783          	lbu	a5,-41(s0)
2001043c:	8b85                	andi	a5,a5,1
2001043e:	0ff7f793          	andi	a5,a5,255
20010442:	fdc42683          	lw	a3,-36(s0)
20010446:	06b1                	addi	a3,a3,12
20010448:	8fd9                	or	a5,a5,a4
2001044a:	0ff7f793          	andi	a5,a5,255
2001044e:	00f68023          	sb	a5,0(a3)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:124
//    REG_SIFIVE_I2C0_TRANSMIT = METAL_SIFIVE_I2C_INSERT_RW_BIT(addr, rw_flag);

    /* Set start flag to trigger the address transfer */
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) =
20010452:	fdc42783          	lw	a5,-36(s0)
20010456:	07c1                	addi	a5,a5,16
20010458:	873e                	mv	a4,a5
2001045a:	f9000793          	li	a5,-112
2001045e:	00f70023          	sb	a5,0(a4) # 2000 <__heap_size+0x1800>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:127
        METAL_I2C_CMD_WRITE | METAL_I2C_CMD_START;
    /* Reset timeout */
    METAL_I2C_TIMEOUT_RESET(timeout);
20010462:	5e7050ef          	jal	ra,20016248 <metal_time>
20010466:	86aa                	mv	a3,a0
20010468:	872e                	mv	a4,a1
2001046a:	4585                	li	a1,1
2001046c:	4601                	li	a2,0
2001046e:	00b687b3          	add	a5,a3,a1
20010472:	853e                	mv	a0,a5
20010474:	00d53533          	sltu	a0,a0,a3
20010478:	00c70833          	add	a6,a4,a2
2001047c:	01050733          	add	a4,a0,a6
20010480:	883a                	mv	a6,a4
20010482:	fef42023          	sw	a5,-32(s0)
20010486:	ff042223          	sw	a6,-28(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:130

    /* Check for transmit completion */
    METAL_I2C_REG_CHECK(
2001048a:	a035                	j	200104b6 <driver_i2c0_write_addr+0x10c>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:130 (discriminator 3)
2001048c:	5bd050ef          	jal	ra,20016248 <metal_time>
20010490:	87aa                	mv	a5,a0
20010492:	882e                	mv	a6,a1
20010494:	fe442703          	lw	a4,-28(s0)
20010498:	86c2                	mv	a3,a6
2001049a:	00d74c63          	blt	a4,a3,200104b2 <driver_i2c0_write_addr+0x108>
2001049e:	fe442703          	lw	a4,-28(s0)
200104a2:	86c2                	mv	a3,a6
200104a4:	00d71963          	bne	a4,a3,200104b6 <driver_i2c0_write_addr+0x10c>
200104a8:	fe042703          	lw	a4,-32(s0)
200104ac:	00f76363          	bltu	a4,a5,200104b2 <driver_i2c0_write_addr+0x108>
200104b0:	a019                	j	200104b6 <driver_i2c0_write_addr+0x10c>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:130 (discriminator 1)
200104b2:	57fd                	li	a5,-1
200104b4:	a815                	j	200104e8 <driver_i2c0_write_addr+0x13e>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:130 (discriminator 2)
200104b6:	fdc42783          	lw	a5,-36(s0)
200104ba:	07c1                	addi	a5,a5,16
200104bc:	0007c783          	lbu	a5,0(a5)
200104c0:	0ff7f793          	andi	a5,a5,255
200104c4:	8b89                	andi	a5,a5,2
200104c6:	f3f9                	bnez	a5,2001048c <driver_i2c0_write_addr+0xe2>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:135
        (METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_TIP),
        timeout);

    /* Check for ACK from slave */
    if ((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_RXACK)) {
200104c8:	fdc42783          	lw	a5,-36(s0)
200104cc:	07c1                	addi	a5,a5,16
200104ce:	0007c783          	lbu	a5,0(a5)
200104d2:	0ff7f793          	andi	a5,a5,255
200104d6:	07e2                	slli	a5,a5,0x18
200104d8:	87e1                	srai	a5,a5,0x18
200104da:	0007d563          	bgez	a5,200104e4 <driver_i2c0_write_addr+0x13a>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:138
        /* No ACK, return error */
        METAL_I2C_LOG("I2C RX ACK failed.\r\n");
        ret = -1;
200104de:	57fd                	li	a5,-1
200104e0:	fef42623          	sw	a5,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:141
    }

    return ret;
200104e4:	fec42783          	lw	a5,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:142
}
200104e8:	853e                	mv	a0,a5
200104ea:	50b2                	lw	ra,44(sp)
200104ec:	5422                	lw	s0,40(sp)
200104ee:	6145                	addi	sp,sp,48
200104f0:	8082                	ret

200104f2 <driver_sifive_gpio0_enable_io>:
driver_sifive_gpio0_enable_io():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:145

static int driver_sifive_gpio0_enable_io(long source, long dest)
{
200104f2:	7179                	addi	sp,sp,-48
200104f4:	d622                	sw	s0,44(sp)
200104f6:	1800                	addi	s0,sp,48
200104f8:	fca42e23          	sw	a0,-36(s0)
200104fc:	fcb42c23          	sw	a1,-40(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:146
    long base = METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20010500:	100127b7          	lui	a5,0x10012
20010504:	fef42623          	sw	a5,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:148

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) &= ~source;
20010508:	fec42783          	lw	a5,-20(s0)
2001050c:	03c78793          	addi	a5,a5,60 # 1001203c <metal_segment_itim_target_end+0x801203c>
20010510:	439c                	lw	a5,0(a5)
20010512:	fdc42703          	lw	a4,-36(s0)
20010516:	fff74713          	not	a4,a4
2001051a:	86ba                	mv	a3,a4
2001051c:	fec42703          	lw	a4,-20(s0)
20010520:	03c70713          	addi	a4,a4,60
20010524:	8ff5                	and	a5,a5,a3
20010526:	c31c                	sw	a5,0(a4)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:149
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN))  |= dest;
20010528:	fec42783          	lw	a5,-20(s0)
2001052c:	03878793          	addi	a5,a5,56
20010530:	4398                	lw	a4,0(a5)
20010532:	fd842783          	lw	a5,-40(s0)
20010536:	fec42683          	lw	a3,-20(s0)
2001053a:	03868693          	addi	a3,a3,56
2001053e:	8fd9                	or	a5,a5,a4
20010540:	c29c                	sw	a5,0(a3)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:151

    return 0;
20010542:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:152
}
20010544:	853e                	mv	a0,a5
20010546:	5432                	lw	s0,44(sp)
20010548:	6145                	addi	sp,sp,48
2001054a:	8082                	ret

2001054c <driver_i2c0_init>:
driver_i2c0_init():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:162
/*
 * baud_rate: 100000 Hz or 400000 Hz
 * mode: (1) Master, (0) Slave
 *
 */
int driver_i2c0_init(unsigned int baud_rate, int mode) {
2001054c:	7179                	addi	sp,sp,-48
2001054e:	d606                	sw	ra,44(sp)
20010550:	d422                	sw	s0,40(sp)
20010552:	1800                	addi	s0,sp,48
20010554:	fca42e23          	sw	a0,-36(s0)
20010558:	fcb42c23          	sw	a1,-40(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:164

	int ret = -1;
2001055c:	57fd                	li	a5,-1
2001055e:	fef42623          	sw	a5,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:167

	/* Initialize baud rate */
	_baud_rate = 0;
20010562:	800017b7          	lui	a5,0x80001
20010566:	ac07a823          	sw	zero,-1328(a5) # 80000ad0 <metal_segment_heap_target_end+0xfffff360>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:170

	/* configure I2C I/O pins */
	long pinmux_output_selector = 0;  // i2c0 pimux output selector
2001056a:	fe042423          	sw	zero,-24(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:171
	long pinmux_source_selector = 12288;  // i2c0 pinmux source selector 0x3000
2001056e:	678d                	lui	a5,0x3
20010570:	fef42223          	sw	a5,-28(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:173

    driver_sifive_gpio0_enable_io(pinmux_output_selector, pinmux_source_selector);
20010574:	fe442583          	lw	a1,-28(s0)
20010578:	fe842503          	lw	a0,-24(s0)
2001057c:	3f9d                	jal	200104f2 <driver_sifive_gpio0_enable_io>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:176

	/* 1: Master 0: Slave */
	if (mode == 1) {
2001057e:	fd842703          	lw	a4,-40(s0)
20010582:	4785                	li	a5,1
20010584:	00f71a63          	bne	a4,a5,20010598 <driver_i2c0_init+0x4c>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:179
		METAL_I2C_LOG("Set I2C master mode\r\n");
		/* Set requested baud rate */
		if (driver_i2c0_set_baud_rate(baud_rate) == 0) {
20010588:	fdc42503          	lw	a0,-36(s0)
2001058c:	2005                	jal	200105ac <driver_i2c0_set_baud_rate>
2001058e:	87aa                	mv	a5,a0
20010590:	e799                	bnez	a5,2001059e <driver_i2c0_init+0x52>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:181
			METAL_I2C_LOG("Set baud rate done\r\n");
			ret = 0;
20010592:	fe042623          	sw	zero,-20(s0)
20010596:	a021                	j	2001059e <driver_i2c0_init+0x52>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:186
		}
	} else {
		METAL_I2C_LOG("Set I2C slave mode - not supported\r\n");
		/* Nothing to do. slave mode not supported */
		ret = -1;
20010598:	57fd                	li	a5,-1
2001059a:	fef42623          	sw	a5,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:189
	}

	return ret;
2001059e:	fec42783          	lw	a5,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:190
}
200105a2:	853e                	mv	a0,a5
200105a4:	50b2                	lw	ra,44(sp)
200105a6:	5422                	lw	s0,40(sp)
200105a8:	6145                	addi	sp,sp,48
200105aa:	8082                	ret

200105ac <driver_i2c0_set_baud_rate>:
driver_i2c0_set_baud_rate():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:196

int driver_i2c0_get_baud_rate(void) {
    return _baud_rate;
}

int driver_i2c0_set_baud_rate(unsigned int baud_rate) {
200105ac:	7139                	addi	sp,sp,-64
200105ae:	de06                	sw	ra,60(sp)
200105b0:	dc22                	sw	s0,56(sp)
200105b2:	0080                	addi	s0,sp,64
200105b4:	fca42623          	sw	a0,-52(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:197
    struct metal_clock *clock = NULL;
200105b8:	fe042423          	sw	zero,-24(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:198
    unsigned long base = METAL_SIFIVE_I2C0_10016000_BASE_ADDRESS;
200105bc:	100167b7          	lui	a5,0x10016
200105c0:	fef42223          	sw	a5,-28(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:199
    int ret = -1;
200105c4:	57fd                	li	a5,-1
200105c6:	fef42623          	sw	a5,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:202

    /* Select i2c0 clock source */
	clock = (struct metal_clock *)&__metal_dt_clock_4.clock;
200105ca:	800017b7          	lui	a5,0x80001
200105ce:	a7878793          	addi	a5,a5,-1416 # 80000a78 <metal_segment_heap_target_end+0xfffff308>
200105d2:	fef42423          	sw	a5,-24(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:204

    if (clock != NULL) {
200105d6:	fe842783          	lw	a5,-24(s0)
200105da:	cfc5                	beqz	a5,20010692 <driver_i2c0_set_baud_rate+0xe6>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:205
        long clock_rate = clock->vtable->get_rate_hz(clock);
200105dc:	fe842783          	lw	a5,-24(s0)
200105e0:	439c                	lw	a5,0(a5)
200105e2:	439c                	lw	a5,0(a5)
200105e4:	fe842503          	lw	a0,-24(s0)
200105e8:	9782                	jalr	a5
200105ea:	fea42023          	sw	a0,-32(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:208

        /* Calculate prescaler value */
        long prescaler = ((clock_rate / (baud_rate * 5)) - 1); //METAL_SIFIVE_I2C_GET_PRESCALER(baud_rate);
200105ee:	fe042683          	lw	a3,-32(s0)
200105f2:	fcc42703          	lw	a4,-52(s0)
200105f6:	87ba                	mv	a5,a4
200105f8:	078a                	slli	a5,a5,0x2
200105fa:	97ba                	add	a5,a5,a4
200105fc:	02f6d7b3          	divu	a5,a3,a5
20010600:	17fd                	addi	a5,a5,-1
20010602:	fcf42e23          	sw	a5,-36(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:210

        if ((prescaler > METAL_I2C_PRESCALE_MAX) || (prescaler < 0)) {
20010606:	fdc42703          	lw	a4,-36(s0)
2001060a:	67c1                	lui	a5,0x10
2001060c:	08f75663          	bge	a4,a5,20010698 <driver_i2c0_set_baud_rate+0xec>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:210 (discriminator 1)
20010610:	fdc42783          	lw	a5,-36(s0)
20010614:	0807c263          	bltz	a5,20010698 <driver_i2c0_set_baud_rate+0xec>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:215
            /* Out of range value, return error */
            METAL_I2C_LOG("I2C Set baud failed - baud rate out of range value\r\n");
        } else {
            /* Set pre-scaler value */
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_CONTROL) &= ~METAL_I2C_CONTROL_EN;
20010618:	fe442783          	lw	a5,-28(s0)
2001061c:	07a1                	addi	a5,a5,8
2001061e:	0007c783          	lbu	a5,0(a5) # 10000 <__heap_size+0xf800>
20010622:	0ff7f793          	andi	a5,a5,255
20010626:	fe442703          	lw	a4,-28(s0)
2001062a:	0721                	addi	a4,a4,8
2001062c:	07f7f793          	andi	a5,a5,127
20010630:	0ff7f793          	andi	a5,a5,255
20010634:	00f70023          	sb	a5,0(a4)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:216
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_PRESCALE_LOW) = prescaler & 0xFF;
20010638:	fe442783          	lw	a5,-28(s0)
2001063c:	fdc42703          	lw	a4,-36(s0)
20010640:	0ff77713          	andi	a4,a4,255
20010644:	00e78023          	sb	a4,0(a5)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:217
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_PRESCALE_HIGH) = (prescaler >> 8) & 0xFF;
20010648:	fdc42783          	lw	a5,-36(s0)
2001064c:	4087d693          	srai	a3,a5,0x8
20010650:	fe442783          	lw	a5,-28(s0)
20010654:	0791                	addi	a5,a5,4
20010656:	873e                	mv	a4,a5
20010658:	0ff6f793          	andi	a5,a3,255
2001065c:	00f70023          	sb	a5,0(a4)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:218
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_CONTROL) |= METAL_I2C_CONTROL_EN;
20010660:	fe442783          	lw	a5,-28(s0)
20010664:	07a1                	addi	a5,a5,8
20010666:	0007c783          	lbu	a5,0(a5)
2001066a:	0ff7f793          	andi	a5,a5,255
2001066e:	fe442703          	lw	a4,-28(s0)
20010672:	0721                	addi	a4,a4,8
20010674:	f807e793          	ori	a5,a5,-128
20010678:	0ff7f793          	andi	a5,a5,255
2001067c:	00f70023          	sb	a5,0(a4)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:220

            _baud_rate = baud_rate;
20010680:	800017b7          	lui	a5,0x80001
20010684:	fcc42703          	lw	a4,-52(s0)
20010688:	ace7a823          	sw	a4,-1328(a5) # 80000ad0 <metal_segment_heap_target_end+0xfffff360>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:221
            ret = 0;
2001068c:	fe042623          	sw	zero,-20(s0)
20010690:	a021                	j	20010698 <driver_i2c0_set_baud_rate+0xec>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:225
        }
    } else {
        METAL_I2C_LOG("I2C Set baud failed.\r\n");
    	ret = -1;
20010692:	57fd                	li	a5,-1
20010694:	fef42623          	sw	a5,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:228
    }

    return ret;
20010698:	fec42783          	lw	a5,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:229
}
2001069c:	853e                	mv	a0,a5
2001069e:	50f2                	lw	ra,60(sp)
200106a0:	5462                	lw	s0,56(sp)
200106a2:	6121                	addi	sp,sp,64
200106a4:	8082                	ret

200106a6 <driver_i2c0_write>:
driver_i2c0_write():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:231

int driver_i2c0_write(unsigned int addr, unsigned int len, unsigned char buf[], int stop_bit) {
200106a6:	7139                	addi	sp,sp,-64
200106a8:	de06                	sw	ra,60(sp)
200106aa:	dc22                	sw	s0,56(sp)
200106ac:	0080                	addi	s0,sp,64
200106ae:	fca42623          	sw	a0,-52(s0)
200106b2:	fcb42423          	sw	a1,-56(s0)
200106b6:	fcc42223          	sw	a2,-60(s0)
200106ba:	fcd42023          	sw	a3,-64(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:235
    __metal_io_u8 command;
    time_t timeout;
    int ret;
    unsigned long base = METAL_SIFIVE_I2C0_10016000_BASE_ADDRESS;
200106be:	100167b7          	lui	a5,0x10016
200106c2:	fef42023          	sw	a5,-32(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:240
    unsigned int i;

	/* Send address over I2C bus, current driver supports only 7bit
	 * addressing */
	ret = driver_i2c0_write_addr(base, addr, METAL_I2C_WRITE);
200106c6:	4601                	li	a2,0
200106c8:	fcc42583          	lw	a1,-52(s0)
200106cc:	fe042503          	lw	a0,-32(s0)
200106d0:	39e9                	jal	200103aa <driver_i2c0_write_addr>
200106d2:	fea42423          	sw	a0,-24(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:242

	if (ret != 0) {
200106d6:	fe842783          	lw	a5,-24(s0)
200106da:	10079063          	bnez	a5,200107da <driver_i2c0_write+0x134>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:247
		/* Write address failed */
		METAL_I2C_LOG("I2C Address Write failed.\r\n");
	} else {
		/* Set command flags */
		command = METAL_I2C_CMD_WRITE;
200106de:	47c1                	li	a5,16
200106e0:	fef407a3          	sb	a5,-17(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:249

		for (i = 0; i < len; i++) {
200106e4:	fe042223          	sw	zero,-28(s0)
200106e8:	a0dd                	j	200107ce <driver_i2c0_write+0x128>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:251
			/* Copy into transmit register */
			METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) = buf[i];
200106ea:	fc442703          	lw	a4,-60(s0)
200106ee:	fe442783          	lw	a5,-28(s0)
200106f2:	97ba                	add	a5,a5,a4
200106f4:	fe042703          	lw	a4,-32(s0)
200106f8:	0731                	addi	a4,a4,12
200106fa:	0007c783          	lbu	a5,0(a5) # 10016000 <metal_segment_itim_target_end+0x8016000>
200106fe:	00f70023          	sb	a5,0(a4)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:255

			/* for last byte transfer, check if stop condition is requested
			 */
			if (i == (len - 1)) {
20010702:	fc842783          	lw	a5,-56(s0)
20010706:	17fd                	addi	a5,a5,-1
20010708:	fe442703          	lw	a4,-28(s0)
2001070c:	02f71263          	bne	a4,a5,20010730 <driver_i2c0_write+0x8a>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:256
				command |= METAL_SIFIVE_I2C_INSERT_STOP(stop_bit);
20010710:	fc042783          	lw	a5,-64(s0)
20010714:	0ff7f793          	andi	a5,a5,255
20010718:	079a                	slli	a5,a5,0x6
2001071a:	0ff7f793          	andi	a5,a5,255
2001071e:	0407f793          	andi	a5,a5,64
20010722:	0ff7f713          	andi	a4,a5,255
20010726:	fef44783          	lbu	a5,-17(s0)
2001072a:	8fd9                	or	a5,a5,a4
2001072c:	fef407a3          	sb	a5,-17(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:259
			}
			/* Write command register */
			METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
20010730:	fe042783          	lw	a5,-32(s0)
20010734:	07c1                	addi	a5,a5,16
20010736:	873e                	mv	a4,a5
20010738:	fef44783          	lbu	a5,-17(s0)
2001073c:	00f70023          	sb	a5,0(a4)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:261
			/* Reset timeout */
			METAL_I2C_TIMEOUT_RESET(timeout);
20010740:	309050ef          	jal	ra,20016248 <metal_time>
20010744:	86aa                	mv	a3,a0
20010746:	872e                	mv	a4,a1
20010748:	4585                	li	a1,1
2001074a:	4601                	li	a2,0
2001074c:	00b687b3          	add	a5,a3,a1
20010750:	853e                	mv	a0,a5
20010752:	00d53533          	sltu	a0,a0,a3
20010756:	00c70833          	add	a6,a4,a2
2001075a:	01050733          	add	a4,a0,a6
2001075e:	883a                	mv	a6,a4
20010760:	fcf42c23          	sw	a5,-40(s0)
20010764:	fd042e23          	sw	a6,-36(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:264

			/* Check for transfer completion */
			METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20010768:	a035                	j	20010794 <driver_i2c0_write+0xee>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:264 (discriminator 3)
2001076a:	2df050ef          	jal	ra,20016248 <metal_time>
2001076e:	87aa                	mv	a5,a0
20010770:	882e                	mv	a6,a1
20010772:	fdc42703          	lw	a4,-36(s0)
20010776:	86c2                	mv	a3,a6
20010778:	00d74c63          	blt	a4,a3,20010790 <driver_i2c0_write+0xea>
2001077c:	fdc42703          	lw	a4,-36(s0)
20010780:	86c2                	mv	a3,a6
20010782:	00d71963          	bne	a4,a3,20010794 <driver_i2c0_write+0xee>
20010786:	fd842703          	lw	a4,-40(s0)
2001078a:	00f76363          	bltu	a4,a5,20010790 <driver_i2c0_write+0xea>
2001078e:	a019                	j	20010794 <driver_i2c0_write+0xee>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:264 (discriminator 1)
20010790:	57fd                	li	a5,-1
20010792:	a0b1                	j	200107de <driver_i2c0_write+0x138>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:264 (discriminator 2)
20010794:	fe042783          	lw	a5,-32(s0)
20010798:	07c1                	addi	a5,a5,16
2001079a:	0007c783          	lbu	a5,0(a5)
2001079e:	0ff7f793          	andi	a5,a5,255
200107a2:	8b89                	andi	a5,a5,2
200107a4:	f3f9                	bnez	a5,2001076a <driver_i2c0_write+0xc4>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:269
								 METAL_I2C_STATUS_TIP),
								timeout);

			/* Check for ACK from slave */
			if ((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
200107a6:	fe042783          	lw	a5,-32(s0)
200107aa:	07c1                	addi	a5,a5,16
200107ac:	0007c783          	lbu	a5,0(a5)
200107b0:	0ff7f793          	andi	a5,a5,255
200107b4:	07e2                	slli	a5,a5,0x18
200107b6:	87e1                	srai	a5,a5,0x18
200107b8:	0007d663          	bgez	a5,200107c4 <driver_i2c0_write+0x11e>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:273
				 METAL_I2C_STATUS_RXACK)) {
				/* No ACK, return error */
				METAL_I2C_LOG("I2C RX ACK failed.\r\n");
				ret = -1;
200107bc:	57fd                	li	a5,-1
200107be:	fef42423          	sw	a5,-24(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:274
				break;
200107c2:	a821                	j	200107da <driver_i2c0_write+0x134>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:249 (discriminator 2)
		for (i = 0; i < len; i++) {
200107c4:	fe442783          	lw	a5,-28(s0)
200107c8:	0785                	addi	a5,a5,1
200107ca:	fef42223          	sw	a5,-28(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:249 (discriminator 1)
200107ce:	fe442703          	lw	a4,-28(s0)
200107d2:	fc842783          	lw	a5,-56(s0)
200107d6:	f0f76ae3          	bltu	a4,a5,200106ea <driver_i2c0_write+0x44>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:279
			}
		}
	}

    return ret;
200107da:	fe842783          	lw	a5,-24(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\src/drv_i2c0.c:280
}
200107de:	853e                	mv	a0,a5
200107e0:	50f2                	lw	ra,60(sp)
200107e2:	5462                	lw	s0,56(sp)
200107e4:	6121                	addi	sp,sp,64
200107e6:	8082                	ret

200107e8 <memset>:
memset():
200107e8:	433d                	li	t1,15
200107ea:	872a                	mv	a4,a0
200107ec:	02c37363          	bgeu	t1,a2,20010812 <memset+0x2a>
200107f0:	00f77793          	andi	a5,a4,15
200107f4:	efbd                	bnez	a5,20010872 <memset+0x8a>
200107f6:	e5ad                	bnez	a1,20010860 <memset+0x78>
200107f8:	ff067693          	andi	a3,a2,-16
200107fc:	8a3d                	andi	a2,a2,15
200107fe:	96ba                	add	a3,a3,a4
20010800:	c30c                	sw	a1,0(a4)
20010802:	c34c                	sw	a1,4(a4)
20010804:	c70c                	sw	a1,8(a4)
20010806:	c74c                	sw	a1,12(a4)
20010808:	0741                	addi	a4,a4,16
2001080a:	fed76be3          	bltu	a4,a3,20010800 <memset+0x18>
2001080e:	e211                	bnez	a2,20010812 <memset+0x2a>
20010810:	8082                	ret
20010812:	40c306b3          	sub	a3,t1,a2
20010816:	068a                	slli	a3,a3,0x2
20010818:	00000297          	auipc	t0,0x0
2001081c:	9696                	add	a3,a3,t0
2001081e:	00a68067          	jr	10(a3)
20010822:	00b70723          	sb	a1,14(a4)
20010826:	00b706a3          	sb	a1,13(a4)
2001082a:	00b70623          	sb	a1,12(a4)
2001082e:	00b705a3          	sb	a1,11(a4)
20010832:	00b70523          	sb	a1,10(a4)
20010836:	00b704a3          	sb	a1,9(a4)
2001083a:	00b70423          	sb	a1,8(a4)
2001083e:	00b703a3          	sb	a1,7(a4)
20010842:	00b70323          	sb	a1,6(a4)
20010846:	00b702a3          	sb	a1,5(a4)
2001084a:	00b70223          	sb	a1,4(a4)
2001084e:	00b701a3          	sb	a1,3(a4)
20010852:	00b70123          	sb	a1,2(a4)
20010856:	00b700a3          	sb	a1,1(a4)
2001085a:	00b70023          	sb	a1,0(a4)
2001085e:	8082                	ret
20010860:	0ff5f593          	andi	a1,a1,255
20010864:	00859693          	slli	a3,a1,0x8
20010868:	8dd5                	or	a1,a1,a3
2001086a:	01059693          	slli	a3,a1,0x10
2001086e:	8dd5                	or	a1,a1,a3
20010870:	b761                	j	200107f8 <memset+0x10>
20010872:	00279693          	slli	a3,a5,0x2
20010876:	00000297          	auipc	t0,0x0
2001087a:	9696                	add	a3,a3,t0
2001087c:	8286                	mv	t0,ra
2001087e:	fa8680e7          	jalr	-88(a3)
20010882:	8096                	mv	ra,t0
20010884:	17c1                	addi	a5,a5,-16
20010886:	8f1d                	sub	a4,a4,a5
20010888:	963e                	add	a2,a2,a5
2001088a:	f8c374e3          	bgeu	t1,a2,20010812 <memset+0x2a>
2001088e:	b7a5                	j	200107f6 <memset+0xe>

20010890 <iprintf>:
printf():
20010890:	7139                	addi	sp,sp,-64
20010892:	da3e                	sw	a5,52(sp)
20010894:	d22e                	sw	a1,36(sp)
20010896:	d432                	sw	a2,40(sp)
20010898:	d636                	sw	a3,44(sp)
2001089a:	d83a                	sw	a4,48(sp)
2001089c:	dc42                	sw	a6,56(sp)
2001089e:	de46                	sw	a7,60(sp)
200108a0:	5fff0797          	auipc	a5,0x5fff0
200108a4:	1ec78793          	addi	a5,a5,492 # 80000a8c <_impure_ptr>
200108a8:	cc22                	sw	s0,24(sp)
200108aa:	4380                	lw	s0,0(a5)
200108ac:	ca26                	sw	s1,20(sp)
200108ae:	ce06                	sw	ra,28(sp)
200108b0:	84aa                	mv	s1,a0
200108b2:	c409                	beqz	s0,200108bc <iprintf+0x2c>
200108b4:	4c1c                	lw	a5,24(s0)
200108b6:	e399                	bnez	a5,200108bc <iprintf+0x2c>
200108b8:	8522                	mv	a0,s0
200108ba:	23e1                	jal	20010e82 <__sinit>
200108bc:	440c                	lw	a1,8(s0)
200108be:	1054                	addi	a3,sp,36
200108c0:	8626                	mv	a2,s1
200108c2:	8522                	mv	a0,s0
200108c4:	c636                	sw	a3,12(sp)
200108c6:	170010ef          	jal	ra,20011a36 <_vfiprintf_r>
200108ca:	40f2                	lw	ra,28(sp)
200108cc:	4462                	lw	s0,24(sp)
200108ce:	44d2                	lw	s1,20(sp)
200108d0:	6121                	addi	sp,sp,64
200108d2:	8082                	ret

200108d4 <_puts_r>:
_puts_r():
200108d4:	1101                	addi	sp,sp,-32
200108d6:	ca26                	sw	s1,20(sp)
200108d8:	c84a                	sw	s2,16(sp)
200108da:	ce06                	sw	ra,28(sp)
200108dc:	cc22                	sw	s0,24(sp)
200108de:	c64e                	sw	s3,12(sp)
200108e0:	c452                	sw	s4,8(sp)
200108e2:	84aa                	mv	s1,a0
200108e4:	892e                	mv	s2,a1
200108e6:	c501                	beqz	a0,200108ee <_puts_r+0x1a>
200108e8:	4d1c                	lw	a5,24(a0)
200108ea:	e391                	bnez	a5,200108ee <_puts_r+0x1a>
200108ec:	2b59                	jal	20010e82 <__sinit>
200108ee:	4c9c                	lw	a5,24(s1)
200108f0:	4480                	lw	s0,8(s1)
200108f2:	e399                	bnez	a5,200108f8 <_puts_r+0x24>
200108f4:	8526                	mv	a0,s1
200108f6:	2371                	jal	20010e82 <__sinit>
200108f8:	00007797          	auipc	a5,0x7
200108fc:	96878793          	addi	a5,a5,-1688 # 20017260 <__sf_fake_stdin>
20010900:	02f41c63          	bne	s0,a5,20010938 <_puts_r+0x64>
20010904:	40c0                	lw	s0,4(s1)
20010906:	00c45783          	lhu	a5,12(s0)
2001090a:	8ba1                	andi	a5,a5,8
2001090c:	c7b1                	beqz	a5,20010958 <_puts_r+0x84>
2001090e:	481c                	lw	a5,16(s0)
20010910:	c7a1                	beqz	a5,20010958 <_puts_r+0x84>
20010912:	59fd                	li	s3,-1
20010914:	4a29                	li	s4,10
20010916:	441c                	lw	a5,8(s0)
20010918:	00094583          	lbu	a1,0(s2)
2001091c:	17fd                	addi	a5,a5,-1
2001091e:	e9b1                	bnez	a1,20010972 <_puts_r+0x9e>
20010920:	c41c                	sw	a5,8(s0)
20010922:	0607de63          	bgez	a5,2001099e <_puts_r+0xca>
20010926:	8622                	mv	a2,s0
20010928:	45a9                	li	a1,10
2001092a:	8526                	mv	a0,s1
2001092c:	220d                	jal	20010a4e <__swbuf_r>
2001092e:	57fd                	li	a5,-1
20010930:	02f50863          	beq	a0,a5,20010960 <_puts_r+0x8c>
20010934:	4529                	li	a0,10
20010936:	a035                	j	20010962 <_puts_r+0x8e>
20010938:	00007797          	auipc	a5,0x7
2001093c:	94878793          	addi	a5,a5,-1720 # 20017280 <__sf_fake_stdout>
20010940:	00f41463          	bne	s0,a5,20010948 <_puts_r+0x74>
20010944:	4480                	lw	s0,8(s1)
20010946:	b7c1                	j	20010906 <_puts_r+0x32>
20010948:	00007797          	auipc	a5,0x7
2001094c:	8f878793          	addi	a5,a5,-1800 # 20017240 <__sf_fake_stderr>
20010950:	faf41be3          	bne	s0,a5,20010906 <_puts_r+0x32>
20010954:	44c0                	lw	s0,12(s1)
20010956:	bf45                	j	20010906 <_puts_r+0x32>
20010958:	85a2                	mv	a1,s0
2001095a:	8526                	mv	a0,s1
2001095c:	2a4d                	jal	20010b0e <__swsetup_r>
2001095e:	d955                	beqz	a0,20010912 <_puts_r+0x3e>
20010960:	557d                	li	a0,-1
20010962:	40f2                	lw	ra,28(sp)
20010964:	4462                	lw	s0,24(sp)
20010966:	44d2                	lw	s1,20(sp)
20010968:	4942                	lw	s2,16(sp)
2001096a:	49b2                	lw	s3,12(sp)
2001096c:	4a22                	lw	s4,8(sp)
2001096e:	6105                	addi	sp,sp,32
20010970:	8082                	ret
20010972:	c41c                	sw	a5,8(s0)
20010974:	0905                	addi	s2,s2,1
20010976:	0007d763          	bgez	a5,20010984 <_puts_r+0xb0>
2001097a:	4c18                	lw	a4,24(s0)
2001097c:	00e7cb63          	blt	a5,a4,20010992 <_puts_r+0xbe>
20010980:	01458963          	beq	a1,s4,20010992 <_puts_r+0xbe>
20010984:	401c                	lw	a5,0(s0)
20010986:	00178713          	addi	a4,a5,1
2001098a:	c018                	sw	a4,0(s0)
2001098c:	00b78023          	sb	a1,0(a5)
20010990:	b759                	j	20010916 <_puts_r+0x42>
20010992:	8622                	mv	a2,s0
20010994:	8526                	mv	a0,s1
20010996:	2865                	jal	20010a4e <__swbuf_r>
20010998:	f7351fe3          	bne	a0,s3,20010916 <_puts_r+0x42>
2001099c:	b7d1                	j	20010960 <_puts_r+0x8c>
2001099e:	401c                	lw	a5,0(s0)
200109a0:	00178713          	addi	a4,a5,1
200109a4:	c018                	sw	a4,0(s0)
200109a6:	4729                	li	a4,10
200109a8:	00e78023          	sb	a4,0(a5)
200109ac:	b761                	j	20010934 <_puts_r+0x60>

200109ae <puts>:
puts():
200109ae:	5fff0797          	auipc	a5,0x5fff0
200109b2:	0de78793          	addi	a5,a5,222 # 80000a8c <_impure_ptr>
200109b6:	85aa                	mv	a1,a0
200109b8:	4388                	lw	a0,0(a5)
200109ba:	bf29                	j	200108d4 <_puts_r>

200109bc <siprintf>:
sprintf():
200109bc:	7135                	addi	sp,sp,-160
200109be:	cb3e                	sw	a5,148(sp)
200109c0:	800007b7          	lui	a5,0x80000
200109c4:	fff7c793          	not	a5,a5
200109c8:	ce3e                	sw	a5,28(sp)
200109ca:	c83e                	sw	a5,16(sp)
200109cc:	77c1                	lui	a5,0xffff0
200109ce:	20878793          	addi	a5,a5,520 # ffff0208 <metal_segment_heap_target_end+0x7ffeea98>
200109d2:	c532                	sw	a2,136(sp)
200109d4:	c736                	sw	a3,140(sp)
200109d6:	c93a                	sw	a4,144(sp)
200109d8:	cd42                	sw	a6,152(sp)
200109da:	cf46                	sw	a7,156(sp)
200109dc:	ca3e                	sw	a5,20(sp)
200109de:	5fff0797          	auipc	a5,0x5fff0
200109e2:	0ae78793          	addi	a5,a5,174 # 80000a8c <_impure_ptr>
200109e6:	c42a                	sw	a0,8(sp)
200109e8:	cc2a                	sw	a0,24(sp)
200109ea:	4388                	lw	a0,0(a5)
200109ec:	0134                	addi	a3,sp,136
200109ee:	862e                	mv	a2,a1
200109f0:	002c                	addi	a1,sp,8
200109f2:	de86                	sw	ra,124(sp)
200109f4:	c236                	sw	a3,4(sp)
200109f6:	1ab000ef          	jal	ra,200113a0 <_svfiprintf_r>
200109fa:	47a2                	lw	a5,8(sp)
200109fc:	00078023          	sb	zero,0(a5)
20010a00:	50f6                	lw	ra,124(sp)
20010a02:	610d                	addi	sp,sp,160
20010a04:	8082                	ret

20010a06 <strlen>:
strlen():
20010a06:	87aa                	mv	a5,a0
20010a08:	0785                	addi	a5,a5,1
20010a0a:	fff7c703          	lbu	a4,-1(a5)
20010a0e:	ff6d                	bnez	a4,20010a08 <strlen+0x2>
20010a10:	40a78533          	sub	a0,a5,a0
20010a14:	157d                	addi	a0,a0,-1
20010a16:	8082                	ret

20010a18 <time>:
time():
20010a18:	1101                	addi	sp,sp,-32
20010a1a:	5fff0797          	auipc	a5,0x5fff0
20010a1e:	07278793          	addi	a5,a5,114 # 80000a8c <_impure_ptr>
20010a22:	cc22                	sw	s0,24(sp)
20010a24:	842a                	mv	s0,a0
20010a26:	4388                	lw	a0,0(a5)
20010a28:	4601                	li	a2,0
20010a2a:	858a                	mv	a1,sp
20010a2c:	ce06                	sw	ra,28(sp)
20010a2e:	23e9                	jal	20010ff8 <_gettimeofday_r>
20010a30:	00055663          	bgez	a0,20010a3c <time+0x24>
20010a34:	577d                	li	a4,-1
20010a36:	57fd                	li	a5,-1
20010a38:	c03a                	sw	a4,0(sp)
20010a3a:	c23e                	sw	a5,4(sp)
20010a3c:	4502                	lw	a0,0(sp)
20010a3e:	4592                	lw	a1,4(sp)
20010a40:	c019                	beqz	s0,20010a46 <time+0x2e>
20010a42:	c008                	sw	a0,0(s0)
20010a44:	c04c                	sw	a1,4(s0)
20010a46:	40f2                	lw	ra,28(sp)
20010a48:	4462                	lw	s0,24(sp)
20010a4a:	6105                	addi	sp,sp,32
20010a4c:	8082                	ret

20010a4e <__swbuf_r>:
__swbuf_r():
20010a4e:	1101                	addi	sp,sp,-32
20010a50:	cc22                	sw	s0,24(sp)
20010a52:	ca26                	sw	s1,20(sp)
20010a54:	c84a                	sw	s2,16(sp)
20010a56:	ce06                	sw	ra,28(sp)
20010a58:	c64e                	sw	s3,12(sp)
20010a5a:	84aa                	mv	s1,a0
20010a5c:	892e                	mv	s2,a1
20010a5e:	8432                	mv	s0,a2
20010a60:	c501                	beqz	a0,20010a68 <__swbuf_r+0x1a>
20010a62:	4d1c                	lw	a5,24(a0)
20010a64:	e391                	bnez	a5,20010a68 <__swbuf_r+0x1a>
20010a66:	2931                	jal	20010e82 <__sinit>
20010a68:	00006797          	auipc	a5,0x6
20010a6c:	7f878793          	addi	a5,a5,2040 # 20017260 <__sf_fake_stdin>
20010a70:	06f41963          	bne	s0,a5,20010ae2 <__swbuf_r+0x94>
20010a74:	40c0                	lw	s0,4(s1)
20010a76:	4c1c                	lw	a5,24(s0)
20010a78:	c41c                	sw	a5,8(s0)
20010a7a:	00c45783          	lhu	a5,12(s0)
20010a7e:	8ba1                	andi	a5,a5,8
20010a80:	c3c9                	beqz	a5,20010b02 <__swbuf_r+0xb4>
20010a82:	481c                	lw	a5,16(s0)
20010a84:	cfbd                	beqz	a5,20010b02 <__swbuf_r+0xb4>
20010a86:	481c                	lw	a5,16(s0)
20010a88:	4008                	lw	a0,0(s0)
20010a8a:	0ff97993          	andi	s3,s2,255
20010a8e:	0ff97913          	andi	s2,s2,255
20010a92:	8d1d                	sub	a0,a0,a5
20010a94:	485c                	lw	a5,20(s0)
20010a96:	00f54663          	blt	a0,a5,20010aa2 <__swbuf_r+0x54>
20010a9a:	85a2                	mv	a1,s0
20010a9c:	8526                	mv	a0,s1
20010a9e:	24e9                	jal	20010d68 <_fflush_r>
20010aa0:	e52d                	bnez	a0,20010b0a <__swbuf_r+0xbc>
20010aa2:	441c                	lw	a5,8(s0)
20010aa4:	0505                	addi	a0,a0,1
20010aa6:	17fd                	addi	a5,a5,-1
20010aa8:	c41c                	sw	a5,8(s0)
20010aaa:	401c                	lw	a5,0(s0)
20010aac:	00178713          	addi	a4,a5,1
20010ab0:	c018                	sw	a4,0(s0)
20010ab2:	01378023          	sb	s3,0(a5)
20010ab6:	485c                	lw	a5,20(s0)
20010ab8:	00a78963          	beq	a5,a0,20010aca <__swbuf_r+0x7c>
20010abc:	00c45783          	lhu	a5,12(s0)
20010ac0:	8b85                	andi	a5,a5,1
20010ac2:	cb81                	beqz	a5,20010ad2 <__swbuf_r+0x84>
20010ac4:	47a9                	li	a5,10
20010ac6:	00f91663          	bne	s2,a5,20010ad2 <__swbuf_r+0x84>
20010aca:	85a2                	mv	a1,s0
20010acc:	8526                	mv	a0,s1
20010ace:	2c69                	jal	20010d68 <_fflush_r>
20010ad0:	ed0d                	bnez	a0,20010b0a <__swbuf_r+0xbc>
20010ad2:	40f2                	lw	ra,28(sp)
20010ad4:	4462                	lw	s0,24(sp)
20010ad6:	854a                	mv	a0,s2
20010ad8:	44d2                	lw	s1,20(sp)
20010ada:	4942                	lw	s2,16(sp)
20010adc:	49b2                	lw	s3,12(sp)
20010ade:	6105                	addi	sp,sp,32
20010ae0:	8082                	ret
20010ae2:	00006797          	auipc	a5,0x6
20010ae6:	79e78793          	addi	a5,a5,1950 # 20017280 <__sf_fake_stdout>
20010aea:	00f41463          	bne	s0,a5,20010af2 <__swbuf_r+0xa4>
20010aee:	4480                	lw	s0,8(s1)
20010af0:	b759                	j	20010a76 <__swbuf_r+0x28>
20010af2:	00006797          	auipc	a5,0x6
20010af6:	74e78793          	addi	a5,a5,1870 # 20017240 <__sf_fake_stderr>
20010afa:	f6f41ee3          	bne	s0,a5,20010a76 <__swbuf_r+0x28>
20010afe:	44c0                	lw	s0,12(s1)
20010b00:	bf9d                	j	20010a76 <__swbuf_r+0x28>
20010b02:	85a2                	mv	a1,s0
20010b04:	8526                	mv	a0,s1
20010b06:	2021                	jal	20010b0e <__swsetup_r>
20010b08:	dd3d                	beqz	a0,20010a86 <__swbuf_r+0x38>
20010b0a:	597d                	li	s2,-1
20010b0c:	b7d9                	j	20010ad2 <__swbuf_r+0x84>

20010b0e <__swsetup_r>:
__swsetup_r():
20010b0e:	1141                	addi	sp,sp,-16
20010b10:	5fff0797          	auipc	a5,0x5fff0
20010b14:	f7c78793          	addi	a5,a5,-132 # 80000a8c <_impure_ptr>
20010b18:	c226                	sw	s1,4(sp)
20010b1a:	4384                	lw	s1,0(a5)
20010b1c:	c422                	sw	s0,8(sp)
20010b1e:	c04a                	sw	s2,0(sp)
20010b20:	c606                	sw	ra,12(sp)
20010b22:	892a                	mv	s2,a0
20010b24:	842e                	mv	s0,a1
20010b26:	c489                	beqz	s1,20010b30 <__swsetup_r+0x22>
20010b28:	4c9c                	lw	a5,24(s1)
20010b2a:	e399                	bnez	a5,20010b30 <__swsetup_r+0x22>
20010b2c:	8526                	mv	a0,s1
20010b2e:	2e91                	jal	20010e82 <__sinit>
20010b30:	00006797          	auipc	a5,0x6
20010b34:	73078793          	addi	a5,a5,1840 # 20017260 <__sf_fake_stdin>
20010b38:	02f41c63          	bne	s0,a5,20010b70 <__swsetup_r+0x62>
20010b3c:	40c0                	lw	s0,4(s1)
20010b3e:	00c41703          	lh	a4,12(s0)
20010b42:	01071793          	slli	a5,a4,0x10
20010b46:	83c1                	srli	a5,a5,0x10
20010b48:	0087f693          	andi	a3,a5,8
20010b4c:	eeb5                	bnez	a3,20010bc8 <__swsetup_r+0xba>
20010b4e:	0107f693          	andi	a3,a5,16
20010b52:	ee9d                	bnez	a3,20010b90 <__swsetup_r+0x82>
20010b54:	47a5                	li	a5,9
20010b56:	00f92023          	sw	a5,0(s2)
20010b5a:	04076713          	ori	a4,a4,64
20010b5e:	00e41623          	sh	a4,12(s0)
20010b62:	557d                	li	a0,-1
20010b64:	40b2                	lw	ra,12(sp)
20010b66:	4422                	lw	s0,8(sp)
20010b68:	4492                	lw	s1,4(sp)
20010b6a:	4902                	lw	s2,0(sp)
20010b6c:	0141                	addi	sp,sp,16
20010b6e:	8082                	ret
20010b70:	00006797          	auipc	a5,0x6
20010b74:	71078793          	addi	a5,a5,1808 # 20017280 <__sf_fake_stdout>
20010b78:	00f41463          	bne	s0,a5,20010b80 <__swsetup_r+0x72>
20010b7c:	4480                	lw	s0,8(s1)
20010b7e:	b7c1                	j	20010b3e <__swsetup_r+0x30>
20010b80:	00006797          	auipc	a5,0x6
20010b84:	6c078793          	addi	a5,a5,1728 # 20017240 <__sf_fake_stderr>
20010b88:	faf41be3          	bne	s0,a5,20010b3e <__swsetup_r+0x30>
20010b8c:	44c0                	lw	s0,12(s1)
20010b8e:	bf45                	j	20010b3e <__swsetup_r+0x30>
20010b90:	8b91                	andi	a5,a5,4
20010b92:	c78d                	beqz	a5,20010bbc <__swsetup_r+0xae>
20010b94:	584c                	lw	a1,52(s0)
20010b96:	c989                	beqz	a1,20010ba8 <__swsetup_r+0x9a>
20010b98:	04440793          	addi	a5,s0,68
20010b9c:	00f58463          	beq	a1,a5,20010ba4 <__swsetup_r+0x96>
20010ba0:	854a                	mv	a0,s2
20010ba2:	2bad                	jal	2001111c <_free_r>
20010ba4:	02042a23          	sw	zero,52(s0)
20010ba8:	00c45783          	lhu	a5,12(s0)
20010bac:	00042223          	sw	zero,4(s0)
20010bb0:	fdb7f793          	andi	a5,a5,-37
20010bb4:	00f41623          	sh	a5,12(s0)
20010bb8:	481c                	lw	a5,16(s0)
20010bba:	c01c                	sw	a5,0(s0)
20010bbc:	00c45783          	lhu	a5,12(s0)
20010bc0:	0087e793          	ori	a5,a5,8
20010bc4:	00f41623          	sh	a5,12(s0)
20010bc8:	481c                	lw	a5,16(s0)
20010bca:	ef81                	bnez	a5,20010be2 <__swsetup_r+0xd4>
20010bcc:	00c45783          	lhu	a5,12(s0)
20010bd0:	20000713          	li	a4,512
20010bd4:	2807f793          	andi	a5,a5,640
20010bd8:	00e78563          	beq	a5,a4,20010be2 <__swsetup_r+0xd4>
20010bdc:	85a2                	mv	a1,s0
20010bde:	854a                	mv	a0,s2
20010be0:	2979                	jal	2001107e <__smakebuf_r>
20010be2:	00c45783          	lhu	a5,12(s0)
20010be6:	0017f713          	andi	a4,a5,1
20010bea:	c705                	beqz	a4,20010c12 <__swsetup_r+0x104>
20010bec:	485c                	lw	a5,20(s0)
20010bee:	00042423          	sw	zero,8(s0)
20010bf2:	40f007b3          	neg	a5,a5
20010bf6:	cc1c                	sw	a5,24(s0)
20010bf8:	481c                	lw	a5,16(s0)
20010bfa:	4501                	li	a0,0
20010bfc:	f7a5                	bnez	a5,20010b64 <__swsetup_r+0x56>
20010bfe:	00c41783          	lh	a5,12(s0)
20010c02:	0807f713          	andi	a4,a5,128
20010c06:	df39                	beqz	a4,20010b64 <__swsetup_r+0x56>
20010c08:	0407e793          	ori	a5,a5,64
20010c0c:	00f41623          	sh	a5,12(s0)
20010c10:	bf89                	j	20010b62 <__swsetup_r+0x54>
20010c12:	8b89                	andi	a5,a5,2
20010c14:	4701                	li	a4,0
20010c16:	e391                	bnez	a5,20010c1a <__swsetup_r+0x10c>
20010c18:	4858                	lw	a4,20(s0)
20010c1a:	c418                	sw	a4,8(s0)
20010c1c:	bff1                	j	20010bf8 <__swsetup_r+0xea>

20010c1e <__sflush_r>:
__sflush_r():
20010c1e:	00c5d783          	lhu	a5,12(a1)
20010c22:	1101                	addi	sp,sp,-32
20010c24:	cc22                	sw	s0,24(sp)
20010c26:	ca26                	sw	s1,20(sp)
20010c28:	ce06                	sw	ra,28(sp)
20010c2a:	c84a                	sw	s2,16(sp)
20010c2c:	c64e                	sw	s3,12(sp)
20010c2e:	0087f713          	andi	a4,a5,8
20010c32:	84aa                	mv	s1,a0
20010c34:	842e                	mv	s0,a1
20010c36:	e765                	bnez	a4,20010d1e <__sflush_r+0x100>
20010c38:	41d8                	lw	a4,4(a1)
20010c3a:	00e04763          	bgtz	a4,20010c48 <__sflush_r+0x2a>
20010c3e:	41b8                	lw	a4,64(a1)
20010c40:	00e04463          	bgtz	a4,20010c48 <__sflush_r+0x2a>
20010c44:	4501                	li	a0,0
20010c46:	a0c1                	j	20010d06 <__sflush_r+0xe8>
20010c48:	5458                	lw	a4,44(s0)
20010c4a:	df6d                	beqz	a4,20010c44 <__sflush_r+0x26>
20010c4c:	0004a903          	lw	s2,0(s1)
20010c50:	01379693          	slli	a3,a5,0x13
20010c54:	0004a023          	sw	zero,0(s1)
20010c58:	0606de63          	bgez	a3,20010cd4 <__sflush_r+0xb6>
20010c5c:	4868                	lw	a0,84(s0)
20010c5e:	00c45783          	lhu	a5,12(s0)
20010c62:	8b91                	andi	a5,a5,4
20010c64:	c799                	beqz	a5,20010c72 <__sflush_r+0x54>
20010c66:	405c                	lw	a5,4(s0)
20010c68:	8d1d                	sub	a0,a0,a5
20010c6a:	585c                	lw	a5,52(s0)
20010c6c:	c399                	beqz	a5,20010c72 <__sflush_r+0x54>
20010c6e:	403c                	lw	a5,64(s0)
20010c70:	8d1d                	sub	a0,a0,a5
20010c72:	545c                	lw	a5,44(s0)
20010c74:	500c                	lw	a1,32(s0)
20010c76:	862a                	mv	a2,a0
20010c78:	4681                	li	a3,0
20010c7a:	8526                	mv	a0,s1
20010c7c:	9782                	jalr	a5
20010c7e:	57fd                	li	a5,-1
20010c80:	00c45703          	lhu	a4,12(s0)
20010c84:	00f51d63          	bne	a0,a5,20010c9e <__sflush_r+0x80>
20010c88:	4094                	lw	a3,0(s1)
20010c8a:	47f5                	li	a5,29
20010c8c:	08d7e463          	bltu	a5,a3,20010d14 <__sflush_r+0xf6>
20010c90:	204007b7          	lui	a5,0x20400
20010c94:	0785                	addi	a5,a5,1
20010c96:	00d7d7b3          	srl	a5,a5,a3
20010c9a:	8b85                	andi	a5,a5,1
20010c9c:	cfa5                	beqz	a5,20010d14 <__sflush_r+0xf6>
20010c9e:	481c                	lw	a5,16(s0)
20010ca0:	00042223          	sw	zero,4(s0)
20010ca4:	c01c                	sw	a5,0(s0)
20010ca6:	01371793          	slli	a5,a4,0x13
20010caa:	0007d863          	bgez	a5,20010cba <__sflush_r+0x9c>
20010cae:	57fd                	li	a5,-1
20010cb0:	00f51463          	bne	a0,a5,20010cb8 <__sflush_r+0x9a>
20010cb4:	409c                	lw	a5,0(s1)
20010cb6:	e391                	bnez	a5,20010cba <__sflush_r+0x9c>
20010cb8:	c868                	sw	a0,84(s0)
20010cba:	584c                	lw	a1,52(s0)
20010cbc:	0124a023          	sw	s2,0(s1)
20010cc0:	d1d1                	beqz	a1,20010c44 <__sflush_r+0x26>
20010cc2:	04440793          	addi	a5,s0,68
20010cc6:	00f58463          	beq	a1,a5,20010cce <__sflush_r+0xb0>
20010cca:	8526                	mv	a0,s1
20010ccc:	2981                	jal	2001111c <_free_r>
20010cce:	02042a23          	sw	zero,52(s0)
20010cd2:	bf8d                	j	20010c44 <__sflush_r+0x26>
20010cd4:	500c                	lw	a1,32(s0)
20010cd6:	4685                	li	a3,1
20010cd8:	4601                	li	a2,0
20010cda:	8526                	mv	a0,s1
20010cdc:	9702                	jalr	a4
20010cde:	57fd                	li	a5,-1
20010ce0:	f6f51fe3          	bne	a0,a5,20010c5e <__sflush_r+0x40>
20010ce4:	409c                	lw	a5,0(s1)
20010ce6:	dfa5                	beqz	a5,20010c5e <__sflush_r+0x40>
20010ce8:	4775                	li	a4,29
20010cea:	00e78563          	beq	a5,a4,20010cf4 <__sflush_r+0xd6>
20010cee:	4759                	li	a4,22
20010cf0:	00e79563          	bne	a5,a4,20010cfa <__sflush_r+0xdc>
20010cf4:	0124a023          	sw	s2,0(s1)
20010cf8:	b7b1                	j	20010c44 <__sflush_r+0x26>
20010cfa:	00c45783          	lhu	a5,12(s0)
20010cfe:	0407e793          	ori	a5,a5,64
20010d02:	00f41623          	sh	a5,12(s0)
20010d06:	40f2                	lw	ra,28(sp)
20010d08:	4462                	lw	s0,24(sp)
20010d0a:	44d2                	lw	s1,20(sp)
20010d0c:	4942                	lw	s2,16(sp)
20010d0e:	49b2                	lw	s3,12(sp)
20010d10:	6105                	addi	sp,sp,32
20010d12:	8082                	ret
20010d14:	04076713          	ori	a4,a4,64
20010d18:	00e41623          	sh	a4,12(s0)
20010d1c:	b7ed                	j	20010d06 <__sflush_r+0xe8>
20010d1e:	0105a983          	lw	s3,16(a1)
20010d22:	f20981e3          	beqz	s3,20010c44 <__sflush_r+0x26>
20010d26:	0005a903          	lw	s2,0(a1)
20010d2a:	8b8d                	andi	a5,a5,3
20010d2c:	0135a023          	sw	s3,0(a1)
20010d30:	41390933          	sub	s2,s2,s3
20010d34:	4701                	li	a4,0
20010d36:	e391                	bnez	a5,20010d3a <__sflush_r+0x11c>
20010d38:	49d8                	lw	a4,20(a1)
20010d3a:	c418                	sw	a4,8(s0)
20010d3c:	f12054e3          	blez	s2,20010c44 <__sflush_r+0x26>
20010d40:	541c                	lw	a5,40(s0)
20010d42:	500c                	lw	a1,32(s0)
20010d44:	86ca                	mv	a3,s2
20010d46:	864e                	mv	a2,s3
20010d48:	8526                	mv	a0,s1
20010d4a:	9782                	jalr	a5
20010d4c:	00a04a63          	bgtz	a0,20010d60 <__sflush_r+0x142>
20010d50:	00c45783          	lhu	a5,12(s0)
20010d54:	557d                	li	a0,-1
20010d56:	0407e793          	ori	a5,a5,64
20010d5a:	00f41623          	sh	a5,12(s0)
20010d5e:	b765                	j	20010d06 <__sflush_r+0xe8>
20010d60:	99aa                	add	s3,s3,a0
20010d62:	40a90933          	sub	s2,s2,a0
20010d66:	bfd9                	j	20010d3c <__sflush_r+0x11e>

20010d68 <_fflush_r>:
_fflush_r():
20010d68:	499c                	lw	a5,16(a1)
20010d6a:	cfb9                	beqz	a5,20010dc8 <_fflush_r+0x60>
20010d6c:	1101                	addi	sp,sp,-32
20010d6e:	cc22                	sw	s0,24(sp)
20010d70:	ce06                	sw	ra,28(sp)
20010d72:	842a                	mv	s0,a0
20010d74:	c511                	beqz	a0,20010d80 <_fflush_r+0x18>
20010d76:	4d1c                	lw	a5,24(a0)
20010d78:	e781                	bnez	a5,20010d80 <_fflush_r+0x18>
20010d7a:	c62e                	sw	a1,12(sp)
20010d7c:	2219                	jal	20010e82 <__sinit>
20010d7e:	45b2                	lw	a1,12(sp)
20010d80:	00006797          	auipc	a5,0x6
20010d84:	4e078793          	addi	a5,a5,1248 # 20017260 <__sf_fake_stdin>
20010d88:	00f59b63          	bne	a1,a5,20010d9e <_fflush_r+0x36>
20010d8c:	404c                	lw	a1,4(s0)
20010d8e:	00c59783          	lh	a5,12(a1)
20010d92:	c795                	beqz	a5,20010dbe <_fflush_r+0x56>
20010d94:	8522                	mv	a0,s0
20010d96:	4462                	lw	s0,24(sp)
20010d98:	40f2                	lw	ra,28(sp)
20010d9a:	6105                	addi	sp,sp,32
20010d9c:	b549                	j	20010c1e <__sflush_r>
20010d9e:	00006797          	auipc	a5,0x6
20010da2:	4e278793          	addi	a5,a5,1250 # 20017280 <__sf_fake_stdout>
20010da6:	00f59463          	bne	a1,a5,20010dae <_fflush_r+0x46>
20010daa:	440c                	lw	a1,8(s0)
20010dac:	b7cd                	j	20010d8e <_fflush_r+0x26>
20010dae:	00006797          	auipc	a5,0x6
20010db2:	49278793          	addi	a5,a5,1170 # 20017240 <__sf_fake_stderr>
20010db6:	fcf59ce3          	bne	a1,a5,20010d8e <_fflush_r+0x26>
20010dba:	444c                	lw	a1,12(s0)
20010dbc:	bfc9                	j	20010d8e <_fflush_r+0x26>
20010dbe:	40f2                	lw	ra,28(sp)
20010dc0:	4462                	lw	s0,24(sp)
20010dc2:	4501                	li	a0,0
20010dc4:	6105                	addi	sp,sp,32
20010dc6:	8082                	ret
20010dc8:	4501                	li	a0,0
20010dca:	8082                	ret

20010dcc <std>:
std():
20010dcc:	1141                	addi	sp,sp,-16
20010dce:	c422                	sw	s0,8(sp)
20010dd0:	c606                	sw	ra,12(sp)
20010dd2:	842a                	mv	s0,a0
20010dd4:	00b51623          	sh	a1,12(a0)
20010dd8:	00c51723          	sh	a2,14(a0)
20010ddc:	00052023          	sw	zero,0(a0)
20010de0:	00052223          	sw	zero,4(a0)
20010de4:	00052423          	sw	zero,8(a0)
20010de8:	06052223          	sw	zero,100(a0)
20010dec:	00052823          	sw	zero,16(a0)
20010df0:	00052a23          	sw	zero,20(a0)
20010df4:	00052c23          	sw	zero,24(a0)
20010df8:	4621                	li	a2,8
20010dfa:	4581                	li	a1,0
20010dfc:	05c50513          	addi	a0,a0,92
20010e00:	32e5                	jal	200107e8 <memset>
20010e02:	00001797          	auipc	a5,0x1
20010e06:	ef878793          	addi	a5,a5,-264 # 20011cfa <__sread>
20010e0a:	d05c                	sw	a5,36(s0)
20010e0c:	00001797          	auipc	a5,0x1
20010e10:	f1e78793          	addi	a5,a5,-226 # 20011d2a <__swrite>
20010e14:	d41c                	sw	a5,40(s0)
20010e16:	00001797          	auipc	a5,0x1
20010e1a:	f6278793          	addi	a5,a5,-158 # 20011d78 <__sseek>
20010e1e:	d45c                	sw	a5,44(s0)
20010e20:	00001797          	auipc	a5,0x1
20010e24:	f8e78793          	addi	a5,a5,-114 # 20011dae <__sclose>
20010e28:	d000                	sw	s0,32(s0)
20010e2a:	d81c                	sw	a5,48(s0)
20010e2c:	40b2                	lw	ra,12(sp)
20010e2e:	4422                	lw	s0,8(sp)
20010e30:	0141                	addi	sp,sp,16
20010e32:	8082                	ret

20010e34 <_cleanup_r>:
_cleanup_r():
20010e34:	00000597          	auipc	a1,0x0
20010e38:	f3458593          	addi	a1,a1,-204 # 20010d68 <_fflush_r>
20010e3c:	aa81                	j	20010f8c <_fwalk_reent>

20010e3e <__sfmoreglue>:
__sfmoreglue():
20010e3e:	1141                	addi	sp,sp,-16
20010e40:	c226                	sw	s1,4(sp)
20010e42:	06800613          	li	a2,104
20010e46:	fff58493          	addi	s1,a1,-1
20010e4a:	02c484b3          	mul	s1,s1,a2
20010e4e:	c04a                	sw	s2,0(sp)
20010e50:	892e                	mv	s2,a1
20010e52:	c422                	sw	s0,8(sp)
20010e54:	c606                	sw	ra,12(sp)
20010e56:	07448593          	addi	a1,s1,116
20010e5a:	2e8d                	jal	200111cc <_malloc_r>
20010e5c:	842a                	mv	s0,a0
20010e5e:	c919                	beqz	a0,20010e74 <__sfmoreglue+0x36>
20010e60:	00052023          	sw	zero,0(a0)
20010e64:	01252223          	sw	s2,4(a0)
20010e68:	0531                	addi	a0,a0,12
20010e6a:	c408                	sw	a0,8(s0)
20010e6c:	06848613          	addi	a2,s1,104
20010e70:	4581                	li	a1,0
20010e72:	3a9d                	jal	200107e8 <memset>
20010e74:	8522                	mv	a0,s0
20010e76:	40b2                	lw	ra,12(sp)
20010e78:	4422                	lw	s0,8(sp)
20010e7a:	4492                	lw	s1,4(sp)
20010e7c:	4902                	lw	s2,0(sp)
20010e7e:	0141                	addi	sp,sp,16
20010e80:	8082                	ret

20010e82 <__sinit>:
__sinit():
20010e82:	4d1c                	lw	a5,24(a0)
20010e84:	e3bd                	bnez	a5,20010eea <__sinit+0x68>
20010e86:	1141                	addi	sp,sp,-16
20010e88:	c606                	sw	ra,12(sp)
20010e8a:	c422                	sw	s0,8(sp)
20010e8c:	00000797          	auipc	a5,0x0
20010e90:	fa878793          	addi	a5,a5,-88 # 20010e34 <_cleanup_r>
20010e94:	d51c                	sw	a5,40(a0)
20010e96:	5fff0797          	auipc	a5,0x5fff0
20010e9a:	bfa78793          	addi	a5,a5,-1030 # 80000a90 <_global_impure_ptr>
20010e9e:	439c                	lw	a5,0(a5)
20010ea0:	04052423          	sw	zero,72(a0)
20010ea4:	04052623          	sw	zero,76(a0)
20010ea8:	04052823          	sw	zero,80(a0)
20010eac:	00f51463          	bne	a0,a5,20010eb4 <__sinit+0x32>
20010eb0:	4785                	li	a5,1
20010eb2:	cd1c                	sw	a5,24(a0)
20010eb4:	842a                	mv	s0,a0
20010eb6:	281d                	jal	20010eec <__sfp>
20010eb8:	c048                	sw	a0,4(s0)
20010eba:	8522                	mv	a0,s0
20010ebc:	2805                	jal	20010eec <__sfp>
20010ebe:	c408                	sw	a0,8(s0)
20010ec0:	8522                	mv	a0,s0
20010ec2:	202d                	jal	20010eec <__sfp>
20010ec4:	c448                	sw	a0,12(s0)
20010ec6:	4048                	lw	a0,4(s0)
20010ec8:	4601                	li	a2,0
20010eca:	4591                	li	a1,4
20010ecc:	3701                	jal	20010dcc <std>
20010ece:	4408                	lw	a0,8(s0)
20010ed0:	4605                	li	a2,1
20010ed2:	45a5                	li	a1,9
20010ed4:	3de5                	jal	20010dcc <std>
20010ed6:	4448                	lw	a0,12(s0)
20010ed8:	4609                	li	a2,2
20010eda:	45c9                	li	a1,18
20010edc:	3dc5                	jal	20010dcc <std>
20010ede:	4785                	li	a5,1
20010ee0:	cc1c                	sw	a5,24(s0)
20010ee2:	40b2                	lw	ra,12(sp)
20010ee4:	4422                	lw	s0,8(sp)
20010ee6:	0141                	addi	sp,sp,16
20010ee8:	8082                	ret
20010eea:	8082                	ret

20010eec <__sfp>:
__sfp():
20010eec:	1141                	addi	sp,sp,-16
20010eee:	5fff0797          	auipc	a5,0x5fff0
20010ef2:	ba278793          	addi	a5,a5,-1118 # 80000a90 <_global_impure_ptr>
20010ef6:	c226                	sw	s1,4(sp)
20010ef8:	4384                	lw	s1,0(a5)
20010efa:	c04a                	sw	s2,0(sp)
20010efc:	c606                	sw	ra,12(sp)
20010efe:	4c9c                	lw	a5,24(s1)
20010f00:	c422                	sw	s0,8(sp)
20010f02:	892a                	mv	s2,a0
20010f04:	e399                	bnez	a5,20010f0a <__sfp+0x1e>
20010f06:	8526                	mv	a0,s1
20010f08:	3fad                	jal	20010e82 <__sinit>
20010f0a:	04848493          	addi	s1,s1,72
20010f0e:	4480                	lw	s0,8(s1)
20010f10:	40dc                	lw	a5,4(s1)
20010f12:	17fd                	addi	a5,a5,-1
20010f14:	0007d663          	bgez	a5,20010f20 <__sfp+0x34>
20010f18:	409c                	lw	a5,0(s1)
20010f1a:	cfb9                	beqz	a5,20010f78 <__sfp+0x8c>
20010f1c:	4084                	lw	s1,0(s1)
20010f1e:	bfc5                	j	20010f0e <__sfp+0x22>
20010f20:	00c41703          	lh	a4,12(s0)
20010f24:	e739                	bnez	a4,20010f72 <__sfp+0x86>
20010f26:	77c1                	lui	a5,0xffff0
20010f28:	0785                	addi	a5,a5,1
20010f2a:	06042223          	sw	zero,100(s0)
20010f2e:	00042023          	sw	zero,0(s0)
20010f32:	00042223          	sw	zero,4(s0)
20010f36:	00042423          	sw	zero,8(s0)
20010f3a:	c45c                	sw	a5,12(s0)
20010f3c:	00042823          	sw	zero,16(s0)
20010f40:	00042a23          	sw	zero,20(s0)
20010f44:	00042c23          	sw	zero,24(s0)
20010f48:	4621                	li	a2,8
20010f4a:	4581                	li	a1,0
20010f4c:	05c40513          	addi	a0,s0,92
20010f50:	899ff0ef          	jal	ra,200107e8 <memset>
20010f54:	02042a23          	sw	zero,52(s0)
20010f58:	02042c23          	sw	zero,56(s0)
20010f5c:	04042423          	sw	zero,72(s0)
20010f60:	04042623          	sw	zero,76(s0)
20010f64:	8522                	mv	a0,s0
20010f66:	40b2                	lw	ra,12(sp)
20010f68:	4422                	lw	s0,8(sp)
20010f6a:	4492                	lw	s1,4(sp)
20010f6c:	4902                	lw	s2,0(sp)
20010f6e:	0141                	addi	sp,sp,16
20010f70:	8082                	ret
20010f72:	06840413          	addi	s0,s0,104
20010f76:	bf71                	j	20010f12 <__sfp+0x26>
20010f78:	4591                	li	a1,4
20010f7a:	854a                	mv	a0,s2
20010f7c:	35c9                	jal	20010e3e <__sfmoreglue>
20010f7e:	c088                	sw	a0,0(s1)
20010f80:	842a                	mv	s0,a0
20010f82:	fd49                	bnez	a0,20010f1c <__sfp+0x30>
20010f84:	47b1                	li	a5,12
20010f86:	00f92023          	sw	a5,0(s2)
20010f8a:	bfe9                	j	20010f64 <__sfp+0x78>

20010f8c <_fwalk_reent>:
_fwalk_reent():
20010f8c:	7179                	addi	sp,sp,-48
20010f8e:	d422                	sw	s0,40(sp)
20010f90:	d04a                	sw	s2,32(sp)
20010f92:	cc52                	sw	s4,24(sp)
20010f94:	ca56                	sw	s5,20(sp)
20010f96:	c85a                	sw	s6,16(sp)
20010f98:	c65e                	sw	s7,12(sp)
20010f9a:	d606                	sw	ra,44(sp)
20010f9c:	d226                	sw	s1,36(sp)
20010f9e:	ce4e                	sw	s3,28(sp)
20010fa0:	8a2a                	mv	s4,a0
20010fa2:	8aae                	mv	s5,a1
20010fa4:	04850413          	addi	s0,a0,72
20010fa8:	4901                	li	s2,0
20010faa:	4b05                	li	s6,1
20010fac:	5bfd                	li	s7,-1
20010fae:	ec09                	bnez	s0,20010fc8 <_fwalk_reent+0x3c>
20010fb0:	50b2                	lw	ra,44(sp)
20010fb2:	5422                	lw	s0,40(sp)
20010fb4:	854a                	mv	a0,s2
20010fb6:	5492                	lw	s1,36(sp)
20010fb8:	5902                	lw	s2,32(sp)
20010fba:	49f2                	lw	s3,28(sp)
20010fbc:	4a62                	lw	s4,24(sp)
20010fbe:	4ad2                	lw	s5,20(sp)
20010fc0:	4b42                	lw	s6,16(sp)
20010fc2:	4bb2                	lw	s7,12(sp)
20010fc4:	6145                	addi	sp,sp,48
20010fc6:	8082                	ret
20010fc8:	4404                	lw	s1,8(s0)
20010fca:	00442983          	lw	s3,4(s0)
20010fce:	19fd                	addi	s3,s3,-1
20010fd0:	0009d463          	bgez	s3,20010fd8 <_fwalk_reent+0x4c>
20010fd4:	4000                	lw	s0,0(s0)
20010fd6:	bfe1                	j	20010fae <_fwalk_reent+0x22>
20010fd8:	00c4d783          	lhu	a5,12(s1)
20010fdc:	00fb7b63          	bgeu	s6,a5,20010ff2 <_fwalk_reent+0x66>
20010fe0:	00e49783          	lh	a5,14(s1)
20010fe4:	01778763          	beq	a5,s7,20010ff2 <_fwalk_reent+0x66>
20010fe8:	85a6                	mv	a1,s1
20010fea:	8552                	mv	a0,s4
20010fec:	9a82                	jalr	s5
20010fee:	00a96933          	or	s2,s2,a0
20010ff2:	06848493          	addi	s1,s1,104
20010ff6:	bfe1                	j	20010fce <_fwalk_reent+0x42>

20010ff8 <_gettimeofday_r>:
_gettimeofday_r():
20010ff8:	1141                	addi	sp,sp,-16
20010ffa:	c422                	sw	s0,8(sp)
20010ffc:	842a                	mv	s0,a0
20010ffe:	852e                	mv	a0,a1
20011000:	85b2                	mv	a1,a2
20011002:	8e01a223          	sw	zero,-1820(gp) # 80000b6c <errno>
20011006:	c606                	sw	ra,12(sp)
20011008:	584050ef          	jal	ra,2001658c <_gettimeofday>
2001100c:	57fd                	li	a5,-1
2001100e:	00f51763          	bne	a0,a5,2001101c <_gettimeofday_r+0x24>
20011012:	8e418793          	addi	a5,gp,-1820 # 80000b6c <errno>
20011016:	439c                	lw	a5,0(a5)
20011018:	c391                	beqz	a5,2001101c <_gettimeofday_r+0x24>
2001101a:	c01c                	sw	a5,0(s0)
2001101c:	40b2                	lw	ra,12(sp)
2001101e:	4422                	lw	s0,8(sp)
20011020:	0141                	addi	sp,sp,16
20011022:	8082                	ret

20011024 <__swhatbuf_r>:
__swhatbuf_r():
20011024:	7119                	addi	sp,sp,-128
20011026:	daa6                	sw	s1,116(sp)
20011028:	84ae                	mv	s1,a1
2001102a:	00e59583          	lh	a1,14(a1)
2001102e:	dca2                	sw	s0,120(sp)
20011030:	de86                	sw	ra,124(sp)
20011032:	8432                	mv	s0,a2
20011034:	0005dc63          	bgez	a1,2001104c <__swhatbuf_r+0x28>
20011038:	00c4d783          	lhu	a5,12(s1)
2001103c:	0006a023          	sw	zero,0(a3)
20011040:	0807f793          	andi	a5,a5,128
20011044:	e785                	bnez	a5,2001106c <__swhatbuf_r+0x48>
20011046:	40000793          	li	a5,1024
2001104a:	a01d                	j	20011070 <__swhatbuf_r+0x4c>
2001104c:	0830                	addi	a2,sp,24
2001104e:	c636                	sw	a3,12(sp)
20011050:	5bd000ef          	jal	ra,20011e0c <_fstat_r>
20011054:	46b2                	lw	a3,12(sp)
20011056:	fe0541e3          	bltz	a0,20011038 <__swhatbuf_r+0x14>
2001105a:	4772                	lw	a4,28(sp)
2001105c:	67bd                	lui	a5,0xf
2001105e:	8ff9                	and	a5,a5,a4
20011060:	7779                	lui	a4,0xffffe
20011062:	97ba                	add	a5,a5,a4
20011064:	0017b793          	seqz	a5,a5
20011068:	c29c                	sw	a5,0(a3)
2001106a:	bff1                	j	20011046 <__swhatbuf_r+0x22>
2001106c:	04000793          	li	a5,64
20011070:	c01c                	sw	a5,0(s0)
20011072:	50f6                	lw	ra,124(sp)
20011074:	5466                	lw	s0,120(sp)
20011076:	54d6                	lw	s1,116(sp)
20011078:	4501                	li	a0,0
2001107a:	6109                	addi	sp,sp,128
2001107c:	8082                	ret

2001107e <__smakebuf_r>:
__smakebuf_r():
2001107e:	00c5d783          	lhu	a5,12(a1)
20011082:	1101                	addi	sp,sp,-32
20011084:	cc22                	sw	s0,24(sp)
20011086:	ce06                	sw	ra,28(sp)
20011088:	ca26                	sw	s1,20(sp)
2001108a:	c84a                	sw	s2,16(sp)
2001108c:	8b89                	andi	a5,a5,2
2001108e:	842e                	mv	s0,a1
20011090:	cf89                	beqz	a5,200110aa <__smakebuf_r+0x2c>
20011092:	04740793          	addi	a5,s0,71
20011096:	c01c                	sw	a5,0(s0)
20011098:	c81c                	sw	a5,16(s0)
2001109a:	4785                	li	a5,1
2001109c:	c85c                	sw	a5,20(s0)
2001109e:	40f2                	lw	ra,28(sp)
200110a0:	4462                	lw	s0,24(sp)
200110a2:	44d2                	lw	s1,20(sp)
200110a4:	4942                	lw	s2,16(sp)
200110a6:	6105                	addi	sp,sp,32
200110a8:	8082                	ret
200110aa:	0074                	addi	a3,sp,12
200110ac:	0030                	addi	a2,sp,8
200110ae:	84aa                	mv	s1,a0
200110b0:	3f95                	jal	20011024 <__swhatbuf_r>
200110b2:	45a2                	lw	a1,8(sp)
200110b4:	892a                	mv	s2,a0
200110b6:	8526                	mv	a0,s1
200110b8:	2a11                	jal	200111cc <_malloc_r>
200110ba:	ed01                	bnez	a0,200110d2 <__smakebuf_r+0x54>
200110bc:	00c41783          	lh	a5,12(s0)
200110c0:	2007f713          	andi	a4,a5,512
200110c4:	ff69                	bnez	a4,2001109e <__smakebuf_r+0x20>
200110c6:	9bf1                	andi	a5,a5,-4
200110c8:	0027e793          	ori	a5,a5,2
200110cc:	00f41623          	sh	a5,12(s0)
200110d0:	b7c9                	j	20011092 <__smakebuf_r+0x14>
200110d2:	00000797          	auipc	a5,0x0
200110d6:	d6278793          	addi	a5,a5,-670 # 20010e34 <_cleanup_r>
200110da:	d49c                	sw	a5,40(s1)
200110dc:	00c45783          	lhu	a5,12(s0)
200110e0:	c008                	sw	a0,0(s0)
200110e2:	c808                	sw	a0,16(s0)
200110e4:	0807e793          	ori	a5,a5,128
200110e8:	00f41623          	sh	a5,12(s0)
200110ec:	47a2                	lw	a5,8(sp)
200110ee:	c85c                	sw	a5,20(s0)
200110f0:	47b2                	lw	a5,12(sp)
200110f2:	cf91                	beqz	a5,2001110e <__smakebuf_r+0x90>
200110f4:	00e41583          	lh	a1,14(s0)
200110f8:	8526                	mv	a0,s1
200110fa:	53f000ef          	jal	ra,20011e38 <_isatty_r>
200110fe:	c901                	beqz	a0,2001110e <__smakebuf_r+0x90>
20011100:	00c45783          	lhu	a5,12(s0)
20011104:	9bf1                	andi	a5,a5,-4
20011106:	0017e793          	ori	a5,a5,1
2001110a:	00f41623          	sh	a5,12(s0)
2001110e:	00c45783          	lhu	a5,12(s0)
20011112:	00f96933          	or	s2,s2,a5
20011116:	01241623          	sh	s2,12(s0)
2001111a:	b751                	j	2001109e <__smakebuf_r+0x20>

2001111c <_free_r>:
_free_r():
2001111c:	c5dd                	beqz	a1,200111ca <_free_r+0xae>
2001111e:	ffc5a783          	lw	a5,-4(a1)
20011122:	1141                	addi	sp,sp,-16
20011124:	c422                	sw	s0,8(sp)
20011126:	c606                	sw	ra,12(sp)
20011128:	c226                	sw	s1,4(sp)
2001112a:	ffc58413          	addi	s0,a1,-4
2001112e:	0007d363          	bgez	a5,20011134 <_free_r+0x18>
20011132:	943e                	add	s0,s0,a5
20011134:	84aa                	mv	s1,a0
20011136:	675000ef          	jal	ra,20011faa <__malloc_lock>
2001113a:	5fff0797          	auipc	a5,0x5fff0
2001113e:	99a78793          	addi	a5,a5,-1638 # 80000ad4 <__malloc_free_list>
20011142:	439c                	lw	a5,0(a5)
20011144:	ef91                	bnez	a5,20011160 <_free_r+0x44>
20011146:	00042223          	sw	zero,4(s0)
2001114a:	5fff0797          	auipc	a5,0x5fff0
2001114e:	9887a523          	sw	s0,-1654(a5) # 80000ad4 <__malloc_free_list>
20011152:	4422                	lw	s0,8(sp)
20011154:	40b2                	lw	ra,12(sp)
20011156:	8526                	mv	a0,s1
20011158:	4492                	lw	s1,4(sp)
2001115a:	0141                	addi	sp,sp,16
2001115c:	6510006f          	j	20011fac <__malloc_unlock>
20011160:	00f47e63          	bgeu	s0,a5,2001117c <_free_r+0x60>
20011164:	4014                	lw	a3,0(s0)
20011166:	00d40733          	add	a4,s0,a3
2001116a:	00e79663          	bne	a5,a4,20011176 <_free_r+0x5a>
2001116e:	4398                	lw	a4,0(a5)
20011170:	43dc                	lw	a5,4(a5)
20011172:	9736                	add	a4,a4,a3
20011174:	c018                	sw	a4,0(s0)
20011176:	c05c                	sw	a5,4(s0)
20011178:	bfc9                	j	2001114a <_free_r+0x2e>
2001117a:	87ba                	mv	a5,a4
2001117c:	43d8                	lw	a4,4(a5)
2001117e:	c319                	beqz	a4,20011184 <_free_r+0x68>
20011180:	fee47de3          	bgeu	s0,a4,2001117a <_free_r+0x5e>
20011184:	4394                	lw	a3,0(a5)
20011186:	00d78633          	add	a2,a5,a3
2001118a:	00861f63          	bne	a2,s0,200111a8 <_free_r+0x8c>
2001118e:	4010                	lw	a2,0(s0)
20011190:	96b2                	add	a3,a3,a2
20011192:	c394                	sw	a3,0(a5)
20011194:	00d78633          	add	a2,a5,a3
20011198:	fac71de3          	bne	a4,a2,20011152 <_free_r+0x36>
2001119c:	4310                	lw	a2,0(a4)
2001119e:	4358                	lw	a4,4(a4)
200111a0:	96b2                	add	a3,a3,a2
200111a2:	c394                	sw	a3,0(a5)
200111a4:	c3d8                	sw	a4,4(a5)
200111a6:	b775                	j	20011152 <_free_r+0x36>
200111a8:	00c47563          	bgeu	s0,a2,200111b2 <_free_r+0x96>
200111ac:	47b1                	li	a5,12
200111ae:	c09c                	sw	a5,0(s1)
200111b0:	b74d                	j	20011152 <_free_r+0x36>
200111b2:	4010                	lw	a2,0(s0)
200111b4:	00c406b3          	add	a3,s0,a2
200111b8:	00d71663          	bne	a4,a3,200111c4 <_free_r+0xa8>
200111bc:	4314                	lw	a3,0(a4)
200111be:	4358                	lw	a4,4(a4)
200111c0:	96b2                	add	a3,a3,a2
200111c2:	c014                	sw	a3,0(s0)
200111c4:	c058                	sw	a4,4(s0)
200111c6:	c3c0                	sw	s0,4(a5)
200111c8:	b769                	j	20011152 <_free_r+0x36>
200111ca:	8082                	ret

200111cc <_malloc_r>:
_malloc_r():
200111cc:	1101                	addi	sp,sp,-32
200111ce:	ca26                	sw	s1,20(sp)
200111d0:	00358493          	addi	s1,a1,3
200111d4:	98f1                	andi	s1,s1,-4
200111d6:	ce06                	sw	ra,28(sp)
200111d8:	cc22                	sw	s0,24(sp)
200111da:	c84a                	sw	s2,16(sp)
200111dc:	c64e                	sw	s3,12(sp)
200111de:	04a1                	addi	s1,s1,8
200111e0:	47b1                	li	a5,12
200111e2:	04f4fb63          	bgeu	s1,a5,20011238 <_malloc_r+0x6c>
200111e6:	44b1                	li	s1,12
200111e8:	04b4ea63          	bltu	s1,a1,2001123c <_malloc_r+0x70>
200111ec:	892a                	mv	s2,a0
200111ee:	5bd000ef          	jal	ra,20011faa <__malloc_lock>
200111f2:	5fff0797          	auipc	a5,0x5fff0
200111f6:	8e278793          	addi	a5,a5,-1822 # 80000ad4 <__malloc_free_list>
200111fa:	4398                	lw	a4,0(a5)
200111fc:	843a                	mv	s0,a4
200111fe:	e829                	bnez	s0,20011250 <_malloc_r+0x84>
20011200:	5fff0797          	auipc	a5,0x5fff0
20011204:	8d878793          	addi	a5,a5,-1832 # 80000ad8 <__malloc_sbrk_start>
20011208:	439c                	lw	a5,0(a5)
2001120a:	eb89                	bnez	a5,2001121c <_malloc_r+0x50>
2001120c:	4581                	li	a1,0
2001120e:	854a                	mv	a0,s2
20011210:	2c1000ef          	jal	ra,20011cd0 <_sbrk_r>
20011214:	5fff0797          	auipc	a5,0x5fff0
20011218:	8ca7a223          	sw	a0,-1852(a5) # 80000ad8 <__malloc_sbrk_start>
2001121c:	85a6                	mv	a1,s1
2001121e:	854a                	mv	a0,s2
20011220:	2b1000ef          	jal	ra,20011cd0 <_sbrk_r>
20011224:	59fd                	li	s3,-1
20011226:	07351b63          	bne	a0,s3,2001129c <_malloc_r+0xd0>
2001122a:	47b1                	li	a5,12
2001122c:	00f92023          	sw	a5,0(s2)
20011230:	854a                	mv	a0,s2
20011232:	57b000ef          	jal	ra,20011fac <__malloc_unlock>
20011236:	a029                	j	20011240 <_malloc_r+0x74>
20011238:	fa04d8e3          	bgez	s1,200111e8 <_malloc_r+0x1c>
2001123c:	47b1                	li	a5,12
2001123e:	c11c                	sw	a5,0(a0)
20011240:	4501                	li	a0,0
20011242:	40f2                	lw	ra,28(sp)
20011244:	4462                	lw	s0,24(sp)
20011246:	44d2                	lw	s1,20(sp)
20011248:	4942                	lw	s2,16(sp)
2001124a:	49b2                	lw	s3,12(sp)
2001124c:	6105                	addi	sp,sp,32
2001124e:	8082                	ret
20011250:	401c                	lw	a5,0(s0)
20011252:	8f85                	sub	a5,a5,s1
20011254:	0407c163          	bltz	a5,20011296 <_malloc_r+0xca>
20011258:	46ad                	li	a3,11
2001125a:	00f6f663          	bgeu	a3,a5,20011266 <_malloc_r+0x9a>
2001125e:	c01c                	sw	a5,0(s0)
20011260:	943e                	add	s0,s0,a5
20011262:	c004                	sw	s1,0(s0)
20011264:	a801                	j	20011274 <_malloc_r+0xa8>
20011266:	405c                	lw	a5,4(s0)
20011268:	02871563          	bne	a4,s0,20011292 <_malloc_r+0xc6>
2001126c:	5fff0717          	auipc	a4,0x5fff0
20011270:	86f72423          	sw	a5,-1944(a4) # 80000ad4 <__malloc_free_list>
20011274:	854a                	mv	a0,s2
20011276:	537000ef          	jal	ra,20011fac <__malloc_unlock>
2001127a:	00b40513          	addi	a0,s0,11
2001127e:	00440793          	addi	a5,s0,4
20011282:	9961                	andi	a0,a0,-8
20011284:	40f50733          	sub	a4,a0,a5
20011288:	df4d                	beqz	a4,20011242 <_malloc_r+0x76>
2001128a:	943a                	add	s0,s0,a4
2001128c:	8f89                	sub	a5,a5,a0
2001128e:	c01c                	sw	a5,0(s0)
20011290:	bf4d                	j	20011242 <_malloc_r+0x76>
20011292:	c35c                	sw	a5,4(a4)
20011294:	b7c5                	j	20011274 <_malloc_r+0xa8>
20011296:	8722                	mv	a4,s0
20011298:	4040                	lw	s0,4(s0)
2001129a:	b795                	j	200111fe <_malloc_r+0x32>
2001129c:	00350413          	addi	s0,a0,3
200112a0:	9871                	andi	s0,s0,-4
200112a2:	fc8500e3          	beq	a0,s0,20011262 <_malloc_r+0x96>
200112a6:	40a405b3          	sub	a1,s0,a0
200112aa:	854a                	mv	a0,s2
200112ac:	225000ef          	jal	ra,20011cd0 <_sbrk_r>
200112b0:	fb3519e3          	bne	a0,s3,20011262 <_malloc_r+0x96>
200112b4:	bf9d                	j	2001122a <_malloc_r+0x5e>

200112b6 <__ssputs_r>:
__ssputs_r():
200112b6:	1101                	addi	sp,sp,-32
200112b8:	c84a                	sw	s2,16(sp)
200112ba:	0085a903          	lw	s2,8(a1)
200112be:	cc22                	sw	s0,24(sp)
200112c0:	c452                	sw	s4,8(sp)
200112c2:	c05a                	sw	s6,0(sp)
200112c4:	ce06                	sw	ra,28(sp)
200112c6:	ca26                	sw	s1,20(sp)
200112c8:	c64e                	sw	s3,12(sp)
200112ca:	c256                	sw	s5,4(sp)
200112cc:	842e                	mv	s0,a1
200112ce:	8b32                	mv	s6,a2
200112d0:	8a36                	mv	s4,a3
200112d2:	0926ed63          	bltu	a3,s2,2001136c <__ssputs_r+0xb6>
200112d6:	00c5d783          	lhu	a5,12(a1)
200112da:	4807f713          	andi	a4,a5,1152
200112de:	c749                	beqz	a4,20011368 <__ssputs_r+0xb2>
200112e0:	4004                	lw	s1,0(s0)
200112e2:	498c                	lw	a1,16(a1)
200112e4:	4858                	lw	a4,20(s0)
200112e6:	8aaa                	mv	s5,a0
200112e8:	40b489b3          	sub	s3,s1,a1
200112ec:	448d                	li	s1,3
200112ee:	02e484b3          	mul	s1,s1,a4
200112f2:	4709                	li	a4,2
200112f4:	02e4c4b3          	div	s1,s1,a4
200112f8:	00168713          	addi	a4,a3,1
200112fc:	974e                	add	a4,a4,s3
200112fe:	00e4f363          	bgeu	s1,a4,20011304 <__ssputs_r+0x4e>
20011302:	84ba                	mv	s1,a4
20011304:	4007f793          	andi	a5,a5,1024
20011308:	c3d1                	beqz	a5,2001138c <__ssputs_r+0xd6>
2001130a:	85a6                	mv	a1,s1
2001130c:	8556                	mv	a0,s5
2001130e:	3d7d                	jal	200111cc <_malloc_r>
20011310:	892a                	mv	s2,a0
20011312:	e50d                	bnez	a0,2001133c <__ssputs_r+0x86>
20011314:	47b1                	li	a5,12
20011316:	00faa023          	sw	a5,0(s5)
2001131a:	00c45783          	lhu	a5,12(s0)
2001131e:	557d                	li	a0,-1
20011320:	0407e793          	ori	a5,a5,64
20011324:	00f41623          	sh	a5,12(s0)
20011328:	40f2                	lw	ra,28(sp)
2001132a:	4462                	lw	s0,24(sp)
2001132c:	44d2                	lw	s1,20(sp)
2001132e:	4942                	lw	s2,16(sp)
20011330:	49b2                	lw	s3,12(sp)
20011332:	4a22                	lw	s4,8(sp)
20011334:	4a92                	lw	s5,4(sp)
20011336:	4b02                	lw	s6,0(sp)
20011338:	6105                	addi	sp,sp,32
2001133a:	8082                	ret
2001133c:	480c                	lw	a1,16(s0)
2001133e:	864e                	mv	a2,s3
20011340:	36b000ef          	jal	ra,20011eaa <memcpy>
20011344:	00c45783          	lhu	a5,12(s0)
20011348:	b7f7f793          	andi	a5,a5,-1153
2001134c:	0807e793          	ori	a5,a5,128
20011350:	00f41623          	sh	a5,12(s0)
20011354:	01242823          	sw	s2,16(s0)
20011358:	c844                	sw	s1,20(s0)
2001135a:	994e                	add	s2,s2,s3
2001135c:	413484b3          	sub	s1,s1,s3
20011360:	01242023          	sw	s2,0(s0)
20011364:	c404                	sw	s1,8(s0)
20011366:	8952                	mv	s2,s4
20011368:	012a7363          	bgeu	s4,s2,2001136e <__ssputs_r+0xb8>
2001136c:	8952                	mv	s2,s4
2001136e:	4008                	lw	a0,0(s0)
20011370:	864a                	mv	a2,s2
20011372:	85da                	mv	a1,s6
20011374:	3ed000ef          	jal	ra,20011f60 <memmove>
20011378:	441c                	lw	a5,8(s0)
2001137a:	4501                	li	a0,0
2001137c:	412787b3          	sub	a5,a5,s2
20011380:	c41c                	sw	a5,8(s0)
20011382:	401c                	lw	a5,0(s0)
20011384:	993e                	add	s2,s2,a5
20011386:	01242023          	sw	s2,0(s0)
2001138a:	bf79                	j	20011328 <__ssputs_r+0x72>
2001138c:	8626                	mv	a2,s1
2001138e:	8556                	mv	a0,s5
20011390:	41f000ef          	jal	ra,20011fae <_realloc_r>
20011394:	892a                	mv	s2,a0
20011396:	fd5d                	bnez	a0,20011354 <__ssputs_r+0x9e>
20011398:	480c                	lw	a1,16(s0)
2001139a:	8556                	mv	a0,s5
2001139c:	3341                	jal	2001111c <_free_r>
2001139e:	bf9d                	j	20011314 <__ssputs_r+0x5e>

200113a0 <_svfiprintf_r>:
_svfprintf_r():
200113a0:	00c5d783          	lhu	a5,12(a1)
200113a4:	7171                	addi	sp,sp,-176
200113a6:	d326                	sw	s1,164(sp)
200113a8:	d14a                	sw	s2,160(sp)
200113aa:	cf4e                	sw	s3,156(sp)
200113ac:	d706                	sw	ra,172(sp)
200113ae:	d522                	sw	s0,168(sp)
200113b0:	cd52                	sw	s4,152(sp)
200113b2:	cb56                	sw	s5,148(sp)
200113b4:	c95a                	sw	s6,144(sp)
200113b6:	c75e                	sw	s7,140(sp)
200113b8:	c562                	sw	s8,136(sp)
200113ba:	c366                	sw	s9,132(sp)
200113bc:	0807f793          	andi	a5,a5,128
200113c0:	89aa                	mv	s3,a0
200113c2:	892e                	mv	s2,a1
200113c4:	84b2                	mv	s1,a2
200113c6:	c3b1                	beqz	a5,2001140a <_svfiprintf_r+0x6a>
200113c8:	499c                	lw	a5,16(a1)
200113ca:	e3a1                	bnez	a5,2001140a <_svfiprintf_r+0x6a>
200113cc:	04000593          	li	a1,64
200113d0:	c636                	sw	a3,12(sp)
200113d2:	3bed                	jal	200111cc <_malloc_r>
200113d4:	00a92023          	sw	a0,0(s2)
200113d8:	00a92823          	sw	a0,16(s2)
200113dc:	46b2                	lw	a3,12(sp)
200113de:	e115                	bnez	a0,20011402 <_svfiprintf_r+0x62>
200113e0:	47b1                	li	a5,12
200113e2:	00f9a023          	sw	a5,0(s3)
200113e6:	557d                	li	a0,-1
200113e8:	50ba                	lw	ra,172(sp)
200113ea:	542a                	lw	s0,168(sp)
200113ec:	549a                	lw	s1,164(sp)
200113ee:	590a                	lw	s2,160(sp)
200113f0:	49fa                	lw	s3,156(sp)
200113f2:	4a6a                	lw	s4,152(sp)
200113f4:	4ada                	lw	s5,148(sp)
200113f6:	4b4a                	lw	s6,144(sp)
200113f8:	4bba                	lw	s7,140(sp)
200113fa:	4c2a                	lw	s8,136(sp)
200113fc:	4c9a                	lw	s9,132(sp)
200113fe:	614d                	addi	sp,sp,176
20011400:	8082                	ret
20011402:	04000793          	li	a5,64
20011406:	00f92a23          	sw	a5,20(s2)
2001140a:	02000793          	li	a5,32
2001140e:	02f10ca3          	sb	a5,57(sp)
20011412:	03000793          	li	a5,48
20011416:	da02                	sw	zero,52(sp)
20011418:	02f10d23          	sb	a5,58(sp)
2001141c:	ce36                	sw	a3,28(sp)
2001141e:	02500b93          	li	s7,37
20011422:	00006a97          	auipc	s5,0x6
20011426:	e7ea8a93          	addi	s5,s5,-386 # 200172a0 <__sf_fake_stdout+0x20>
2001142a:	4c05                	li	s8,1
2001142c:	4b29                	li	s6,10
2001142e:	8426                	mv	s0,s1
20011430:	00044783          	lbu	a5,0(s0)
20011434:	c399                	beqz	a5,2001143a <_svfiprintf_r+0x9a>
20011436:	09779c63          	bne	a5,s7,200114ce <_svfiprintf_r+0x12e>
2001143a:	40940cb3          	sub	s9,s0,s1
2001143e:	000c8d63          	beqz	s9,20011458 <_svfiprintf_r+0xb8>
20011442:	86e6                	mv	a3,s9
20011444:	8626                	mv	a2,s1
20011446:	85ca                	mv	a1,s2
20011448:	854e                	mv	a0,s3
2001144a:	35b5                	jal	200112b6 <__ssputs_r>
2001144c:	57fd                	li	a5,-1
2001144e:	1af50463          	beq	a0,a5,200115f6 <_svfiprintf_r+0x256>
20011452:	56d2                	lw	a3,52(sp)
20011454:	96e6                	add	a3,a3,s9
20011456:	da36                	sw	a3,52(sp)
20011458:	00044783          	lbu	a5,0(s0)
2001145c:	18078d63          	beqz	a5,200115f6 <_svfiprintf_r+0x256>
20011460:	57fd                	li	a5,-1
20011462:	00140493          	addi	s1,s0,1
20011466:	d002                	sw	zero,32(sp)
20011468:	d602                	sw	zero,44(sp)
2001146a:	d23e                	sw	a5,36(sp)
2001146c:	d402                	sw	zero,40(sp)
2001146e:	060101a3          	sb	zero,99(sp)
20011472:	dc82                	sw	zero,120(sp)
20011474:	0004c583          	lbu	a1,0(s1)
20011478:	4615                	li	a2,5
2001147a:	8556                	mv	a0,s5
2001147c:	215000ef          	jal	ra,20011e90 <memchr>
20011480:	00148413          	addi	s0,s1,1
20011484:	5782                	lw	a5,32(sp)
20011486:	e531                	bnez	a0,200114d2 <_svfiprintf_r+0x132>
20011488:	0107f713          	andi	a4,a5,16
2001148c:	c709                	beqz	a4,20011496 <_svfiprintf_r+0xf6>
2001148e:	02000713          	li	a4,32
20011492:	06e101a3          	sb	a4,99(sp)
20011496:	0087f713          	andi	a4,a5,8
2001149a:	c709                	beqz	a4,200114a4 <_svfiprintf_r+0x104>
2001149c:	02b00713          	li	a4,43
200114a0:	06e101a3          	sb	a4,99(sp)
200114a4:	0004c683          	lbu	a3,0(s1)
200114a8:	02a00713          	li	a4,42
200114ac:	02e68b63          	beq	a3,a4,200114e2 <_svfiprintf_r+0x142>
200114b0:	57b2                	lw	a5,44(sp)
200114b2:	8426                	mv	s0,s1
200114b4:	4681                	li	a3,0
200114b6:	4625                	li	a2,9
200114b8:	00044703          	lbu	a4,0(s0)
200114bc:	00140593          	addi	a1,s0,1
200114c0:	fd070713          	addi	a4,a4,-48
200114c4:	06e67463          	bgeu	a2,a4,2001152c <_svfiprintf_r+0x18c>
200114c8:	c68d                	beqz	a3,200114f2 <_svfiprintf_r+0x152>
200114ca:	d63e                	sw	a5,44(sp)
200114cc:	a01d                	j	200114f2 <_svfiprintf_r+0x152>
200114ce:	0405                	addi	s0,s0,1
200114d0:	b785                	j	20011430 <_svfiprintf_r+0x90>
200114d2:	41550533          	sub	a0,a0,s5
200114d6:	00ac1533          	sll	a0,s8,a0
200114da:	8fc9                	or	a5,a5,a0
200114dc:	d03e                	sw	a5,32(sp)
200114de:	84a2                	mv	s1,s0
200114e0:	bf51                	j	20011474 <_svfiprintf_r+0xd4>
200114e2:	4772                	lw	a4,28(sp)
200114e4:	00470693          	addi	a3,a4,4
200114e8:	4318                	lw	a4,0(a4)
200114ea:	ce36                	sw	a3,28(sp)
200114ec:	02074963          	bltz	a4,2001151e <_svfiprintf_r+0x17e>
200114f0:	d63a                	sw	a4,44(sp)
200114f2:	00044703          	lbu	a4,0(s0)
200114f6:	02e00793          	li	a5,46
200114fa:	04f71f63          	bne	a4,a5,20011558 <_svfiprintf_r+0x1b8>
200114fe:	00144703          	lbu	a4,1(s0)
20011502:	02a00793          	li	a5,42
20011506:	02f71b63          	bne	a4,a5,2001153c <_svfiprintf_r+0x19c>
2001150a:	47f2                	lw	a5,28(sp)
2001150c:	0409                	addi	s0,s0,2
2001150e:	00478713          	addi	a4,a5,4
20011512:	439c                	lw	a5,0(a5)
20011514:	ce3a                	sw	a4,28(sp)
20011516:	0207c163          	bltz	a5,20011538 <_svfiprintf_r+0x198>
2001151a:	d23e                	sw	a5,36(sp)
2001151c:	a835                	j	20011558 <_svfiprintf_r+0x1b8>
2001151e:	40e00733          	neg	a4,a4
20011522:	0027e793          	ori	a5,a5,2
20011526:	d63a                	sw	a4,44(sp)
20011528:	d03e                	sw	a5,32(sp)
2001152a:	b7e1                	j	200114f2 <_svfiprintf_r+0x152>
2001152c:	036787b3          	mul	a5,a5,s6
20011530:	4685                	li	a3,1
20011532:	842e                	mv	s0,a1
20011534:	97ba                	add	a5,a5,a4
20011536:	b749                	j	200114b8 <_svfiprintf_r+0x118>
20011538:	57fd                	li	a5,-1
2001153a:	b7c5                	j	2001151a <_svfiprintf_r+0x17a>
2001153c:	0405                	addi	s0,s0,1
2001153e:	d202                	sw	zero,36(sp)
20011540:	4681                	li	a3,0
20011542:	4781                	li	a5,0
20011544:	4625                	li	a2,9
20011546:	00044703          	lbu	a4,0(s0)
2001154a:	00140593          	addi	a1,s0,1
2001154e:	fd070713          	addi	a4,a4,-48
20011552:	06e67863          	bgeu	a2,a4,200115c2 <_svfiprintf_r+0x222>
20011556:	f2f1                	bnez	a3,2001151a <_svfiprintf_r+0x17a>
20011558:	00044583          	lbu	a1,0(s0)
2001155c:	460d                	li	a2,3
2001155e:	00006517          	auipc	a0,0x6
20011562:	d4a50513          	addi	a0,a0,-694 # 200172a8 <__sf_fake_stdout+0x28>
20011566:	12b000ef          	jal	ra,20011e90 <memchr>
2001156a:	cd11                	beqz	a0,20011586 <_svfiprintf_r+0x1e6>
2001156c:	00006797          	auipc	a5,0x6
20011570:	d3c78793          	addi	a5,a5,-708 # 200172a8 <__sf_fake_stdout+0x28>
20011574:	8d1d                	sub	a0,a0,a5
20011576:	04000793          	li	a5,64
2001157a:	00a797b3          	sll	a5,a5,a0
2001157e:	5502                	lw	a0,32(sp)
20011580:	0405                	addi	s0,s0,1
20011582:	8d5d                	or	a0,a0,a5
20011584:	d02a                	sw	a0,32(sp)
20011586:	00044583          	lbu	a1,0(s0)
2001158a:	4619                	li	a2,6
2001158c:	00006517          	auipc	a0,0x6
20011590:	d2050513          	addi	a0,a0,-736 # 200172ac <__sf_fake_stdout+0x2c>
20011594:	00140493          	addi	s1,s0,1
20011598:	02b10c23          	sb	a1,56(sp)
2001159c:	0f5000ef          	jal	ra,20011e90 <memchr>
200115a0:	c525                	beqz	a0,20011608 <_svfiprintf_r+0x268>
200115a2:	dffef797          	auipc	a5,0xdffef
200115a6:	a5e78793          	addi	a5,a5,-1442 # 0 <__metal_boot_hart>
200115aa:	e795                	bnez	a5,200115d6 <_svfiprintf_r+0x236>
200115ac:	5702                	lw	a4,32(sp)
200115ae:	47f2                	lw	a5,28(sp)
200115b0:	10077713          	andi	a4,a4,256
200115b4:	cf09                	beqz	a4,200115ce <_svfiprintf_r+0x22e>
200115b6:	0791                	addi	a5,a5,4
200115b8:	ce3e                	sw	a5,28(sp)
200115ba:	57d2                	lw	a5,52(sp)
200115bc:	97d2                	add	a5,a5,s4
200115be:	da3e                	sw	a5,52(sp)
200115c0:	b5bd                	j	2001142e <_svfiprintf_r+0x8e>
200115c2:	036787b3          	mul	a5,a5,s6
200115c6:	4685                	li	a3,1
200115c8:	842e                	mv	s0,a1
200115ca:	97ba                	add	a5,a5,a4
200115cc:	bfad                	j	20011546 <_svfiprintf_r+0x1a6>
200115ce:	079d                	addi	a5,a5,7
200115d0:	9be1                	andi	a5,a5,-8
200115d2:	07a1                	addi	a5,a5,8
200115d4:	b7d5                	j	200115b8 <_svfiprintf_r+0x218>
200115d6:	0878                	addi	a4,sp,28
200115d8:	00000697          	auipc	a3,0x0
200115dc:	cde68693          	addi	a3,a3,-802 # 200112b6 <__ssputs_r>
200115e0:	864a                	mv	a2,s2
200115e2:	100c                	addi	a1,sp,32
200115e4:	854e                	mv	a0,s3
200115e6:	00000097          	auipc	ra,0x0
200115ea:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
200115ee:	57fd                	li	a5,-1
200115f0:	8a2a                	mv	s4,a0
200115f2:	fcf514e3          	bne	a0,a5,200115ba <_svfiprintf_r+0x21a>
200115f6:	00c95783          	lhu	a5,12(s2)
200115fa:	557d                	li	a0,-1
200115fc:	0407f793          	andi	a5,a5,64
20011600:	de0794e3          	bnez	a5,200113e8 <_svfiprintf_r+0x48>
20011604:	5552                	lw	a0,52(sp)
20011606:	b3cd                	j	200113e8 <_svfiprintf_r+0x48>
20011608:	0878                	addi	a4,sp,28
2001160a:	00000697          	auipc	a3,0x0
2001160e:	cac68693          	addi	a3,a3,-852 # 200112b6 <__ssputs_r>
20011612:	864a                	mv	a2,s2
20011614:	100c                	addi	a1,sp,32
20011616:	854e                	mv	a0,s3
20011618:	2a01                	jal	20011728 <_printf_i>
2001161a:	bfd1                	j	200115ee <_svfiprintf_r+0x24e>

2001161c <_printf_common>:
_printf_common():
2001161c:	7179                	addi	sp,sp,-48
2001161e:	ca56                	sw	s5,20(sp)
20011620:	499c                	lw	a5,16(a1)
20011622:	8aba                	mv	s5,a4
20011624:	4598                	lw	a4,8(a1)
20011626:	d422                	sw	s0,40(sp)
20011628:	d226                	sw	s1,36(sp)
2001162a:	ce4e                	sw	s3,28(sp)
2001162c:	cc52                	sw	s4,24(sp)
2001162e:	d606                	sw	ra,44(sp)
20011630:	d04a                	sw	s2,32(sp)
20011632:	c85a                	sw	s6,16(sp)
20011634:	c65e                	sw	s7,12(sp)
20011636:	89aa                	mv	s3,a0
20011638:	842e                	mv	s0,a1
2001163a:	84b2                	mv	s1,a2
2001163c:	8a36                	mv	s4,a3
2001163e:	00e7d363          	bge	a5,a4,20011644 <_printf_common+0x28>
20011642:	87ba                	mv	a5,a4
20011644:	c09c                	sw	a5,0(s1)
20011646:	04344703          	lbu	a4,67(s0)
2001164a:	c319                	beqz	a4,20011650 <_printf_common+0x34>
2001164c:	0785                	addi	a5,a5,1
2001164e:	c09c                	sw	a5,0(s1)
20011650:	401c                	lw	a5,0(s0)
20011652:	0207f793          	andi	a5,a5,32
20011656:	c781                	beqz	a5,2001165e <_printf_common+0x42>
20011658:	409c                	lw	a5,0(s1)
2001165a:	0789                	addi	a5,a5,2
2001165c:	c09c                	sw	a5,0(s1)
2001165e:	00042903          	lw	s2,0(s0)
20011662:	00697913          	andi	s2,s2,6
20011666:	00091a63          	bnez	s2,2001167a <_printf_common+0x5e>
2001166a:	01940b13          	addi	s6,s0,25
2001166e:	5bfd                	li	s7,-1
20011670:	445c                	lw	a5,12(s0)
20011672:	4098                	lw	a4,0(s1)
20011674:	8f99                	sub	a5,a5,a4
20011676:	04f94c63          	blt	s2,a5,200116ce <_printf_common+0xb2>
2001167a:	401c                	lw	a5,0(s0)
2001167c:	04344683          	lbu	a3,67(s0)
20011680:	0207f793          	andi	a5,a5,32
20011684:	00d036b3          	snez	a3,a3
20011688:	eba5                	bnez	a5,200116f8 <_printf_common+0xdc>
2001168a:	04340613          	addi	a2,s0,67
2001168e:	85d2                	mv	a1,s4
20011690:	854e                	mv	a0,s3
20011692:	9a82                	jalr	s5
20011694:	57fd                	li	a5,-1
20011696:	04f50363          	beq	a0,a5,200116dc <_printf_common+0xc0>
2001169a:	401c                	lw	a5,0(s0)
2001169c:	4611                	li	a2,4
2001169e:	4098                	lw	a4,0(s1)
200116a0:	8b99                	andi	a5,a5,6
200116a2:	4454                	lw	a3,12(s0)
200116a4:	4481                	li	s1,0
200116a6:	00c79763          	bne	a5,a2,200116b4 <_printf_common+0x98>
200116aa:	40e684b3          	sub	s1,a3,a4
200116ae:	0004d363          	bgez	s1,200116b4 <_printf_common+0x98>
200116b2:	4481                	li	s1,0
200116b4:	441c                	lw	a5,8(s0)
200116b6:	4818                	lw	a4,16(s0)
200116b8:	00f75463          	bge	a4,a5,200116c0 <_printf_common+0xa4>
200116bc:	8f99                	sub	a5,a5,a4
200116be:	94be                	add	s1,s1,a5
200116c0:	4901                	li	s2,0
200116c2:	0469                	addi	s0,s0,26
200116c4:	5b7d                	li	s6,-1
200116c6:	05249863          	bne	s1,s2,20011716 <_printf_common+0xfa>
200116ca:	4501                	li	a0,0
200116cc:	a809                	j	200116de <_printf_common+0xc2>
200116ce:	4685                	li	a3,1
200116d0:	865a                	mv	a2,s6
200116d2:	85d2                	mv	a1,s4
200116d4:	854e                	mv	a0,s3
200116d6:	9a82                	jalr	s5
200116d8:	01751e63          	bne	a0,s7,200116f4 <_printf_common+0xd8>
200116dc:	557d                	li	a0,-1
200116de:	50b2                	lw	ra,44(sp)
200116e0:	5422                	lw	s0,40(sp)
200116e2:	5492                	lw	s1,36(sp)
200116e4:	5902                	lw	s2,32(sp)
200116e6:	49f2                	lw	s3,28(sp)
200116e8:	4a62                	lw	s4,24(sp)
200116ea:	4ad2                	lw	s5,20(sp)
200116ec:	4b42                	lw	s6,16(sp)
200116ee:	4bb2                	lw	s7,12(sp)
200116f0:	6145                	addi	sp,sp,48
200116f2:	8082                	ret
200116f4:	0905                	addi	s2,s2,1
200116f6:	bfad                	j	20011670 <_printf_common+0x54>
200116f8:	00d40733          	add	a4,s0,a3
200116fc:	03000613          	li	a2,48
20011700:	04c701a3          	sb	a2,67(a4)
20011704:	04544703          	lbu	a4,69(s0)
20011708:	00168793          	addi	a5,a3,1
2001170c:	97a2                	add	a5,a5,s0
2001170e:	0689                	addi	a3,a3,2
20011710:	04e781a3          	sb	a4,67(a5)
20011714:	bf9d                	j	2001168a <_printf_common+0x6e>
20011716:	4685                	li	a3,1
20011718:	8622                	mv	a2,s0
2001171a:	85d2                	mv	a1,s4
2001171c:	854e                	mv	a0,s3
2001171e:	9a82                	jalr	s5
20011720:	fb650ee3          	beq	a0,s6,200116dc <_printf_common+0xc0>
20011724:	0905                	addi	s2,s2,1
20011726:	b745                	j	200116c6 <_printf_common+0xaa>

20011728 <_printf_i>:
_printf_i():
20011728:	7179                	addi	sp,sp,-48
2001172a:	d422                	sw	s0,40(sp)
2001172c:	d226                	sw	s1,36(sp)
2001172e:	d04a                	sw	s2,32(sp)
20011730:	ce4e                	sw	s3,28(sp)
20011732:	d606                	sw	ra,44(sp)
20011734:	cc52                	sw	s4,24(sp)
20011736:	ca56                	sw	s5,20(sp)
20011738:	c85a                	sw	s6,16(sp)
2001173a:	89b6                	mv	s3,a3
2001173c:	0185c683          	lbu	a3,24(a1)
20011740:	06e00793          	li	a5,110
20011744:	8932                	mv	s2,a2
20011746:	84aa                	mv	s1,a0
20011748:	842e                	mv	s0,a1
2001174a:	04358613          	addi	a2,a1,67
2001174e:	1ef68063          	beq	a3,a5,2001192e <_printf_i+0x206>
20011752:	06d7e263          	bltu	a5,a3,200117b6 <_printf_i+0x8e>
20011756:	06300793          	li	a5,99
2001175a:	0af68263          	beq	a3,a5,200117fe <_printf_i+0xd6>
2001175e:	00d7ed63          	bltu	a5,a3,20011778 <_printf_i+0x50>
20011762:	1e068a63          	beqz	a3,20011956 <_printf_i+0x22e>
20011766:	05800793          	li	a5,88
2001176a:	16f68663          	beq	a3,a5,200118d6 <_printf_i+0x1ae>
2001176e:	04240a93          	addi	s5,s0,66
20011772:	04d40123          	sb	a3,66(s0)
20011776:	a869                	j	20011810 <_printf_i+0xe8>
20011778:	06400793          	li	a5,100
2001177c:	00f68663          	beq	a3,a5,20011788 <_printf_i+0x60>
20011780:	06900793          	li	a5,105
20011784:	fef695e3          	bne	a3,a5,2001176e <_printf_i+0x46>
20011788:	401c                	lw	a5,0(s0)
2001178a:	4308                	lw	a0,0(a4)
2001178c:	0807f693          	andi	a3,a5,128
20011790:	00450593          	addi	a1,a0,4
20011794:	c2c1                	beqz	a3,20011814 <_printf_i+0xec>
20011796:	411c                	lw	a5,0(a0)
20011798:	c30c                	sw	a1,0(a4)
2001179a:	0007d863          	bgez	a5,200117aa <_printf_i+0x82>
2001179e:	02d00713          	li	a4,45
200117a2:	40f007b3          	neg	a5,a5
200117a6:	04e401a3          	sb	a4,67(s0)
200117aa:	00006697          	auipc	a3,0x6
200117ae:	b0a68693          	addi	a3,a3,-1270 # 200172b4 <__sf_fake_stdout+0x34>
200117b2:	4729                	li	a4,10
200117b4:	a065                	j	2001185c <_printf_i+0x134>
200117b6:	07300793          	li	a5,115
200117ba:	1af68263          	beq	a3,a5,2001195e <_printf_i+0x236>
200117be:	00d7ef63          	bltu	a5,a3,200117dc <_printf_i+0xb4>
200117c2:	06f00793          	li	a5,111
200117c6:	04f68f63          	beq	a3,a5,20011824 <_printf_i+0xfc>
200117ca:	07000793          	li	a5,112
200117ce:	faf690e3          	bne	a3,a5,2001176e <_printf_i+0x46>
200117d2:	419c                	lw	a5,0(a1)
200117d4:	0207e793          	ori	a5,a5,32
200117d8:	c19c                	sw	a5,0(a1)
200117da:	a809                	j	200117ec <_printf_i+0xc4>
200117dc:	07500793          	li	a5,117
200117e0:	04f68263          	beq	a3,a5,20011824 <_printf_i+0xfc>
200117e4:	07800793          	li	a5,120
200117e8:	f8f693e3          	bne	a3,a5,2001176e <_printf_i+0x46>
200117ec:	07800793          	li	a5,120
200117f0:	04f402a3          	sb	a5,69(s0)
200117f4:	00006697          	auipc	a3,0x6
200117f8:	ad468693          	addi	a3,a3,-1324 # 200172c8 <__sf_fake_stdout+0x48>
200117fc:	a0dd                	j	200118e2 <_printf_i+0x1ba>
200117fe:	431c                	lw	a5,0(a4)
20011800:	04258a93          	addi	s5,a1,66
20011804:	00478693          	addi	a3,a5,4
20011808:	439c                	lw	a5,0(a5)
2001180a:	c314                	sw	a3,0(a4)
2001180c:	04f58123          	sb	a5,66(a1)
20011810:	4785                	li	a5,1
20011812:	a2ad                	j	2001197c <_printf_i+0x254>
20011814:	0407f693          	andi	a3,a5,64
20011818:	411c                	lw	a5,0(a0)
2001181a:	c30c                	sw	a1,0(a4)
2001181c:	debd                	beqz	a3,2001179a <_printf_i+0x72>
2001181e:	07c2                	slli	a5,a5,0x10
20011820:	87c1                	srai	a5,a5,0x10
20011822:	bfa5                	j	2001179a <_printf_i+0x72>
20011824:	400c                	lw	a1,0(s0)
20011826:	431c                	lw	a5,0(a4)
20011828:	0805f813          	andi	a6,a1,128
2001182c:	00478513          	addi	a0,a5,4
20011830:	00080563          	beqz	a6,2001183a <_printf_i+0x112>
20011834:	c308                	sw	a0,0(a4)
20011836:	439c                	lw	a5,0(a5)
20011838:	a039                	j	20011846 <_printf_i+0x11e>
2001183a:	0405f593          	andi	a1,a1,64
2001183e:	c308                	sw	a0,0(a4)
20011840:	d9fd                	beqz	a1,20011836 <_printf_i+0x10e>
20011842:	0007d783          	lhu	a5,0(a5)
20011846:	06f00713          	li	a4,111
2001184a:	0ce68a63          	beq	a3,a4,2001191e <_printf_i+0x1f6>
2001184e:	00006697          	auipc	a3,0x6
20011852:	a6668693          	addi	a3,a3,-1434 # 200172b4 <__sf_fake_stdout+0x34>
20011856:	4729                	li	a4,10
20011858:	040401a3          	sb	zero,67(s0)
2001185c:	404c                	lw	a1,4(s0)
2001185e:	c40c                	sw	a1,8(s0)
20011860:	0005c563          	bltz	a1,2001186a <_printf_i+0x142>
20011864:	4008                	lw	a0,0(s0)
20011866:	996d                	andi	a0,a0,-5
20011868:	c008                	sw	a0,0(s0)
2001186a:	e399                	bnez	a5,20011870 <_printf_i+0x148>
2001186c:	8ab2                	mv	s5,a2
2001186e:	cd91                	beqz	a1,2001188a <_printf_i+0x162>
20011870:	8ab2                	mv	s5,a2
20011872:	02e7f5b3          	remu	a1,a5,a4
20011876:	1afd                	addi	s5,s5,-1
20011878:	95b6                	add	a1,a1,a3
2001187a:	0005c583          	lbu	a1,0(a1)
2001187e:	00ba8023          	sb	a1,0(s5)
20011882:	02e7d5b3          	divu	a1,a5,a4
20011886:	0ae7f263          	bgeu	a5,a4,2001192a <_printf_i+0x202>
2001188a:	47a1                	li	a5,8
2001188c:	00f71e63          	bne	a4,a5,200118a8 <_printf_i+0x180>
20011890:	401c                	lw	a5,0(s0)
20011892:	8b85                	andi	a5,a5,1
20011894:	cb91                	beqz	a5,200118a8 <_printf_i+0x180>
20011896:	4058                	lw	a4,4(s0)
20011898:	481c                	lw	a5,16(s0)
2001189a:	00e7c763          	blt	a5,a4,200118a8 <_printf_i+0x180>
2001189e:	03000793          	li	a5,48
200118a2:	fefa8fa3          	sb	a5,-1(s5)
200118a6:	1afd                	addi	s5,s5,-1
200118a8:	41560633          	sub	a2,a2,s5
200118ac:	c810                	sw	a2,16(s0)
200118ae:	874e                	mv	a4,s3
200118b0:	86ca                	mv	a3,s2
200118b2:	0070                	addi	a2,sp,12
200118b4:	85a2                	mv	a1,s0
200118b6:	8526                	mv	a0,s1
200118b8:	3395                	jal	2001161c <_printf_common>
200118ba:	5a7d                	li	s4,-1
200118bc:	0d451463          	bne	a0,s4,20011984 <_printf_i+0x25c>
200118c0:	557d                	li	a0,-1
200118c2:	50b2                	lw	ra,44(sp)
200118c4:	5422                	lw	s0,40(sp)
200118c6:	5492                	lw	s1,36(sp)
200118c8:	5902                	lw	s2,32(sp)
200118ca:	49f2                	lw	s3,28(sp)
200118cc:	4a62                	lw	s4,24(sp)
200118ce:	4ad2                	lw	s5,20(sp)
200118d0:	4b42                	lw	s6,16(sp)
200118d2:	6145                	addi	sp,sp,48
200118d4:	8082                	ret
200118d6:	04d582a3          	sb	a3,69(a1)
200118da:	00006697          	auipc	a3,0x6
200118de:	9da68693          	addi	a3,a3,-1574 # 200172b4 <__sf_fake_stdout+0x34>
200118e2:	400c                	lw	a1,0(s0)
200118e4:	4308                	lw	a0,0(a4)
200118e6:	0805f813          	andi	a6,a1,128
200118ea:	411c                	lw	a5,0(a0)
200118ec:	0511                	addi	a0,a0,4
200118ee:	02080063          	beqz	a6,2001190e <_printf_i+0x1e6>
200118f2:	c308                	sw	a0,0(a4)
200118f4:	0015f713          	andi	a4,a1,1
200118f8:	c701                	beqz	a4,20011900 <_printf_i+0x1d8>
200118fa:	0205e593          	ori	a1,a1,32
200118fe:	c00c                	sw	a1,0(s0)
20011900:	4741                	li	a4,16
20011902:	fbb9                	bnez	a5,20011858 <_printf_i+0x130>
20011904:	400c                	lw	a1,0(s0)
20011906:	fdf5f593          	andi	a1,a1,-33
2001190a:	c00c                	sw	a1,0(s0)
2001190c:	b7b1                	j	20011858 <_printf_i+0x130>
2001190e:	0405f813          	andi	a6,a1,64
20011912:	c308                	sw	a0,0(a4)
20011914:	fe0800e3          	beqz	a6,200118f4 <_printf_i+0x1cc>
20011918:	07c2                	slli	a5,a5,0x10
2001191a:	83c1                	srli	a5,a5,0x10
2001191c:	bfe1                	j	200118f4 <_printf_i+0x1cc>
2001191e:	00006697          	auipc	a3,0x6
20011922:	99668693          	addi	a3,a3,-1642 # 200172b4 <__sf_fake_stdout+0x34>
20011926:	4721                	li	a4,8
20011928:	bf05                	j	20011858 <_printf_i+0x130>
2001192a:	87ae                	mv	a5,a1
2001192c:	b799                	j	20011872 <_printf_i+0x14a>
2001192e:	4194                	lw	a3,0(a1)
20011930:	431c                	lw	a5,0(a4)
20011932:	49cc                	lw	a1,20(a1)
20011934:	0806f813          	andi	a6,a3,128
20011938:	00478513          	addi	a0,a5,4
2001193c:	00080663          	beqz	a6,20011948 <_printf_i+0x220>
20011940:	c308                	sw	a0,0(a4)
20011942:	439c                	lw	a5,0(a5)
20011944:	c38c                	sw	a1,0(a5)
20011946:	a801                	j	20011956 <_printf_i+0x22e>
20011948:	c308                	sw	a0,0(a4)
2001194a:	0406f693          	andi	a3,a3,64
2001194e:	439c                	lw	a5,0(a5)
20011950:	daf5                	beqz	a3,20011944 <_printf_i+0x21c>
20011952:	00b79023          	sh	a1,0(a5)
20011956:	00042823          	sw	zero,16(s0)
2001195a:	8ab2                	mv	s5,a2
2001195c:	bf89                	j	200118ae <_printf_i+0x186>
2001195e:	431c                	lw	a5,0(a4)
20011960:	41d0                	lw	a2,4(a1)
20011962:	4581                	li	a1,0
20011964:	00478693          	addi	a3,a5,4
20011968:	c314                	sw	a3,0(a4)
2001196a:	0007aa83          	lw	s5,0(a5)
2001196e:	8556                	mv	a0,s5
20011970:	2305                	jal	20011e90 <memchr>
20011972:	c501                	beqz	a0,2001197a <_printf_i+0x252>
20011974:	41550533          	sub	a0,a0,s5
20011978:	c048                	sw	a0,4(s0)
2001197a:	405c                	lw	a5,4(s0)
2001197c:	c81c                	sw	a5,16(s0)
2001197e:	040401a3          	sb	zero,67(s0)
20011982:	b735                	j	200118ae <_printf_i+0x186>
20011984:	4814                	lw	a3,16(s0)
20011986:	8656                	mv	a2,s5
20011988:	85ca                	mv	a1,s2
2001198a:	8526                	mv	a0,s1
2001198c:	9982                	jalr	s3
2001198e:	f34509e3          	beq	a0,s4,200118c0 <_printf_i+0x198>
20011992:	401c                	lw	a5,0(s0)
20011994:	8b89                	andi	a5,a5,2
20011996:	e78d                	bnez	a5,200119c0 <_printf_i+0x298>
20011998:	47b2                	lw	a5,12(sp)
2001199a:	4448                	lw	a0,12(s0)
2001199c:	f2f553e3          	bge	a0,a5,200118c2 <_printf_i+0x19a>
200119a0:	853e                	mv	a0,a5
200119a2:	b705                	j	200118c2 <_printf_i+0x19a>
200119a4:	4685                	li	a3,1
200119a6:	8656                	mv	a2,s5
200119a8:	85ca                	mv	a1,s2
200119aa:	8526                	mv	a0,s1
200119ac:	9982                	jalr	s3
200119ae:	f16509e3          	beq	a0,s6,200118c0 <_printf_i+0x198>
200119b2:	0a05                	addi	s4,s4,1
200119b4:	445c                	lw	a5,12(s0)
200119b6:	4732                	lw	a4,12(sp)
200119b8:	8f99                	sub	a5,a5,a4
200119ba:	fefa45e3          	blt	s4,a5,200119a4 <_printf_i+0x27c>
200119be:	bfe9                	j	20011998 <_printf_i+0x270>
200119c0:	4a01                	li	s4,0
200119c2:	01940a93          	addi	s5,s0,25
200119c6:	5b7d                	li	s6,-1
200119c8:	b7f5                	j	200119b4 <_printf_i+0x28c>

200119ca <__sfputc_r>:
__sfputc_r():
200119ca:	461c                	lw	a5,8(a2)
200119cc:	17fd                	addi	a5,a5,-1
200119ce:	c61c                	sw	a5,8(a2)
200119d0:	0007da63          	bgez	a5,200119e4 <__sfputc_r+0x1a>
200119d4:	4e18                	lw	a4,24(a2)
200119d6:	00e7c563          	blt	a5,a4,200119e0 <__sfputc_r+0x16>
200119da:	47a9                	li	a5,10
200119dc:	00f59463          	bne	a1,a5,200119e4 <__sfputc_r+0x1a>
200119e0:	86eff06f          	j	20010a4e <__swbuf_r>
200119e4:	421c                	lw	a5,0(a2)
200119e6:	852e                	mv	a0,a1
200119e8:	00178713          	addi	a4,a5,1
200119ec:	c218                	sw	a4,0(a2)
200119ee:	00b78023          	sb	a1,0(a5)
200119f2:	8082                	ret

200119f4 <__sfputs_r>:
__sfputs_r():
200119f4:	1101                	addi	sp,sp,-32
200119f6:	cc22                	sw	s0,24(sp)
200119f8:	ca26                	sw	s1,20(sp)
200119fa:	c84a                	sw	s2,16(sp)
200119fc:	c64e                	sw	s3,12(sp)
200119fe:	c452                	sw	s4,8(sp)
20011a00:	ce06                	sw	ra,28(sp)
20011a02:	892a                	mv	s2,a0
20011a04:	89ae                	mv	s3,a1
20011a06:	8432                	mv	s0,a2
20011a08:	00d604b3          	add	s1,a2,a3
20011a0c:	5a7d                	li	s4,-1
20011a0e:	00941463          	bne	s0,s1,20011a16 <__sfputs_r+0x22>
20011a12:	4501                	li	a0,0
20011a14:	a809                	j	20011a26 <__sfputs_r+0x32>
20011a16:	00044583          	lbu	a1,0(s0)
20011a1a:	864e                	mv	a2,s3
20011a1c:	854a                	mv	a0,s2
20011a1e:	3775                	jal	200119ca <__sfputc_r>
20011a20:	0405                	addi	s0,s0,1
20011a22:	ff4516e3          	bne	a0,s4,20011a0e <__sfputs_r+0x1a>
20011a26:	40f2                	lw	ra,28(sp)
20011a28:	4462                	lw	s0,24(sp)
20011a2a:	44d2                	lw	s1,20(sp)
20011a2c:	4942                	lw	s2,16(sp)
20011a2e:	49b2                	lw	s3,12(sp)
20011a30:	4a22                	lw	s4,8(sp)
20011a32:	6105                	addi	sp,sp,32
20011a34:	8082                	ret

20011a36 <_vfiprintf_r>:
_vfiprintf_r():
20011a36:	7135                	addi	sp,sp,-160
20011a38:	cd22                	sw	s0,152(sp)
20011a3a:	cb26                	sw	s1,148(sp)
20011a3c:	c94a                	sw	s2,144(sp)
20011a3e:	c74e                	sw	s3,140(sp)
20011a40:	cf06                	sw	ra,156(sp)
20011a42:	c552                	sw	s4,136(sp)
20011a44:	c356                	sw	s5,132(sp)
20011a46:	c15a                	sw	s6,128(sp)
20011a48:	dede                	sw	s7,124(sp)
20011a4a:	dce2                	sw	s8,120(sp)
20011a4c:	dae6                	sw	s9,116(sp)
20011a4e:	89aa                	mv	s3,a0
20011a50:	84ae                	mv	s1,a1
20011a52:	8932                	mv	s2,a2
20011a54:	8436                	mv	s0,a3
20011a56:	c509                	beqz	a0,20011a60 <_vfiprintf_r+0x2a>
20011a58:	4d1c                	lw	a5,24(a0)
20011a5a:	e399                	bnez	a5,20011a60 <_vfiprintf_r+0x2a>
20011a5c:	c26ff0ef          	jal	ra,20010e82 <__sinit>
20011a60:	00006797          	auipc	a5,0x6
20011a64:	80078793          	addi	a5,a5,-2048 # 20017260 <__sf_fake_stdin>
20011a68:	0cf49b63          	bne	s1,a5,20011b3e <_vfiprintf_r+0x108>
20011a6c:	0049a483          	lw	s1,4(s3)
20011a70:	00c4d783          	lhu	a5,12(s1)
20011a74:	8ba1                	andi	a5,a5,8
20011a76:	c7f5                	beqz	a5,20011b62 <_vfiprintf_r+0x12c>
20011a78:	489c                	lw	a5,16(s1)
20011a7a:	c7e5                	beqz	a5,20011b62 <_vfiprintf_r+0x12c>
20011a7c:	02000793          	li	a5,32
20011a80:	02f104a3          	sb	a5,41(sp)
20011a84:	03000793          	li	a5,48
20011a88:	d202                	sw	zero,36(sp)
20011a8a:	02f10523          	sb	a5,42(sp)
20011a8e:	c622                	sw	s0,12(sp)
20011a90:	02500b93          	li	s7,37
20011a94:	00006a97          	auipc	s5,0x6
20011a98:	80ca8a93          	addi	s5,s5,-2036 # 200172a0 <__sf_fake_stdout+0x20>
20011a9c:	4c05                	li	s8,1
20011a9e:	4b29                	li	s6,10
20011aa0:	844a                	mv	s0,s2
20011aa2:	00044783          	lbu	a5,0(s0)
20011aa6:	c399                	beqz	a5,20011aac <_vfiprintf_r+0x76>
20011aa8:	0f779063          	bne	a5,s7,20011b88 <_vfiprintf_r+0x152>
20011aac:	41240cb3          	sub	s9,s0,s2
20011ab0:	000c8d63          	beqz	s9,20011aca <_vfiprintf_r+0x94>
20011ab4:	86e6                	mv	a3,s9
20011ab6:	864a                	mv	a2,s2
20011ab8:	85a6                	mv	a1,s1
20011aba:	854e                	mv	a0,s3
20011abc:	3f25                	jal	200119f4 <__sfputs_r>
20011abe:	57fd                	li	a5,-1
20011ac0:	1ef50663          	beq	a0,a5,20011cac <_vfiprintf_r+0x276>
20011ac4:	5692                	lw	a3,36(sp)
20011ac6:	96e6                	add	a3,a3,s9
20011ac8:	d236                	sw	a3,36(sp)
20011aca:	00044783          	lbu	a5,0(s0)
20011ace:	1c078f63          	beqz	a5,20011cac <_vfiprintf_r+0x276>
20011ad2:	57fd                	li	a5,-1
20011ad4:	00140913          	addi	s2,s0,1
20011ad8:	c802                	sw	zero,16(sp)
20011ada:	ce02                	sw	zero,28(sp)
20011adc:	ca3e                	sw	a5,20(sp)
20011ade:	cc02                	sw	zero,24(sp)
20011ae0:	040109a3          	sb	zero,83(sp)
20011ae4:	d482                	sw	zero,104(sp)
20011ae6:	00094583          	lbu	a1,0(s2)
20011aea:	4615                	li	a2,5
20011aec:	8556                	mv	a0,s5
20011aee:	264d                	jal	20011e90 <memchr>
20011af0:	00190413          	addi	s0,s2,1
20011af4:	47c2                	lw	a5,16(sp)
20011af6:	e959                	bnez	a0,20011b8c <_vfiprintf_r+0x156>
20011af8:	0107f713          	andi	a4,a5,16
20011afc:	c709                	beqz	a4,20011b06 <_vfiprintf_r+0xd0>
20011afe:	02000713          	li	a4,32
20011b02:	04e109a3          	sb	a4,83(sp)
20011b06:	0087f713          	andi	a4,a5,8
20011b0a:	c709                	beqz	a4,20011b14 <_vfiprintf_r+0xde>
20011b0c:	02b00713          	li	a4,43
20011b10:	04e109a3          	sb	a4,83(sp)
20011b14:	00094683          	lbu	a3,0(s2)
20011b18:	02a00713          	li	a4,42
20011b1c:	08e68063          	beq	a3,a4,20011b9c <_vfiprintf_r+0x166>
20011b20:	47f2                	lw	a5,28(sp)
20011b22:	844a                	mv	s0,s2
20011b24:	4681                	li	a3,0
20011b26:	4625                	li	a2,9
20011b28:	00044703          	lbu	a4,0(s0)
20011b2c:	00140593          	addi	a1,s0,1
20011b30:	fd070713          	addi	a4,a4,-48
20011b34:	0ae67963          	bgeu	a2,a4,20011be6 <_vfiprintf_r+0x1b0>
20011b38:	cab5                	beqz	a3,20011bac <_vfiprintf_r+0x176>
20011b3a:	ce3e                	sw	a5,28(sp)
20011b3c:	a885                	j	20011bac <_vfiprintf_r+0x176>
20011b3e:	00005797          	auipc	a5,0x5
20011b42:	74278793          	addi	a5,a5,1858 # 20017280 <__sf_fake_stdout>
20011b46:	00f49563          	bne	s1,a5,20011b50 <_vfiprintf_r+0x11a>
20011b4a:	0089a483          	lw	s1,8(s3)
20011b4e:	b70d                	j	20011a70 <_vfiprintf_r+0x3a>
20011b50:	00005797          	auipc	a5,0x5
20011b54:	6f078793          	addi	a5,a5,1776 # 20017240 <__sf_fake_stderr>
20011b58:	f0f49ce3          	bne	s1,a5,20011a70 <_vfiprintf_r+0x3a>
20011b5c:	00c9a483          	lw	s1,12(s3)
20011b60:	bf01                	j	20011a70 <_vfiprintf_r+0x3a>
20011b62:	85a6                	mv	a1,s1
20011b64:	854e                	mv	a0,s3
20011b66:	fa9fe0ef          	jal	ra,20010b0e <__swsetup_r>
20011b6a:	d909                	beqz	a0,20011a7c <_vfiprintf_r+0x46>
20011b6c:	557d                	li	a0,-1
20011b6e:	40fa                	lw	ra,156(sp)
20011b70:	446a                	lw	s0,152(sp)
20011b72:	44da                	lw	s1,148(sp)
20011b74:	494a                	lw	s2,144(sp)
20011b76:	49ba                	lw	s3,140(sp)
20011b78:	4a2a                	lw	s4,136(sp)
20011b7a:	4a9a                	lw	s5,132(sp)
20011b7c:	4b0a                	lw	s6,128(sp)
20011b7e:	5bf6                	lw	s7,124(sp)
20011b80:	5c66                	lw	s8,120(sp)
20011b82:	5cd6                	lw	s9,116(sp)
20011b84:	610d                	addi	sp,sp,160
20011b86:	8082                	ret
20011b88:	0405                	addi	s0,s0,1
20011b8a:	bf21                	j	20011aa2 <_vfiprintf_r+0x6c>
20011b8c:	41550533          	sub	a0,a0,s5
20011b90:	00ac1533          	sll	a0,s8,a0
20011b94:	8fc9                	or	a5,a5,a0
20011b96:	c83e                	sw	a5,16(sp)
20011b98:	8922                	mv	s2,s0
20011b9a:	b7b1                	j	20011ae6 <_vfiprintf_r+0xb0>
20011b9c:	4732                	lw	a4,12(sp)
20011b9e:	00470693          	addi	a3,a4,4
20011ba2:	4318                	lw	a4,0(a4)
20011ba4:	c636                	sw	a3,12(sp)
20011ba6:	02074963          	bltz	a4,20011bd8 <_vfiprintf_r+0x1a2>
20011baa:	ce3a                	sw	a4,28(sp)
20011bac:	00044703          	lbu	a4,0(s0)
20011bb0:	02e00793          	li	a5,46
20011bb4:	04f71f63          	bne	a4,a5,20011c12 <_vfiprintf_r+0x1dc>
20011bb8:	00144703          	lbu	a4,1(s0)
20011bbc:	02a00793          	li	a5,42
20011bc0:	02f71b63          	bne	a4,a5,20011bf6 <_vfiprintf_r+0x1c0>
20011bc4:	47b2                	lw	a5,12(sp)
20011bc6:	0409                	addi	s0,s0,2
20011bc8:	00478713          	addi	a4,a5,4
20011bcc:	439c                	lw	a5,0(a5)
20011bce:	c63a                	sw	a4,12(sp)
20011bd0:	0207c163          	bltz	a5,20011bf2 <_vfiprintf_r+0x1bc>
20011bd4:	ca3e                	sw	a5,20(sp)
20011bd6:	a835                	j	20011c12 <_vfiprintf_r+0x1dc>
20011bd8:	40e00733          	neg	a4,a4
20011bdc:	0027e793          	ori	a5,a5,2
20011be0:	ce3a                	sw	a4,28(sp)
20011be2:	c83e                	sw	a5,16(sp)
20011be4:	b7e1                	j	20011bac <_vfiprintf_r+0x176>
20011be6:	036787b3          	mul	a5,a5,s6
20011bea:	4685                	li	a3,1
20011bec:	842e                	mv	s0,a1
20011bee:	97ba                	add	a5,a5,a4
20011bf0:	bf25                	j	20011b28 <_vfiprintf_r+0xf2>
20011bf2:	57fd                	li	a5,-1
20011bf4:	b7c5                	j	20011bd4 <_vfiprintf_r+0x19e>
20011bf6:	0405                	addi	s0,s0,1
20011bf8:	ca02                	sw	zero,20(sp)
20011bfa:	4681                	li	a3,0
20011bfc:	4781                	li	a5,0
20011bfe:	4625                	li	a2,9
20011c00:	00044703          	lbu	a4,0(s0)
20011c04:	00140593          	addi	a1,s0,1
20011c08:	fd070713          	addi	a4,a4,-48
20011c0c:	06e67663          	bgeu	a2,a4,20011c78 <_vfiprintf_r+0x242>
20011c10:	f2f1                	bnez	a3,20011bd4 <_vfiprintf_r+0x19e>
20011c12:	00044583          	lbu	a1,0(s0)
20011c16:	460d                	li	a2,3
20011c18:	00005517          	auipc	a0,0x5
20011c1c:	69050513          	addi	a0,a0,1680 # 200172a8 <__sf_fake_stdout+0x28>
20011c20:	2c85                	jal	20011e90 <memchr>
20011c22:	cd11                	beqz	a0,20011c3e <_vfiprintf_r+0x208>
20011c24:	00005797          	auipc	a5,0x5
20011c28:	68478793          	addi	a5,a5,1668 # 200172a8 <__sf_fake_stdout+0x28>
20011c2c:	8d1d                	sub	a0,a0,a5
20011c2e:	04000793          	li	a5,64
20011c32:	00a797b3          	sll	a5,a5,a0
20011c36:	4542                	lw	a0,16(sp)
20011c38:	0405                	addi	s0,s0,1
20011c3a:	8d5d                	or	a0,a0,a5
20011c3c:	c82a                	sw	a0,16(sp)
20011c3e:	00044583          	lbu	a1,0(s0)
20011c42:	4619                	li	a2,6
20011c44:	00005517          	auipc	a0,0x5
20011c48:	66850513          	addi	a0,a0,1640 # 200172ac <__sf_fake_stdout+0x2c>
20011c4c:	00140913          	addi	s2,s0,1
20011c50:	02b10423          	sb	a1,40(sp)
20011c54:	2c35                	jal	20011e90 <memchr>
20011c56:	c13d                	beqz	a0,20011cbc <_vfiprintf_r+0x286>
20011c58:	dffee797          	auipc	a5,0xdffee
20011c5c:	3a878793          	addi	a5,a5,936 # 0 <__metal_boot_hart>
20011c60:	e795                	bnez	a5,20011c8c <_vfiprintf_r+0x256>
20011c62:	4742                	lw	a4,16(sp)
20011c64:	47b2                	lw	a5,12(sp)
20011c66:	10077713          	andi	a4,a4,256
20011c6a:	cf09                	beqz	a4,20011c84 <_vfiprintf_r+0x24e>
20011c6c:	0791                	addi	a5,a5,4
20011c6e:	c63e                	sw	a5,12(sp)
20011c70:	5792                	lw	a5,36(sp)
20011c72:	97d2                	add	a5,a5,s4
20011c74:	d23e                	sw	a5,36(sp)
20011c76:	b52d                	j	20011aa0 <_vfiprintf_r+0x6a>
20011c78:	036787b3          	mul	a5,a5,s6
20011c7c:	4685                	li	a3,1
20011c7e:	842e                	mv	s0,a1
20011c80:	97ba                	add	a5,a5,a4
20011c82:	bfbd                	j	20011c00 <_vfiprintf_r+0x1ca>
20011c84:	079d                	addi	a5,a5,7
20011c86:	9be1                	andi	a5,a5,-8
20011c88:	07a1                	addi	a5,a5,8
20011c8a:	b7d5                	j	20011c6e <_vfiprintf_r+0x238>
20011c8c:	0078                	addi	a4,sp,12
20011c8e:	00000697          	auipc	a3,0x0
20011c92:	d6668693          	addi	a3,a3,-666 # 200119f4 <__sfputs_r>
20011c96:	8626                	mv	a2,s1
20011c98:	080c                	addi	a1,sp,16
20011c9a:	854e                	mv	a0,s3
20011c9c:	00000097          	auipc	ra,0x0
20011ca0:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
20011ca4:	57fd                	li	a5,-1
20011ca6:	8a2a                	mv	s4,a0
20011ca8:	fcf514e3          	bne	a0,a5,20011c70 <_vfiprintf_r+0x23a>
20011cac:	00c4d783          	lhu	a5,12(s1)
20011cb0:	0407f793          	andi	a5,a5,64
20011cb4:	ea079ce3          	bnez	a5,20011b6c <_vfiprintf_r+0x136>
20011cb8:	5512                	lw	a0,36(sp)
20011cba:	bd55                	j	20011b6e <_vfiprintf_r+0x138>
20011cbc:	0078                	addi	a4,sp,12
20011cbe:	00000697          	auipc	a3,0x0
20011cc2:	d3668693          	addi	a3,a3,-714 # 200119f4 <__sfputs_r>
20011cc6:	8626                	mv	a2,s1
20011cc8:	080c                	addi	a1,sp,16
20011cca:	854e                	mv	a0,s3
20011ccc:	3cb1                	jal	20011728 <_printf_i>
20011cce:	bfd9                	j	20011ca4 <_vfiprintf_r+0x26e>

20011cd0 <_sbrk_r>:
_sbrk_r():
20011cd0:	1141                	addi	sp,sp,-16
20011cd2:	c422                	sw	s0,8(sp)
20011cd4:	842a                	mv	s0,a0
20011cd6:	852e                	mv	a0,a1
20011cd8:	8e01a223          	sw	zero,-1820(gp) # 80000b6c <errno>
20011cdc:	c606                	sw	ra,12(sp)
20011cde:	209040ef          	jal	ra,200166e6 <_sbrk>
20011ce2:	57fd                	li	a5,-1
20011ce4:	00f51763          	bne	a0,a5,20011cf2 <_sbrk_r+0x22>
20011ce8:	8e418793          	addi	a5,gp,-1820 # 80000b6c <errno>
20011cec:	439c                	lw	a5,0(a5)
20011cee:	c391                	beqz	a5,20011cf2 <_sbrk_r+0x22>
20011cf0:	c01c                	sw	a5,0(s0)
20011cf2:	40b2                	lw	ra,12(sp)
20011cf4:	4422                	lw	s0,8(sp)
20011cf6:	0141                	addi	sp,sp,16
20011cf8:	8082                	ret

20011cfa <__sread>:
__sread():
20011cfa:	1141                	addi	sp,sp,-16
20011cfc:	c422                	sw	s0,8(sp)
20011cfe:	842e                	mv	s0,a1
20011d00:	00e59583          	lh	a1,14(a1)
20011d04:	c606                	sw	ra,12(sp)
20011d06:	2cfd                	jal	20012004 <_read_r>
20011d08:	00054963          	bltz	a0,20011d1a <__sread+0x20>
20011d0c:	487c                	lw	a5,84(s0)
20011d0e:	97aa                	add	a5,a5,a0
20011d10:	c87c                	sw	a5,84(s0)
20011d12:	40b2                	lw	ra,12(sp)
20011d14:	4422                	lw	s0,8(sp)
20011d16:	0141                	addi	sp,sp,16
20011d18:	8082                	ret
20011d1a:	00c45783          	lhu	a5,12(s0)
20011d1e:	777d                	lui	a4,0xfffff
20011d20:	177d                	addi	a4,a4,-1
20011d22:	8ff9                	and	a5,a5,a4
20011d24:	00f41623          	sh	a5,12(s0)
20011d28:	b7ed                	j	20011d12 <__sread+0x18>

20011d2a <__swrite>:
__swrite():
20011d2a:	00c5d783          	lhu	a5,12(a1)
20011d2e:	1101                	addi	sp,sp,-32
20011d30:	cc22                	sw	s0,24(sp)
20011d32:	ca26                	sw	s1,20(sp)
20011d34:	c84a                	sw	s2,16(sp)
20011d36:	c64e                	sw	s3,12(sp)
20011d38:	ce06                	sw	ra,28(sp)
20011d3a:	1007f793          	andi	a5,a5,256
20011d3e:	84aa                	mv	s1,a0
20011d40:	842e                	mv	s0,a1
20011d42:	8932                	mv	s2,a2
20011d44:	89b6                	mv	s3,a3
20011d46:	c791                	beqz	a5,20011d52 <__swrite+0x28>
20011d48:	00e59583          	lh	a1,14(a1)
20011d4c:	4689                	li	a3,2
20011d4e:	4601                	li	a2,0
20011d50:	2a09                	jal	20011e62 <_lseek_r>
20011d52:	00c45783          	lhu	a5,12(s0)
20011d56:	777d                	lui	a4,0xfffff
20011d58:	177d                	addi	a4,a4,-1
20011d5a:	8ff9                	and	a5,a5,a4
20011d5c:	00f41623          	sh	a5,12(s0)
20011d60:	00e41583          	lh	a1,14(s0)
20011d64:	4462                	lw	s0,24(sp)
20011d66:	40f2                	lw	ra,28(sp)
20011d68:	86ce                	mv	a3,s3
20011d6a:	864a                	mv	a2,s2
20011d6c:	49b2                	lw	s3,12(sp)
20011d6e:	4942                	lw	s2,16(sp)
20011d70:	8526                	mv	a0,s1
20011d72:	44d2                	lw	s1,20(sp)
20011d74:	6105                	addi	sp,sp,32
20011d76:	a83d                	j	20011db4 <_write_r>

20011d78 <__sseek>:
__sseek():
20011d78:	1141                	addi	sp,sp,-16
20011d7a:	c422                	sw	s0,8(sp)
20011d7c:	842e                	mv	s0,a1
20011d7e:	00e59583          	lh	a1,14(a1)
20011d82:	c606                	sw	ra,12(sp)
20011d84:	28f9                	jal	20011e62 <_lseek_r>
20011d86:	57fd                	li	a5,-1
20011d88:	00c45703          	lhu	a4,12(s0)
20011d8c:	00f51b63          	bne	a0,a5,20011da2 <__sseek+0x2a>
20011d90:	77fd                	lui	a5,0xfffff
20011d92:	17fd                	addi	a5,a5,-1
20011d94:	8ff9                	and	a5,a5,a4
20011d96:	00f41623          	sh	a5,12(s0)
20011d9a:	40b2                	lw	ra,12(sp)
20011d9c:	4422                	lw	s0,8(sp)
20011d9e:	0141                	addi	sp,sp,16
20011da0:	8082                	ret
20011da2:	6785                	lui	a5,0x1
20011da4:	8fd9                	or	a5,a5,a4
20011da6:	00f41623          	sh	a5,12(s0)
20011daa:	c868                	sw	a0,84(s0)
20011dac:	b7fd                	j	20011d9a <__sseek+0x22>

20011dae <__sclose>:
__sclose():
20011dae:	00e59583          	lh	a1,14(a1)
20011db2:	a805                	j	20011de2 <_close_r>

20011db4 <_write_r>:
_write_r():
20011db4:	1141                	addi	sp,sp,-16
20011db6:	c422                	sw	s0,8(sp)
20011db8:	842a                	mv	s0,a0
20011dba:	852e                	mv	a0,a1
20011dbc:	85b2                	mv	a1,a2
20011dbe:	8636                	mv	a2,a3
20011dc0:	8e01a223          	sw	zero,-1820(gp) # 80000b6c <errno>
20011dc4:	c606                	sw	ra,12(sp)
20011dc6:	17b040ef          	jal	ra,20016740 <_write>
20011dca:	57fd                	li	a5,-1
20011dcc:	00f51763          	bne	a0,a5,20011dda <_write_r+0x26>
20011dd0:	8e418793          	addi	a5,gp,-1820 # 80000b6c <errno>
20011dd4:	439c                	lw	a5,0(a5)
20011dd6:	c391                	beqz	a5,20011dda <_write_r+0x26>
20011dd8:	c01c                	sw	a5,0(s0)
20011dda:	40b2                	lw	ra,12(sp)
20011ddc:	4422                	lw	s0,8(sp)
20011dde:	0141                	addi	sp,sp,16
20011de0:	8082                	ret

20011de2 <_close_r>:
_close_r():
20011de2:	1141                	addi	sp,sp,-16
20011de4:	c422                	sw	s0,8(sp)
20011de6:	842a                	mv	s0,a0
20011de8:	852e                	mv	a0,a1
20011dea:	8e01a223          	sw	zero,-1820(gp) # 80000b6c <errno>
20011dee:	c606                	sw	ra,12(sp)
20011df0:	754040ef          	jal	ra,20016544 <_close>
20011df4:	57fd                	li	a5,-1
20011df6:	00f51763          	bne	a0,a5,20011e04 <_close_r+0x22>
20011dfa:	8e418793          	addi	a5,gp,-1820 # 80000b6c <errno>
20011dfe:	439c                	lw	a5,0(a5)
20011e00:	c391                	beqz	a5,20011e04 <_close_r+0x22>
20011e02:	c01c                	sw	a5,0(s0)
20011e04:	40b2                	lw	ra,12(sp)
20011e06:	4422                	lw	s0,8(sp)
20011e08:	0141                	addi	sp,sp,16
20011e0a:	8082                	ret

20011e0c <_fstat_r>:
_fstat_r():
20011e0c:	1141                	addi	sp,sp,-16
20011e0e:	c422                	sw	s0,8(sp)
20011e10:	842a                	mv	s0,a0
20011e12:	852e                	mv	a0,a1
20011e14:	85b2                	mv	a1,a2
20011e16:	8e01a223          	sw	zero,-1820(gp) # 80000b6c <errno>
20011e1a:	c606                	sw	ra,12(sp)
20011e1c:	74a040ef          	jal	ra,20016566 <_fstat>
20011e20:	57fd                	li	a5,-1
20011e22:	00f51763          	bne	a0,a5,20011e30 <_fstat_r+0x24>
20011e26:	8e418793          	addi	a5,gp,-1820 # 80000b6c <errno>
20011e2a:	439c                	lw	a5,0(a5)
20011e2c:	c391                	beqz	a5,20011e30 <_fstat_r+0x24>
20011e2e:	c01c                	sw	a5,0(s0)
20011e30:	40b2                	lw	ra,12(sp)
20011e32:	4422                	lw	s0,8(sp)
20011e34:	0141                	addi	sp,sp,16
20011e36:	8082                	ret

20011e38 <_isatty_r>:
_isatty_r():
20011e38:	1141                	addi	sp,sp,-16
20011e3a:	c422                	sw	s0,8(sp)
20011e3c:	842a                	mv	s0,a0
20011e3e:	852e                	mv	a0,a1
20011e40:	8e01a223          	sw	zero,-1820(gp) # 80000b6c <errno>
20011e44:	c606                	sw	ra,12(sp)
20011e46:	02d040ef          	jal	ra,20016672 <_isatty>
20011e4a:	57fd                	li	a5,-1
20011e4c:	00f51763          	bne	a0,a5,20011e5a <_isatty_r+0x22>
20011e50:	8e418793          	addi	a5,gp,-1820 # 80000b6c <errno>
20011e54:	439c                	lw	a5,0(a5)
20011e56:	c391                	beqz	a5,20011e5a <_isatty_r+0x22>
20011e58:	c01c                	sw	a5,0(s0)
20011e5a:	40b2                	lw	ra,12(sp)
20011e5c:	4422                	lw	s0,8(sp)
20011e5e:	0141                	addi	sp,sp,16
20011e60:	8082                	ret

20011e62 <_lseek_r>:
_lseek_r():
20011e62:	1141                	addi	sp,sp,-16
20011e64:	c422                	sw	s0,8(sp)
20011e66:	842a                	mv	s0,a0
20011e68:	852e                	mv	a0,a1
20011e6a:	85b2                	mv	a1,a2
20011e6c:	8636                	mv	a2,a3
20011e6e:	8e01a223          	sw	zero,-1820(gp) # 80000b6c <errno>
20011e72:	c606                	sw	ra,12(sp)
20011e74:	01f040ef          	jal	ra,20016692 <_lseek>
20011e78:	57fd                	li	a5,-1
20011e7a:	00f51763          	bne	a0,a5,20011e88 <_lseek_r+0x26>
20011e7e:	8e418793          	addi	a5,gp,-1820 # 80000b6c <errno>
20011e82:	439c                	lw	a5,0(a5)
20011e84:	c391                	beqz	a5,20011e88 <_lseek_r+0x26>
20011e86:	c01c                	sw	a5,0(s0)
20011e88:	40b2                	lw	ra,12(sp)
20011e8a:	4422                	lw	s0,8(sp)
20011e8c:	0141                	addi	sp,sp,16
20011e8e:	8082                	ret

20011e90 <memchr>:
memchr():
20011e90:	0ff5f593          	andi	a1,a1,255
20011e94:	962a                	add	a2,a2,a0
20011e96:	00c51463          	bne	a0,a2,20011e9e <memchr+0xe>
20011e9a:	4501                	li	a0,0
20011e9c:	8082                	ret
20011e9e:	00054783          	lbu	a5,0(a0)
20011ea2:	feb78de3          	beq	a5,a1,20011e9c <memchr+0xc>
20011ea6:	0505                	addi	a0,a0,1
20011ea8:	b7fd                	j	20011e96 <memchr+0x6>

20011eaa <memcpy>:
memcpy():
20011eaa:	00a5c7b3          	xor	a5,a1,a0
20011eae:	8b8d                	andi	a5,a5,3
20011eb0:	00c50733          	add	a4,a0,a2
20011eb4:	e781                	bnez	a5,20011ebc <memcpy+0x12>
20011eb6:	478d                	li	a5,3
20011eb8:	00c7ee63          	bltu	a5,a2,20011ed4 <memcpy+0x2a>
20011ebc:	87aa                	mv	a5,a0
20011ebe:	0ae57063          	bgeu	a0,a4,20011f5e <memcpy+0xb4>
20011ec2:	0005c683          	lbu	a3,0(a1)
20011ec6:	0785                	addi	a5,a5,1
20011ec8:	0585                	addi	a1,a1,1
20011eca:	fed78fa3          	sb	a3,-1(a5) # fff <__heap_size+0x7ff>
20011ece:	fee7eae3          	bltu	a5,a4,20011ec2 <memcpy+0x18>
20011ed2:	8082                	ret
20011ed4:	00357693          	andi	a3,a0,3
20011ed8:	87aa                	mv	a5,a0
20011eda:	ca91                	beqz	a3,20011eee <memcpy+0x44>
20011edc:	0005c683          	lbu	a3,0(a1)
20011ee0:	0785                	addi	a5,a5,1
20011ee2:	0585                	addi	a1,a1,1
20011ee4:	fed78fa3          	sb	a3,-1(a5)
20011ee8:	0037f693          	andi	a3,a5,3
20011eec:	b7fd                	j	20011eda <memcpy+0x30>
20011eee:	ffc77693          	andi	a3,a4,-4
20011ef2:	fe068613          	addi	a2,a3,-32
20011ef6:	06c7f063          	bgeu	a5,a2,20011f56 <memcpy+0xac>
20011efa:	0005a383          	lw	t2,0(a1)
20011efe:	0045a283          	lw	t0,4(a1)
20011f02:	0085af83          	lw	t6,8(a1)
20011f06:	00c5af03          	lw	t5,12(a1)
20011f0a:	0105ae83          	lw	t4,16(a1)
20011f0e:	0145ae03          	lw	t3,20(a1)
20011f12:	0185a303          	lw	t1,24(a1)
20011f16:	01c5a883          	lw	a7,28(a1)
20011f1a:	02458593          	addi	a1,a1,36
20011f1e:	0077a023          	sw	t2,0(a5)
20011f22:	ffc5a803          	lw	a6,-4(a1)
20011f26:	0057a223          	sw	t0,4(a5)
20011f2a:	01f7a423          	sw	t6,8(a5)
20011f2e:	01e7a623          	sw	t5,12(a5)
20011f32:	01d7a823          	sw	t4,16(a5)
20011f36:	01c7aa23          	sw	t3,20(a5)
20011f3a:	0067ac23          	sw	t1,24(a5)
20011f3e:	0117ae23          	sw	a7,28(a5)
20011f42:	02478793          	addi	a5,a5,36
20011f46:	ff07ae23          	sw	a6,-4(a5)
20011f4a:	b775                	j	20011ef6 <memcpy+0x4c>
20011f4c:	4190                	lw	a2,0(a1)
20011f4e:	0791                	addi	a5,a5,4
20011f50:	0591                	addi	a1,a1,4
20011f52:	fec7ae23          	sw	a2,-4(a5)
20011f56:	fed7ebe3          	bltu	a5,a3,20011f4c <memcpy+0xa2>
20011f5a:	f6e7e4e3          	bltu	a5,a4,20011ec2 <memcpy+0x18>
20011f5e:	8082                	ret

20011f60 <memmove>:
memmove():
20011f60:	04a5f363          	bgeu	a1,a0,20011fa6 <memmove+0x46>
20011f64:	00c586b3          	add	a3,a1,a2
20011f68:	02d57f63          	bgeu	a0,a3,20011fa6 <memmove+0x46>
20011f6c:	fff64593          	not	a1,a2
20011f70:	4781                	li	a5,0
20011f72:	17fd                	addi	a5,a5,-1
20011f74:	00f59363          	bne	a1,a5,20011f7a <memmove+0x1a>
20011f78:	8082                	ret
20011f7a:	00f68733          	add	a4,a3,a5
20011f7e:	00074803          	lbu	a6,0(a4) # fffff000 <metal_segment_heap_target_end+0x7fffd890>
20011f82:	00c78733          	add	a4,a5,a2
20011f86:	972a                	add	a4,a4,a0
20011f88:	01070023          	sb	a6,0(a4)
20011f8c:	b7dd                	j	20011f72 <memmove+0x12>
20011f8e:	00f58733          	add	a4,a1,a5
20011f92:	00074683          	lbu	a3,0(a4)
20011f96:	00f50733          	add	a4,a0,a5
20011f9a:	0785                	addi	a5,a5,1
20011f9c:	00d70023          	sb	a3,0(a4)
20011fa0:	fef617e3          	bne	a2,a5,20011f8e <memmove+0x2e>
20011fa4:	8082                	ret
20011fa6:	4781                	li	a5,0
20011fa8:	bfe5                	j	20011fa0 <memmove+0x40>

20011faa <__malloc_lock>:
__malloc_lock():
20011faa:	8082                	ret

20011fac <__malloc_unlock>:
__malloc_unlock():
20011fac:	8082                	ret

20011fae <_realloc_r>:
_realloc_r():
20011fae:	e581                	bnez	a1,20011fb6 <_realloc_r+0x8>
20011fb0:	85b2                	mv	a1,a2
20011fb2:	a1aff06f          	j	200111cc <_malloc_r>
20011fb6:	1101                	addi	sp,sp,-32
20011fb8:	cc22                	sw	s0,24(sp)
20011fba:	ce06                	sw	ra,28(sp)
20011fbc:	ca26                	sw	s1,20(sp)
20011fbe:	c84a                	sw	s2,16(sp)
20011fc0:	c64e                	sw	s3,12(sp)
20011fc2:	8432                	mv	s0,a2
20011fc4:	ee01                	bnez	a2,20011fdc <_realloc_r+0x2e>
20011fc6:	956ff0ef          	jal	ra,2001111c <_free_r>
20011fca:	4901                	li	s2,0
20011fcc:	40f2                	lw	ra,28(sp)
20011fce:	4462                	lw	s0,24(sp)
20011fd0:	854a                	mv	a0,s2
20011fd2:	44d2                	lw	s1,20(sp)
20011fd4:	4942                	lw	s2,16(sp)
20011fd6:	49b2                	lw	s3,12(sp)
20011fd8:	6105                	addi	sp,sp,32
20011fda:	8082                	ret
20011fdc:	84ae                	mv	s1,a1
20011fde:	89aa                	mv	s3,a0
20011fe0:	2889                	jal	20012032 <_malloc_usable_size_r>
20011fe2:	8926                	mv	s2,s1
20011fe4:	fe8574e3          	bgeu	a0,s0,20011fcc <_realloc_r+0x1e>
20011fe8:	85a2                	mv	a1,s0
20011fea:	854e                	mv	a0,s3
20011fec:	9e0ff0ef          	jal	ra,200111cc <_malloc_r>
20011ff0:	892a                	mv	s2,a0
20011ff2:	dd69                	beqz	a0,20011fcc <_realloc_r+0x1e>
20011ff4:	85a6                	mv	a1,s1
20011ff6:	8622                	mv	a2,s0
20011ff8:	3d4d                	jal	20011eaa <memcpy>
20011ffa:	85a6                	mv	a1,s1
20011ffc:	854e                	mv	a0,s3
20011ffe:	91eff0ef          	jal	ra,2001111c <_free_r>
20012002:	b7e9                	j	20011fcc <_realloc_r+0x1e>

20012004 <_read_r>:
_read_r():
20012004:	1141                	addi	sp,sp,-16
20012006:	c422                	sw	s0,8(sp)
20012008:	842a                	mv	s0,a0
2001200a:	852e                	mv	a0,a1
2001200c:	85b2                	mv	a1,a2
2001200e:	8636                	mv	a2,a3
20012010:	8e01a223          	sw	zero,-1820(gp) # 80000b6c <errno>
20012014:	c606                	sw	ra,12(sp)
20012016:	6a6040ef          	jal	ra,200166bc <_read>
2001201a:	57fd                	li	a5,-1
2001201c:	00f51763          	bne	a0,a5,2001202a <_read_r+0x26>
20012020:	8e418793          	addi	a5,gp,-1820 # 80000b6c <errno>
20012024:	439c                	lw	a5,0(a5)
20012026:	c391                	beqz	a5,2001202a <_read_r+0x26>
20012028:	c01c                	sw	a5,0(s0)
2001202a:	40b2                	lw	ra,12(sp)
2001202c:	4422                	lw	s0,8(sp)
2001202e:	0141                	addi	sp,sp,16
20012030:	8082                	ret

20012032 <_malloc_usable_size_r>:
_malloc_usable_size_r():
20012032:	ffc5a783          	lw	a5,-4(a1)
20012036:	ffc78513          	addi	a0,a5,-4
2001203a:	0007d563          	bgez	a5,20012044 <_malloc_usable_size_r+0x12>
2001203e:	95aa                	add	a1,a1,a0
20012040:	419c                	lw	a5,0(a1)
20012042:	953e                	add	a0,a0,a5
20012044:	8082                	ret

20012046 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:203
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
20012046:	1101                	addi	sp,sp,-32
20012048:	ce22                	sw	s0,28(sp)
2001204a:	1000                	addi	s0,sp,32
2001204c:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:204
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20012050:	fec42703          	lw	a4,-20(s0)
20012054:	800017b7          	lui	a5,0x80001
20012058:	a9478793          	addi	a5,a5,-1388 # 80000a94 <metal_segment_heap_target_end+0xfffff324>
2001205c:	00f71563          	bne	a4,a5,20012066 <__metal_driver_sifive_clint0_control_base+0x20>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:205
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20012060:	020007b7          	lui	a5,0x2000
20012064:	a011                	j	20012068 <__metal_driver_sifive_clint0_control_base+0x22>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:208
	}
	else {
		return 0;
20012066:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:210
	}
}
20012068:	853e                	mv	a0,a5
2001206a:	4472                	lw	s0,28(sp)
2001206c:	6105                	addi	sp,sp,32
2001206e:	8082                	ret

20012070 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:223
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20012070:	1101                	addi	sp,sp,-32
20012072:	ce22                	sw	s0,28(sp)
20012074:	1000                	addi	s0,sp,32
20012076:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:224
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
2001207a:	fec42703          	lw	a4,-20(s0)
2001207e:	800017b7          	lui	a5,0x80001
20012082:	a9478793          	addi	a5,a5,-1388 # 80000a94 <metal_segment_heap_target_end+0xfffff324>
20012086:	00f71463          	bne	a4,a5,2001208e <__metal_driver_sifive_clint0_num_interrupts+0x1e>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:225
		return METAL_MAX_CLINT_INTERRUPTS;
2001208a:	4789                	li	a5,2
2001208c:	a011                	j	20012090 <__metal_driver_sifive_clint0_num_interrupts+0x20>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:228
	}
	else {
		return 0;
2001208e:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:230
	}
}
20012090:	853e                	mv	a0,a5
20012092:	4472                	lw	s0,28(sp)
20012094:	6105                	addi	sp,sp,32
20012096:	8082                	ret

20012098 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:233

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20012098:	1101                	addi	sp,sp,-32
2001209a:	ce22                	sw	s0,28(sp)
2001209c:	1000                	addi	s0,sp,32
2001209e:	fea42623          	sw	a0,-20(s0)
200120a2:	feb42423          	sw	a1,-24(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:234
	if (idx == 0) {
200120a6:	fe842783          	lw	a5,-24(s0)
200120aa:	e791                	bnez	a5,200120b6 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:235
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
200120ac:	800007b7          	lui	a5,0x80000
200120b0:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe920>
200120b4:	a821                	j	200120cc <__metal_driver_sifive_clint0_interrupt_parents+0x34>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:237
	}
	else if (idx == 1) {
200120b6:	fe842703          	lw	a4,-24(s0)
200120ba:	4785                	li	a5,1
200120bc:	00f71763          	bne	a4,a5,200120ca <__metal_driver_sifive_clint0_interrupt_parents+0x32>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:238
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
200120c0:	800007b7          	lui	a5,0x80000
200120c4:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe920>
200120c8:	a011                	j	200120cc <__metal_driver_sifive_clint0_interrupt_parents+0x34>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:241
	}
	else {
		return NULL;
200120ca:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:243
	}
}
200120cc:	853e                	mv	a0,a5
200120ce:	4472                	lw	s0,28(sp)
200120d0:	6105                	addi	sp,sp,32
200120d2:	8082                	ret

200120d4 <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:246

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
200120d4:	1101                	addi	sp,sp,-32
200120d6:	ce22                	sw	s0,28(sp)
200120d8:	1000                	addi	s0,sp,32
200120da:	fea42623          	sw	a0,-20(s0)
200120de:	feb42423          	sw	a1,-24(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:247
	if (idx == 0) {
200120e2:	fe842783          	lw	a5,-24(s0)
200120e6:	e399                	bnez	a5,200120ec <__metal_driver_sifive_clint0_interrupt_lines+0x18>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:248
		return 3;
200120e8:	478d                	li	a5,3
200120ea:	a809                	j	200120fc <__metal_driver_sifive_clint0_interrupt_lines+0x28>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:250
	}
	else if (idx == 1) {
200120ec:	fe842703          	lw	a4,-24(s0)
200120f0:	4785                	li	a5,1
200120f2:	00f71463          	bne	a4,a5,200120fa <__metal_driver_sifive_clint0_interrupt_lines+0x26>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:251
		return 7;
200120f6:	479d                	li	a5,7
200120f8:	a011                	j	200120fc <__metal_driver_sifive_clint0_interrupt_lines+0x28>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:254
	}
	else {
		return 0;
200120fa:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:256
	}
}
200120fc:	853e                	mv	a0,a5
200120fe:	4472                	lw	s0,28(sp)
20012100:	6105                	addi	sp,sp,32
20012102:	8082                	ret

20012104 <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/cpu.h>
#include <metal/drivers/riscv_clint0.h>
#include <metal/machine.h>

unsigned long long __metal_clint0_mtime_get (struct __metal_driver_riscv_clint0 *clint)
{
20012104:	715d                	addi	sp,sp,-80
20012106:	c686                	sw	ra,76(sp)
20012108:	c4a2                	sw	s0,72(sp)
2001210a:	c2ca                	sw	s2,68(sp)
2001210c:	c0ce                	sw	s3,64(sp)
2001210e:	de52                	sw	s4,60(sp)
20012110:	dc56                	sw	s5,56(sp)
20012112:	da5a                	sw	s6,52(sp)
20012114:	d85e                	sw	s7,48(sp)
20012116:	d662                	sw	s8,44(sp)
20012118:	d466                	sw	s9,40(sp)
2001211a:	0880                	addi	s0,sp,80
2001211c:	faa42e23          	sw	a0,-68(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:16
    __metal_io_u32 lo, hi;
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(&clint->controller);
20012120:	fbc42783          	lw	a5,-68(s0)
20012124:	853e                	mv	a0,a5
20012126:	3705                	jal	20012046 <__metal_driver_sifive_clint0_control_base>
20012128:	fca42623          	sw	a0,-52(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:20 (discriminator 1)

    /* Guard against rollover when reading */
    do {
	hi = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
2001212c:	fcc42703          	lw	a4,-52(s0)
20012130:	67b1                	lui	a5,0xc
20012132:	17f1                	addi	a5,a5,-4
20012134:	97ba                	add	a5,a5,a4
20012136:	439c                	lw	a5,0(a5)
20012138:	fcf42423          	sw	a5,-56(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)
	lo = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
2001213c:	fcc42703          	lw	a4,-52(s0)
20012140:	67b1                	lui	a5,0xc
20012142:	17e1                	addi	a5,a5,-8
20012144:	97ba                	add	a5,a5,a4
20012146:	439c                	lw	a5,0(a5)
20012148:	fcf42223          	sw	a5,-60(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:22 (discriminator 1)
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4)) != hi);
2001214c:	fcc42703          	lw	a4,-52(s0)
20012150:	67b1                	lui	a5,0xc
20012152:	17f1                	addi	a5,a5,-4
20012154:	97ba                	add	a5,a5,a4
20012156:	439c                	lw	a5,0(a5)
20012158:	fc842703          	lw	a4,-56(s0)
2001215c:	fcf718e3          	bne	a4,a5,2001212c <__metal_clint0_mtime_get+0x28>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:24

    return (((unsigned long long)hi) << 32) | lo;
20012160:	fc842783          	lw	a5,-56(s0)
20012164:	8c3e                	mv	s8,a5
20012166:	4c81                	li	s9,0
20012168:	000c1993          	slli	s3,s8,0x0
2001216c:	4901                	li	s2,0
2001216e:	fc442783          	lw	a5,-60(s0)
20012172:	8a3e                	mv	s4,a5
20012174:	4a81                	li	s5,0
20012176:	01496b33          	or	s6,s2,s4
2001217a:	0159ebb3          	or	s7,s3,s5
2001217e:	87da                	mv	a5,s6
20012180:	885e                	mv	a6,s7
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:25
}
20012182:	853e                	mv	a0,a5
20012184:	85c2                	mv	a1,a6
20012186:	40b6                	lw	ra,76(sp)
20012188:	4426                	lw	s0,72(sp)
2001218a:	4916                	lw	s2,68(sp)
2001218c:	4986                	lw	s3,64(sp)
2001218e:	5a72                	lw	s4,60(sp)
20012190:	5ae2                	lw	s5,56(sp)
20012192:	5b52                	lw	s6,52(sp)
20012194:	5bc2                	lw	s7,48(sp)
20012196:	5c32                	lw	s8,44(sp)
20012198:	5ca2                	lw	s9,40(sp)
2001219a:	6161                	addi	sp,sp,80
2001219c:	8082                	ret

2001219e <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:30

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time)
{   
2001219e:	7179                	addi	sp,sp,-48
200121a0:	d606                	sw	ra,44(sp)
200121a2:	d422                	sw	s0,40(sp)
200121a4:	d24a                	sw	s2,36(sp)
200121a6:	d04e                	sw	s3,32(sp)
200121a8:	1800                	addi	s0,sp,48
200121aa:	fca42e23          	sw	a0,-36(s0)
200121ae:	fcb42c23          	sw	a1,-40(s0)
200121b2:	fcc42823          	sw	a2,-48(s0)
200121b6:	fcd42a23          	sw	a3,-44(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:31
    struct __metal_driver_riscv_clint0 *clint =
200121ba:	fdc42783          	lw	a5,-36(s0)
200121be:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:33
                              (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(&clint->controller);
200121c2:	fec42783          	lw	a5,-20(s0)
200121c6:	853e                	mv	a0,a5
200121c8:	3dbd                	jal	20012046 <__metal_driver_sifive_clint0_control_base>
200121ca:	fea42423          	sw	a0,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:40
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE + 4)) = 0xFFFFFFFF;
200121ce:	fd842783          	lw	a5,-40(s0)
200121d2:	078e                	slli	a5,a5,0x3
200121d4:	873e                	mv	a4,a5
200121d6:	fe842783          	lw	a5,-24(s0)
200121da:	973e                	add	a4,a4,a5
200121dc:	6791                	lui	a5,0x4
200121de:	0791                	addi	a5,a5,4
200121e0:	97ba                	add	a5,a5,a4
200121e2:	873e                	mv	a4,a5
200121e4:	57fd                	li	a5,-1
200121e6:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:41
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE)) = (__metal_io_u32)time;
200121e8:	fd842783          	lw	a5,-40(s0)
200121ec:	078e                	slli	a5,a5,0x3
200121ee:	873e                	mv	a4,a5
200121f0:	fe842783          	lw	a5,-24(s0)
200121f4:	973e                	add	a4,a4,a5
200121f6:	6791                	lui	a5,0x4
200121f8:	97ba                	add	a5,a5,a4
200121fa:	873e                	mv	a4,a5
200121fc:	fd042783          	lw	a5,-48(s0)
20012200:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:42
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) + METAL_RISCV_CLINT0_MTIMECMP_BASE + 4)) = (__metal_io_u32)(time >> 32);
20012202:	fd442783          	lw	a5,-44(s0)
20012206:	0007d913          	srli	s2,a5,0x0
2001220a:	4981                	li	s3,0
2001220c:	fd842783          	lw	a5,-40(s0)
20012210:	078e                	slli	a5,a5,0x3
20012212:	873e                	mv	a4,a5
20012214:	fe842783          	lw	a5,-24(s0)
20012218:	973e                	add	a4,a4,a5
2001221a:	6791                	lui	a5,0x4
2001221c:	0791                	addi	a5,a5,4
2001221e:	97ba                	add	a5,a5,a4
20012220:	874a                	mv	a4,s2
20012222:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:43
    return 0;
20012224:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:44
}
20012226:	853e                	mv	a0,a5
20012228:	50b2                	lw	ra,44(sp)
2001222a:	5422                	lw	s0,40(sp)
2001222c:	5912                	lw	s2,36(sp)
2001222e:	5982                	lw	s3,32(sp)
20012230:	6145                	addi	sp,sp,48
20012232:	8082                	ret

20012234 <_get_cpu_intc>:
_get_cpu_intc():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:47

static struct metal_interrupt *_get_cpu_intc()
{
20012234:	1101                	addi	sp,sp,-32
20012236:	ce06                	sw	ra,28(sp)
20012238:	cc22                	sw	s0,24(sp)
2001223a:	1000                	addi	s0,sp,32
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:48
    int hartid = 0;
2001223c:	fe042623          	sw	zero,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:49
    __asm__ volatile("csrr %[hartid], mhartid"
20012240:	f14027f3          	csrr	a5,mhartid
20012244:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:52
                     : [hartid] "=r" (hartid) :: "memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20012248:	fec42783          	lw	a5,-20(s0)
2001224c:	853e                	mv	a0,a5
2001224e:	6bb030ef          	jal	ra,20016108 <metal_cpu_get>
20012252:	fea42423          	sw	a0,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:54

    return metal_cpu_interrupt_controller(cpu);
20012256:	fe842503          	lw	a0,-24(s0)
2001225a:	689030ef          	jal	ra,200160e2 <metal_cpu_interrupt_controller>
2001225e:	87aa                	mv	a5,a0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:55
}
20012260:	853e                	mv	a0,a5
20012262:	40f2                	lw	ra,28(sp)
20012264:	4462                	lw	s0,24(sp)
20012266:	6105                	addi	sp,sp,32
20012268:	8082                	ret

2001226a <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:58

void __metal_driver_riscv_clint0_init (struct metal_interrupt *controller)
{
2001226a:	7139                	addi	sp,sp,-64
2001226c:	de06                	sw	ra,60(sp)
2001226e:	dc22                	sw	s0,56(sp)
20012270:	0080                	addi	s0,sp,64
20012272:	fca42623          	sw	a0,-52(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:59
    int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
20012276:	fcc42503          	lw	a0,-52(s0)
2001227a:	3bdd                	jal	20012070 <__metal_driver_sifive_clint0_num_interrupts>
2001227c:	fea42423          	sw	a0,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:60
    struct __metal_driver_riscv_clint0 *clint =
20012280:	fcc42783          	lw	a5,-52(s0)
20012284:	fef42223          	sw	a5,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:63
                              (struct __metal_driver_riscv_clint0 *)(controller);

    if ( !clint->init_done ) {
20012288:	fe442783          	lw	a5,-28(s0)
2001228c:	43dc                	lw	a5,4(a5)
2001228e:	efa9                	bnez	a5,200122e8 <__metal_driver_riscv_clint0_init+0x7e>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:65
	/* Register its interrupts with with parent controller, aka sw and timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20012290:	fe042623          	sw	zero,-20(s0)
20012294:	a081                	j	200122d4 <__metal_driver_riscv_clint0_init+0x6a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:66 (discriminator 3)
	  struct metal_interrupt *intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20012296:	fec42583          	lw	a1,-20(s0)
2001229a:	fcc42503          	lw	a0,-52(s0)
2001229e:	3bed                	jal	20012098 <__metal_driver_sifive_clint0_interrupt_parents>
200122a0:	fea42023          	sw	a0,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:67 (discriminator 3)
	  int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200122a4:	fec42583          	lw	a1,-20(s0)
200122a8:	fcc42503          	lw	a0,-52(s0)
200122ac:	3525                	jal	200120d4 <__metal_driver_sifive_clint0_interrupt_lines>
200122ae:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:68 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
200122b2:	fe042783          	lw	a5,-32(s0)
200122b6:	439c                	lw	a5,0(a5)
200122b8:	4fdc                	lw	a5,28(a5)
200122ba:	fcc42683          	lw	a3,-52(s0)
200122be:	4601                	li	a2,0
200122c0:	fdc42583          	lw	a1,-36(s0)
200122c4:	fe042503          	lw	a0,-32(s0)
200122c8:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:65 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
200122ca:	fec42783          	lw	a5,-20(s0)
200122ce:	0785                	addi	a5,a5,1
200122d0:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:65 (discriminator 1)
200122d4:	fec42703          	lw	a4,-20(s0)
200122d8:	fe842783          	lw	a5,-24(s0)
200122dc:	faf74de3          	blt	a4,a5,20012296 <__metal_driver_riscv_clint0_init+0x2c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:70
	}
	clint->init_done = 1;
200122e0:	fe442783          	lw	a5,-28(s0)
200122e4:	4705                	li	a4,1
200122e6:	c3d8                	sw	a4,4(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:72
    }	
}
200122e8:	0001                	nop
200122ea:	50f2                	lw	ra,60(sp)
200122ec:	5462                	lw	s0,56(sp)
200122ee:	6121                	addi	sp,sp,64
200122f0:	8082                	ret

200122f2 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:77

int __metal_driver_riscv_clint0_register (struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv)
{
200122f2:	7139                	addi	sp,sp,-64
200122f4:	de06                	sw	ra,60(sp)
200122f6:	dc22                	sw	s0,56(sp)
200122f8:	0080                	addi	s0,sp,64
200122fa:	fca42623          	sw	a0,-52(s0)
200122fe:	fcb42423          	sw	a1,-56(s0)
20012302:	fcc42223          	sw	a2,-60(s0)
20012306:	fcd42023          	sw	a3,-64(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:78
    int rc = -1;
2001230a:	57fd                	li	a5,-1
2001230c:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:79
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20012310:	3c8010ef          	jal	ra,200136d8 <__metal_controller_interrupt_vector_mode>
20012314:	fea42023          	sw	a0,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:80
    struct metal_interrupt *intc = NULL;
20012318:	fe042423          	sw	zero,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:81
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
2001231c:	3f21                	jal	20012234 <_get_cpu_intc>
2001231e:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:82
    int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
20012322:	fcc42503          	lw	a0,-52(s0)
20012326:	33a9                	jal	20012070 <__metal_driver_sifive_clint0_num_interrupts>
20012328:	fca42c23          	sw	a0,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:84

    if ( (mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE) ) {
2001232c:	fe042703          	lw	a4,-32(s0)
20012330:	4785                	li	a5,1
20012332:	00f70863          	beq	a4,a5,20012342 <__metal_driver_riscv_clint0_register+0x50>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:84 (discriminator 1)
20012336:	fe042783          	lw	a5,-32(s0)
2001233a:	c781                	beqz	a5,20012342 <__metal_driver_riscv_clint0_register+0x50>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:85
        return rc;
2001233c:	fec42783          	lw	a5,-20(s0)
20012340:	a049                	j	200123c2 <__metal_driver_riscv_clint0_register+0xd0>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:88
    }

    for(int i = 0; i < num_interrupts; i++) {
20012342:	fe042223          	sw	zero,-28(s0)
20012346:	a091                	j	2001238a <__metal_driver_riscv_clint0_register+0x98>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:89
	int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20012348:	fe442583          	lw	a1,-28(s0)
2001234c:	fcc42503          	lw	a0,-52(s0)
20012350:	3351                	jal	200120d4 <__metal_driver_sifive_clint0_interrupt_lines>
20012352:	fca42a23          	sw	a0,-44(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:90
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20012356:	fe442583          	lw	a1,-28(s0)
2001235a:	fcc42503          	lw	a0,-52(s0)
2001235e:	3b2d                	jal	20012098 <__metal_driver_sifive_clint0_interrupt_parents>
20012360:	fea42423          	sw	a0,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:91
        if (cpu_intc == intc && id == line) {
20012364:	fdc42703          	lw	a4,-36(s0)
20012368:	fe842783          	lw	a5,-24(s0)
2001236c:	00f71863          	bne	a4,a5,2001237c <__metal_driver_riscv_clint0_register+0x8a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:91 (discriminator 1)
20012370:	fc842703          	lw	a4,-56(s0)
20012374:	fd442783          	lw	a5,-44(s0)
20012378:	02f70063          	beq	a4,a5,20012398 <__metal_driver_riscv_clint0_register+0xa6>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:94 (discriminator 2)
            break;
        }
	intc = NULL;
2001237c:	fe042423          	sw	zero,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:88 (discriminator 2)
    for(int i = 0; i < num_interrupts; i++) {
20012380:	fe442783          	lw	a5,-28(s0)
20012384:	0785                	addi	a5,a5,1
20012386:	fef42223          	sw	a5,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:88 (discriminator 1)
2001238a:	fe442703          	lw	a4,-28(s0)
2001238e:	fd842783          	lw	a5,-40(s0)
20012392:	faf74be3          	blt	a4,a5,20012348 <__metal_driver_riscv_clint0_register+0x56>
20012396:	a011                	j	2001239a <__metal_driver_riscv_clint0_register+0xa8>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:92
            break;
20012398:	0001                	nop
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:98
    }

    /* Register its interrupts with parent controller */
    if (intc) {
2001239a:	fe842783          	lw	a5,-24(s0)
2001239e:	c385                	beqz	a5,200123be <__metal_driver_riscv_clint0_register+0xcc>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:99
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
200123a0:	fe842783          	lw	a5,-24(s0)
200123a4:	439c                	lw	a5,0(a5)
200123a6:	4fdc                	lw	a5,28(a5)
200123a8:	fc042683          	lw	a3,-64(s0)
200123ac:	fc442603          	lw	a2,-60(s0)
200123b0:	fc842583          	lw	a1,-56(s0)
200123b4:	fe842503          	lw	a0,-24(s0)
200123b8:	9782                	jalr	a5
200123ba:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:101
    }
    return rc;
200123be:	fec42783          	lw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:102
}
200123c2:	853e                	mv	a0,a5
200123c4:	50f2                	lw	ra,60(sp)
200123c6:	5462                	lw	s0,56(sp)
200123c8:	6121                	addi	sp,sp,64
200123ca:	8082                	ret

200123cc <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:107

int __metal_driver_riscv_clint0_vector_register (struct metal_interrupt *controller,
                                                 int id, metal_interrupt_vector_handler_t isr,
                                                 void *priv)
{   
200123cc:	7179                	addi	sp,sp,-48
200123ce:	d622                	sw	s0,44(sp)
200123d0:	1800                	addi	s0,sp,48
200123d2:	fca42e23          	sw	a0,-36(s0)
200123d6:	fcb42c23          	sw	a1,-40(s0)
200123da:	fcc42a23          	sw	a2,-44(s0)
200123de:	fcd42823          	sw	a3,-48(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:109
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
200123e2:	57fd                	li	a5,-1
200123e4:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:110
    return rc;
200123e8:	fec42783          	lw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:111
}
200123ec:	853e                	mv	a0,a5
200123ee:	5432                	lw	s0,44(sp)
200123f0:	6145                	addi	sp,sp,48
200123f2:	8082                	ret

200123f4 <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:114

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode (struct metal_interrupt *controller)
{
200123f4:	1101                	addi	sp,sp,-32
200123f6:	ce06                	sw	ra,28(sp)
200123f8:	cc22                	sw	s0,24(sp)
200123fa:	1000                	addi	s0,sp,32
200123fc:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:115
    return __metal_controller_interrupt_vector_mode();
20012400:	2d8010ef          	jal	ra,200136d8 <__metal_controller_interrupt_vector_mode>
20012404:	87aa                	mv	a5,a0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:116
}
20012406:	853e                	mv	a0,a5
20012408:	40f2                	lw	ra,28(sp)
2001240a:	4462                	lw	s0,24(sp)
2001240c:	6105                	addi	sp,sp,32
2001240e:	8082                	ret

20012410 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_set_vector_mode (struct metal_interrupt *controller, metal_vector_mode mode)
{
20012410:	7179                	addi	sp,sp,-48
20012412:	d606                	sw	ra,44(sp)
20012414:	d422                	sw	s0,40(sp)
20012416:	1800                	addi	s0,sp,48
20012418:	fca42e23          	sw	a0,-36(s0)
2001241c:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:120
    int rc = -1;
20012420:	57fd                	li	a5,-1
20012422:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:121
    struct metal_interrupt *intc = _get_cpu_intc();
20012426:	3539                	jal	20012234 <_get_cpu_intc>
20012428:	fea42423          	sw	a0,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:123

    if (intc) {
2001242c:	fe842783          	lw	a5,-24(s0)
20012430:	c395                	beqz	a5,20012454 <__metal_driver_riscv_clint0_set_vector_mode+0x44>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:125
	/* Valid vector modes are VECTOR and DIRECT, anything else is invalid (-1) */
        switch (mode) {
20012432:	fd842703          	lw	a4,-40(s0)
20012436:	4785                	li	a5,1
20012438:	00e7ef63          	bltu	a5,a4,20012456 <__metal_driver_riscv_clint0_set_vector_mode+0x46>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:128
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
2001243c:	fe842783          	lw	a5,-24(s0)
20012440:	439c                	lw	a5,0(a5)
20012442:	43dc                	lw	a5,4(a5)
20012444:	fd842583          	lw	a1,-40(s0)
20012448:	fe842503          	lw	a0,-24(s0)
2001244c:	9782                	jalr	a5
2001244e:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:129
            break;
20012452:	a011                	j	20012456 <__metal_driver_riscv_clint0_set_vector_mode+0x46>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:131
        }
    }
20012454:	0001                	nop
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:132
    return rc;
20012456:	fec42783          	lw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:133
}
2001245a:	853e                	mv	a0,a5
2001245c:	50b2                	lw	ra,44(sp)
2001245e:	5422                	lw	s0,40(sp)
20012460:	6145                	addi	sp,sp,48
20012462:	8082                	ret

20012464 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:136

int __metal_driver_riscv_clint0_enable (struct metal_interrupt *controller, int id)
{
20012464:	7139                	addi	sp,sp,-64
20012466:	de06                	sw	ra,60(sp)
20012468:	dc22                	sw	s0,56(sp)
2001246a:	0080                	addi	s0,sp,64
2001246c:	fca42623          	sw	a0,-52(s0)
20012470:	fcb42423          	sw	a1,-56(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:137
    int rc = -1;
20012474:	57fd                	li	a5,-1
20012476:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:139

    if ( id ) {
2001247a:	fc842783          	lw	a5,-56(s0)
2001247e:	c7c9                	beqz	a5,20012508 <__metal_driver_riscv_clint0_enable+0xa4>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:140
        struct metal_interrupt *intc = NULL;
20012480:	fe042423          	sw	zero,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:141
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20012484:	3b45                	jal	20012234 <_get_cpu_intc>
20012486:	fea42023          	sw	a0,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:142
	int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
2001248a:	fcc42503          	lw	a0,-52(s0)
2001248e:	36cd                	jal	20012070 <__metal_driver_sifive_clint0_num_interrupts>
20012490:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:144

        for(int i = 0; i < num_interrupts; i++) {
20012494:	fe042223          	sw	zero,-28(s0)
20012498:	a091                	j	200124dc <__metal_driver_riscv_clint0_enable+0x78>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:145
	    int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2001249a:	fe442583          	lw	a1,-28(s0)
2001249e:	fcc42503          	lw	a0,-52(s0)
200124a2:	390d                	jal	200120d4 <__metal_driver_sifive_clint0_interrupt_lines>
200124a4:	fca42c23          	sw	a0,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:146
	    intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200124a8:	fe442583          	lw	a1,-28(s0)
200124ac:	fcc42503          	lw	a0,-52(s0)
200124b0:	36e5                	jal	20012098 <__metal_driver_sifive_clint0_interrupt_parents>
200124b2:	fea42423          	sw	a0,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:147
            if(cpu_intc == intc && id == line) {
200124b6:	fe042703          	lw	a4,-32(s0)
200124ba:	fe842783          	lw	a5,-24(s0)
200124be:	00f71863          	bne	a4,a5,200124ce <__metal_driver_riscv_clint0_enable+0x6a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:147 (discriminator 1)
200124c2:	fc842703          	lw	a4,-56(s0)
200124c6:	fd842783          	lw	a5,-40(s0)
200124ca:	02f70063          	beq	a4,a5,200124ea <__metal_driver_riscv_clint0_enable+0x86>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:150 (discriminator 2)
                break;
            }
	    intc = NULL;
200124ce:	fe042423          	sw	zero,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:144 (discriminator 2)
        for(int i = 0; i < num_interrupts; i++) {
200124d2:	fe442783          	lw	a5,-28(s0)
200124d6:	0785                	addi	a5,a5,1
200124d8:	fef42223          	sw	a5,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:144 (discriminator 1)
200124dc:	fe442703          	lw	a4,-28(s0)
200124e0:	fdc42783          	lw	a5,-36(s0)
200124e4:	faf74be3          	blt	a4,a5,2001249a <__metal_driver_riscv_clint0_enable+0x36>
200124e8:	a011                	j	200124ec <__metal_driver_riscv_clint0_enable+0x88>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:148
                break;
200124ea:	0001                	nop
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:154
        }
        
        /* Enable its interrupts with parent controller */
        if (intc) {
200124ec:	fe842783          	lw	a5,-24(s0)
200124f0:	cf81                	beqz	a5,20012508 <__metal_driver_riscv_clint0_enable+0xa4>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:155
            rc = intc->vtable->interrupt_enable(intc, id);
200124f2:	fe842783          	lw	a5,-24(s0)
200124f6:	439c                	lw	a5,0(a5)
200124f8:	53dc                	lw	a5,36(a5)
200124fa:	fc842583          	lw	a1,-56(s0)
200124fe:	fe842503          	lw	a0,-24(s0)
20012502:	9782                	jalr	a5
20012504:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:159
        }
    }

    return rc;
20012508:	fec42783          	lw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:160
}
2001250c:	853e                	mv	a0,a5
2001250e:	50f2                	lw	ra,60(sp)
20012510:	5462                	lw	s0,56(sp)
20012512:	6121                	addi	sp,sp,64
20012514:	8082                	ret

20012516 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:163

int __metal_driver_riscv_clint0_disable (struct metal_interrupt *controller, int id)
{
20012516:	7139                	addi	sp,sp,-64
20012518:	de06                	sw	ra,60(sp)
2001251a:	dc22                	sw	s0,56(sp)
2001251c:	0080                	addi	s0,sp,64
2001251e:	fca42623          	sw	a0,-52(s0)
20012522:	fcb42423          	sw	a1,-56(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:164
    int rc = -1;
20012526:	57fd                	li	a5,-1
20012528:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:166

    if ( id ) {
2001252c:	fc842783          	lw	a5,-56(s0)
20012530:	c7c9                	beqz	a5,200125ba <__metal_driver_riscv_clint0_disable+0xa4>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:167
        struct metal_interrupt *intc = NULL;
20012532:	fe042423          	sw	zero,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:168
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20012536:	39fd                	jal	20012234 <_get_cpu_intc>
20012538:	fea42023          	sw	a0,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:169
	int num_interrupts = __metal_driver_sifive_clint0_num_interrupts(controller);
2001253c:	fcc42503          	lw	a0,-52(s0)
20012540:	3e05                	jal	20012070 <__metal_driver_sifive_clint0_num_interrupts>
20012542:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:171

        for(int i = 0; i < num_interrupts; i++) {
20012546:	fe042223          	sw	zero,-28(s0)
2001254a:	a091                	j	2001258e <__metal_driver_riscv_clint0_disable+0x78>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:172
	    int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2001254c:	fe442583          	lw	a1,-28(s0)
20012550:	fcc42503          	lw	a0,-52(s0)
20012554:	3641                	jal	200120d4 <__metal_driver_sifive_clint0_interrupt_lines>
20012556:	fca42c23          	sw	a0,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:173
	    intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2001255a:	fe442583          	lw	a1,-28(s0)
2001255e:	fcc42503          	lw	a0,-52(s0)
20012562:	3e1d                	jal	20012098 <__metal_driver_sifive_clint0_interrupt_parents>
20012564:	fea42423          	sw	a0,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:174
            if(cpu_intc == intc && id == line) {
20012568:	fe042703          	lw	a4,-32(s0)
2001256c:	fe842783          	lw	a5,-24(s0)
20012570:	00f71863          	bne	a4,a5,20012580 <__metal_driver_riscv_clint0_disable+0x6a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:174 (discriminator 1)
20012574:	fc842703          	lw	a4,-56(s0)
20012578:	fd842783          	lw	a5,-40(s0)
2001257c:	02f70063          	beq	a4,a5,2001259c <__metal_driver_riscv_clint0_disable+0x86>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:177 (discriminator 2)
                break;
            }
	    intc = NULL;
20012580:	fe042423          	sw	zero,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:171 (discriminator 2)
        for(int i = 0; i < num_interrupts; i++) {
20012584:	fe442783          	lw	a5,-28(s0)
20012588:	0785                	addi	a5,a5,1
2001258a:	fef42223          	sw	a5,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:171 (discriminator 1)
2001258e:	fe442703          	lw	a4,-28(s0)
20012592:	fdc42783          	lw	a5,-36(s0)
20012596:	faf74be3          	blt	a4,a5,2001254c <__metal_driver_riscv_clint0_disable+0x36>
2001259a:	a011                	j	2001259e <__metal_driver_riscv_clint0_disable+0x88>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:175
                break;
2001259c:	0001                	nop
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:181
        }
        
        /* Disable its interrupts with parent controller */
        if (intc) {
2001259e:	fe842783          	lw	a5,-24(s0)
200125a2:	cf81                	beqz	a5,200125ba <__metal_driver_riscv_clint0_disable+0xa4>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:182
            rc = intc->vtable->interrupt_disable(intc, id);
200125a4:	fe842783          	lw	a5,-24(s0)
200125a8:	439c                	lw	a5,0(a5)
200125aa:	579c                	lw	a5,40(a5)
200125ac:	fc842583          	lw	a1,-56(s0)
200125b0:	fe842503          	lw	a0,-24(s0)
200125b4:	9782                	jalr	a5
200125b6:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:186
        }
    }

    return rc;
200125ba:	fec42783          	lw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:187
}
200125be:	853e                	mv	a0,a5
200125c0:	50f2                	lw	ra,60(sp)
200125c2:	5462                	lw	s0,56(sp)
200125c4:	6121                	addi	sp,sp,64
200125c6:	8082                	ret

200125c8 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:191

int __metal_driver_riscv_clint0_command_request (struct metal_interrupt *controller,
                                               int command, void *data)
{
200125c8:	7179                	addi	sp,sp,-48
200125ca:	d606                	sw	ra,44(sp)
200125cc:	d422                	sw	s0,40(sp)
200125ce:	1800                	addi	s0,sp,48
200125d0:	fca42e23          	sw	a0,-36(s0)
200125d4:	fcb42c23          	sw	a1,-40(s0)
200125d8:	fcc42a23          	sw	a2,-44(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:193
    int hartid;
    int rc = -1;
200125dc:	57fd                	li	a5,-1
200125de:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:194
    struct __metal_driver_riscv_clint0 *clint =
200125e2:	fdc42783          	lw	a5,-36(s0)
200125e6:	fef42423          	sw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:196
                              (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base = __metal_driver_sifive_clint0_control_base(controller);
200125ea:	fdc42503          	lw	a0,-36(s0)
200125ee:	a59ff0ef          	jal	ra,20012046 <__metal_driver_sifive_clint0_control_base>
200125f2:	fea42223          	sw	a0,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:198

    switch (command) {
200125f6:	fd842703          	lw	a4,-40(s0)
200125fa:	4789                	li	a5,2
200125fc:	04f70863          	beq	a4,a5,2001264c <__metal_driver_riscv_clint0_command_request+0x84>
20012600:	fd842703          	lw	a4,-40(s0)
20012604:	4789                	li	a5,2
20012606:	00e7c863          	blt	a5,a4,20012616 <__metal_driver_riscv_clint0_command_request+0x4e>
2001260a:	fd842703          	lw	a4,-40(s0)
2001260e:	4785                	li	a5,1
20012610:	00f70e63          	beq	a4,a5,2001262c <__metal_driver_riscv_clint0_command_request+0x64>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:242
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
						    (hartid * 4)));
        }
        break;
    default:
	break;
20012614:	a8e9                	j	200126ee <__metal_driver_riscv_clint0_command_request+0x126>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:198
    switch (command) {
20012616:	fd842703          	lw	a4,-40(s0)
2001261a:	478d                	li	a5,3
2001261c:	04f70c63          	beq	a4,a5,20012674 <__metal_driver_riscv_clint0_command_request+0xac>
20012620:	fd842703          	lw	a4,-40(s0)
20012624:	4791                	li	a5,4
20012626:	08f70863          	beq	a4,a5,200126b6 <__metal_driver_riscv_clint0_command_request+0xee>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:242
	break;
2001262a:	a0d1                	j	200126ee <__metal_driver_riscv_clint0_command_request+0x126>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:200
        if (data) {
2001262c:	fd442783          	lw	a5,-44(s0)
20012630:	cbc5                	beqz	a5,200126e0 <__metal_driver_riscv_clint0_command_request+0x118>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:201
	    *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20012632:	fe842503          	lw	a0,-24(s0)
20012636:	34f9                	jal	20012104 <__metal_clint0_mtime_get>
20012638:	87aa                	mv	a5,a0
2001263a:	882e                	mv	a6,a1
2001263c:	fd442703          	lw	a4,-44(s0)
20012640:	c31c                	sw	a5,0(a4)
20012642:	01072223          	sw	a6,4(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:202
            rc = 0;
20012646:	fe042623          	sw	zero,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:204
        break;
2001264a:	a859                	j	200126e0 <__metal_driver_riscv_clint0_command_request+0x118>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:206
	if (data) {
2001264c:	fd442783          	lw	a5,-44(s0)
20012650:	cbd1                	beqz	a5,200126e4 <__metal_driver_riscv_clint0_command_request+0x11c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:207
	    hartid = *(int *)data;
20012652:	fd442783          	lw	a5,-44(s0)
20012656:	439c                	lw	a5,0(a5)
20012658:	fef42023          	sw	a5,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:208
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2001265c:	fe042783          	lw	a5,-32(s0)
20012660:	078a                	slli	a5,a5,0x2
20012662:	873e                	mv	a4,a5
20012664:	fe442783          	lw	a5,-28(s0)
20012668:	97ba                	add	a5,a5,a4
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:209
					       (hartid * 4))) = METAL_DISABLE;
2001266a:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:210
            rc = 0;
2001266e:	fe042623          	sw	zero,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:212
        break;
20012672:	a88d                	j	200126e4 <__metal_driver_riscv_clint0_command_request+0x11c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:214
	if (data) {
20012674:	fd442783          	lw	a5,-44(s0)
20012678:	cba5                	beqz	a5,200126e8 <__metal_driver_riscv_clint0_command_request+0x120>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:215
	    hartid = *(int *)data;
2001267a:	fd442783          	lw	a5,-44(s0)
2001267e:	439c                	lw	a5,0(a5)
20012680:	fef42023          	sw	a5,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:216
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20012684:	fe042783          	lw	a5,-32(s0)
20012688:	078a                	slli	a5,a5,0x2
2001268a:	873e                	mv	a4,a5
2001268c:	fe442783          	lw	a5,-28(s0)
20012690:	97ba                	add	a5,a5,a4
20012692:	873e                	mv	a4,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:217
					       (hartid * 4))) = METAL_ENABLE;
20012694:	4785                	li	a5,1
20012696:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:227
	    __METAL_IO_FENCE(o,i);
20012698:	0480000f          	fence	o,i
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:228
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2001269c:	fe042783          	lw	a5,-32(s0)
200126a0:	078a                	slli	a5,a5,0x2
200126a2:	873e                	mv	a4,a5
200126a4:	fe442783          	lw	a5,-28(s0)
200126a8:	97ba                	add	a5,a5,a4
200126aa:	439c                	lw	a5,0(a5)
200126ac:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:230
            rc = 0;
200126b0:	fe042623          	sw	zero,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:232
        break;
200126b4:	a815                	j	200126e8 <__metal_driver_riscv_clint0_command_request+0x120>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:234
        rc = 0;
200126b6:	fe042623          	sw	zero,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:235
	if (data) {
200126ba:	fd442783          	lw	a5,-44(s0)
200126be:	c79d                	beqz	a5,200126ec <__metal_driver_riscv_clint0_command_request+0x124>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:236
	    hartid = *(int *)data;
200126c0:	fd442783          	lw	a5,-44(s0)
200126c4:	439c                	lw	a5,0(a5)
200126c6:	fef42023          	sw	a5,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:237
            rc = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
200126ca:	fe042783          	lw	a5,-32(s0)
200126ce:	078a                	slli	a5,a5,0x2
200126d0:	873e                	mv	a4,a5
200126d2:	fe442783          	lw	a5,-28(s0)
200126d6:	97ba                	add	a5,a5,a4
200126d8:	439c                	lw	a5,0(a5)
200126da:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:240
        break;
200126de:	a039                	j	200126ec <__metal_driver_riscv_clint0_command_request+0x124>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:204
        break;
200126e0:	0001                	nop
200126e2:	a031                	j	200126ee <__metal_driver_riscv_clint0_command_request+0x126>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:212
        break;
200126e4:	0001                	nop
200126e6:	a021                	j	200126ee <__metal_driver_riscv_clint0_command_request+0x126>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:232
        break;
200126e8:	0001                	nop
200126ea:	a011                	j	200126ee <__metal_driver_riscv_clint0_command_request+0x126>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:240
        break;
200126ec:	0001                	nop
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:245
    }

    return rc;
200126ee:	fec42783          	lw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:246
}
200126f2:	853e                	mv	a0,a5
200126f4:	50b2                	lw	ra,44(sp)
200126f6:	5422                	lw	s0,40(sp)
200126f8:	6145                	addi	sp,sp,48
200126fa:	8082                	ret

200126fc <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:249

int __metal_driver_riscv_clint0_clear_interrupt (struct metal_interrupt *controller, int id)
{
200126fc:	7179                	addi	sp,sp,-48
200126fe:	d606                	sw	ra,44(sp)
20012700:	d422                	sw	s0,40(sp)
20012702:	1800                	addi	s0,sp,48
20012704:	fca42e23          	sw	a0,-36(s0)
20012708:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:250
    int hartid = metal_cpu_get_current_hartid();
2001270c:	22b030ef          	jal	ra,20016136 <metal_cpu_get_current_hartid>
20012710:	87aa                	mv	a5,a0
20012712:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:251
    return __metal_driver_riscv_clint0_command_request(controller,
20012716:	fec40793          	addi	a5,s0,-20
2001271a:	863e                	mv	a2,a5
2001271c:	4589                	li	a1,2
2001271e:	fdc42503          	lw	a0,-36(s0)
20012722:	355d                	jal	200125c8 <__metal_driver_riscv_clint0_command_request>
20012724:	87aa                	mv	a5,a0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:253
						METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20012726:	853e                	mv	a0,a5
20012728:	50b2                	lw	ra,44(sp)
2001272a:	5422                	lw	s0,40(sp)
2001272c:	6145                	addi	sp,sp,48
2001272e:	8082                	ret

20012730 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:256

int __metal_driver_riscv_clint0_set_interrupt (struct metal_interrupt *controller, int id)
{
20012730:	7179                	addi	sp,sp,-48
20012732:	d606                	sw	ra,44(sp)
20012734:	d422                	sw	s0,40(sp)
20012736:	1800                	addi	s0,sp,48
20012738:	fca42e23          	sw	a0,-36(s0)
2001273c:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:257
    int hartid = metal_cpu_get_current_hartid();
20012740:	1f7030ef          	jal	ra,20016136 <metal_cpu_get_current_hartid>
20012744:	87aa                	mv	a5,a0
20012746:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:258
    return __metal_driver_riscv_clint0_command_request(controller,
2001274a:	fec40793          	addi	a5,s0,-20
2001274e:	863e                	mv	a2,a5
20012750:	458d                	li	a1,3
20012752:	fdc42503          	lw	a0,-36(s0)
20012756:	3d8d                	jal	200125c8 <__metal_driver_riscv_clint0_command_request>
20012758:	87aa                	mv	a5,a0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_clint0.c:260
						METAL_SOFTWARE_IPI_SET, &hartid);
}
2001275a:	853e                	mv	a0,a5
2001275c:	50b2                	lw	ra,44(sp)
2001275e:	5422                	lw	s0,40(sp)
20012760:	6145                	addi	sp,sp,48
20012762:	8082                	ret

20012764 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:262



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20012764:	1101                	addi	sp,sp,-32
20012766:	ce22                	sw	s0,28(sp)
20012768:	1000                	addi	s0,sp,32
2001276a:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:263
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
2001276e:	fec42703          	lw	a4,-20(s0)
20012772:	81418793          	addi	a5,gp,-2028 # 80000a9c <__metal_dt_cpu_0>
20012776:	00f71463          	bne	a4,a5,2001277e <__metal_driver_cpu_hartid+0x1a>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:264
		return 0;
2001277a:	4781                	li	a5,0
2001277c:	a011                	j	20012780 <__metal_driver_cpu_hartid+0x1c>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:267
	}
	else {
		return -1;
2001277e:	57fd                	li	a5,-1
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:269
	}
}
20012780:	853e                	mv	a0,a5
20012782:	4472                	lw	s0,28(sp)
20012784:	6105                	addi	sp,sp,32
20012786:	8082                	ret

20012788 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:272

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20012788:	1101                	addi	sp,sp,-32
2001278a:	ce22                	sw	s0,28(sp)
2001278c:	1000                	addi	s0,sp,32
2001278e:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:273
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012792:	fec42703          	lw	a4,-20(s0)
20012796:	81418793          	addi	a5,gp,-2028 # 80000a9c <__metal_dt_cpu_0>
2001279a:	00f71763          	bne	a4,a5,200127a8 <__metal_driver_cpu_timebase+0x20>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:274
		return 16000000;
2001279e:	00f427b7          	lui	a5,0xf42
200127a2:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
200127a6:	a011                	j	200127aa <__metal_driver_cpu_timebase+0x22>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:277
	}
	else {
		return 0;
200127a8:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:279
	}
}
200127aa:	853e                	mv	a0,a5
200127ac:	4472                	lw	s0,28(sp)
200127ae:	6105                	addi	sp,sp,32
200127b0:	8082                	ret

200127b2 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:282

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
200127b2:	1101                	addi	sp,sp,-32
200127b4:	ce22                	sw	s0,28(sp)
200127b6:	1000                	addi	s0,sp,32
200127b8:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:283
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
200127bc:	fec42703          	lw	a4,-20(s0)
200127c0:	81418793          	addi	a5,gp,-2028 # 80000a9c <__metal_dt_cpu_0>
200127c4:	00f71763          	bne	a4,a5,200127d2 <__metal_driver_cpu_interrupt_controller+0x20>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:284
		return &__metal_dt_cpu_0_interrupt_controller.controller;
200127c8:	800007b7          	lui	a5,0x80000
200127cc:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe920>
200127d0:	a011                	j	200127d4 <__metal_driver_cpu_interrupt_controller+0x22>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:287
	}
	else {
		return NULL;
200127d2:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:289
	}
}
200127d4:	853e                	mv	a0,a5
200127d6:	4472                	lw	s0,28(sp)
200127d8:	6105                	addi	sp,sp,32
200127da:	8082                	ret

200127dc <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:14
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu, unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid)
{
200127dc:	1101                	addi	sp,sp,-32
200127de:	ce22                	sw	s0,28(sp)
200127e0:	1000                	addi	s0,sp,32
200127e2:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:15
    if (hartid < __METAL_DT_MAX_HARTS) {
200127e6:	fec42783          	lw	a5,-20(s0)
200127ea:	00f04c63          	bgtz	a5,20012802 <__metal_driver_cpu_get+0x26>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:16
        return &(__metal_cpu_table[hartid]->cpu);
200127ee:	800017b7          	lui	a5,0x80001
200127f2:	fec42703          	lw	a4,-20(s0)
200127f6:	070a                	slli	a4,a4,0x2
200127f8:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
200127fc:	97ba                	add	a5,a5,a4
200127fe:	439c                	lw	a5,0(a5)
20012800:	a011                	j	20012804 <__metal_driver_cpu_get+0x28>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:18
    }
    return (struct metal_cpu *)NULL;
20012802:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:19
}
20012804:	853e                	mv	a0,a5
20012806:	4472                	lw	s0,28(sp)
20012808:	6105                	addi	sp,sp,32
2001280a:	8082                	ret

2001280c <__metal_myhart_id>:
__metal_myhart_id():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:22

uintptr_t __metal_myhart_id (void)
{
2001280c:	1101                	addi	sp,sp,-32
2001280e:	ce22                	sw	s0,28(sp)
20012810:	1000                	addi	s0,sp,32
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:24
    uintptr_t myhart;
    __asm__ volatile ("csrr %0, mhartid" : "=r"(myhart));
20012812:	f14027f3          	csrr	a5,mhartid
20012816:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:25
    return myhart;
2001281a:	fec42783          	lw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:26
}
2001281e:	853e                	mv	a0,a5
20012820:	4472                	lw	s0,28(sp)
20012822:	6105                	addi	sp,sp,32
20012824:	8082                	ret

20012826 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:36
    for (ptr = base; ptr < (base + size); ptr++){
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable (void) {
20012826:	1101                	addi	sp,sp,-32
20012828:	ce22                	sw	s0,28(sp)
2001282a:	1000                	addi	s0,sp,32
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:38
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mstatus, %1" : "=r"(m) : "r"(METAL_MIE_INTERRUPT));
2001282c:	47a1                	li	a5,8
2001282e:	3007a7f3          	csrrs	a5,mstatus,a5
20012832:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:39
}
20012836:	0001                	nop
20012838:	4472                	lw	s0,28(sp)
2001283a:	6105                	addi	sp,sp,32
2001283c:	8082                	ret

2001283e <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:41

void __metal_interrupt_global_disable (void) {
2001283e:	1101                	addi	sp,sp,-32
20012840:	ce22                	sw	s0,28(sp)
20012842:	1000                	addi	s0,sp,32
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:43
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mstatus, %1" : "=r"(m) : "r"(METAL_MIE_INTERRUPT));
20012844:	47a1                	li	a5,8
20012846:	3007b7f3          	csrrc	a5,mstatus,a5
2001284a:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:44
}
2001284e:	0001                	nop
20012850:	4472                	lw	s0,28(sp)
20012852:	6105                	addi	sp,sp,32
20012854:	8082                	ret

20012856 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:46

void __metal_interrupt_software_enable (void) {
20012856:	1101                	addi	sp,sp,-32
20012858:	ce22                	sw	s0,28(sp)
2001285a:	1000                	addi	s0,sp,32
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:48
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_SW));
2001285c:	47a1                	li	a5,8
2001285e:	3047a7f3          	csrrs	a5,mie,a5
20012862:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:49
}
20012866:	0001                	nop
20012868:	4472                	lw	s0,28(sp)
2001286a:	6105                	addi	sp,sp,32
2001286c:	8082                	ret

2001286e <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:51

void __metal_interrupt_software_disable (void) {
2001286e:	1101                	addi	sp,sp,-32
20012870:	ce22                	sw	s0,28(sp)
20012872:	1000                	addi	s0,sp,32
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:53
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_SW));
20012874:	47a1                	li	a5,8
20012876:	3047b7f3          	csrrc	a5,mie,a5
2001287a:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:54
}
2001287e:	0001                	nop
20012880:	4472                	lw	s0,28(sp)
20012882:	6105                	addi	sp,sp,32
20012884:	8082                	ret

20012886 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:56

void __metal_interrupt_timer_enable (void) {
20012886:	1101                	addi	sp,sp,-32
20012888:	ce22                	sw	s0,28(sp)
2001288a:	1000                	addi	s0,sp,32
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:58
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_TMR));
2001288c:	08000793          	li	a5,128
20012890:	3047a7f3          	csrrs	a5,mie,a5
20012894:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:59
}
20012898:	0001                	nop
2001289a:	4472                	lw	s0,28(sp)
2001289c:	6105                	addi	sp,sp,32
2001289e:	8082                	ret

200128a0 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:61

void __metal_interrupt_timer_disable (void) {
200128a0:	1101                	addi	sp,sp,-32
200128a2:	ce22                	sw	s0,28(sp)
200128a4:	1000                	addi	s0,sp,32
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:63
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_TMR));
200128a6:	08000793          	li	a5,128
200128aa:	3047b7f3          	csrrc	a5,mie,a5
200128ae:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:64
}
200128b2:	0001                	nop
200128b4:	4472                	lw	s0,28(sp)
200128b6:	6105                	addi	sp,sp,32
200128b8:	8082                	ret

200128ba <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_external_enable (void) {
200128ba:	1101                	addi	sp,sp,-32
200128bc:	ce22                	sw	s0,28(sp)
200128be:	1000                	addi	s0,sp,32
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_EXT));
200128c0:	6785                	lui	a5,0x1
200128c2:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
200128c6:	3047a7f3          	csrrs	a5,mie,a5
200128ca:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:69
}
200128ce:	0001                	nop
200128d0:	4472                	lw	s0,28(sp)
200128d2:	6105                	addi	sp,sp,32
200128d4:	8082                	ret

200128d6 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:71

void __metal_interrupt_external_disable (void) {
200128d6:	1101                	addi	sp,sp,-32
200128d8:	ce22                	sw	s0,28(sp)
200128da:	1000                	addi	s0,sp,32
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:73
    unsigned long m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(METAL_LOCAL_INTERRUPT_EXT));
200128dc:	6785                	lui	a5,0x1
200128de:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
200128e2:	3047b7f3          	csrrc	a5,mie,a5
200128e6:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:74
}
200128ea:	0001                	nop
200128ec:	4472                	lw	s0,28(sp)
200128ee:	6105                	addi	sp,sp,32
200128f0:	8082                	ret

200128f2 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:76

void __metal_interrupt_local_enable (int id) {
200128f2:	7179                	addi	sp,sp,-48
200128f4:	d622                	sw	s0,44(sp)
200128f6:	1800                	addi	s0,sp,48
200128f8:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:77
    uintptr_t b = 1 << id;
200128fc:	fdc42783          	lw	a5,-36(s0)
20012900:	4705                	li	a4,1
20012902:	00f717b3          	sll	a5,a4,a5
20012906:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:79
    uintptr_t m;
    __asm__ volatile ("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
2001290a:	fec42783          	lw	a5,-20(s0)
2001290e:	3047a7f3          	csrrs	a5,mie,a5
20012912:	fef42423          	sw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:80
}
20012916:	0001                	nop
20012918:	5432                	lw	s0,44(sp)
2001291a:	6145                	addi	sp,sp,48
2001291c:	8082                	ret

2001291e <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:82

void __metal_interrupt_local_disable (int id) {
2001291e:	7179                	addi	sp,sp,-48
20012920:	d622                	sw	s0,44(sp)
20012922:	1800                	addi	s0,sp,48
20012924:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:83
    uintptr_t b = 1 << id;
20012928:	fdc42783          	lw	a5,-36(s0)
2001292c:	4705                	li	a4,1
2001292e:	00f717b3          	sll	a5,a4,a5
20012932:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:85
    uintptr_t m;
    __asm__ volatile ("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20012936:	fec42783          	lw	a5,-20(s0)
2001293a:	3047b7f3          	csrrc	a5,mie,a5
2001293e:	fef42423          	sw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:86
}
20012942:	0001                	nop
20012944:	5432                	lw	s0,44(sp)
20012946:	6145                	addi	sp,sp,48
20012948:	8082                	ret

2001294a <__metal_default_exception_handler>:
__metal_default_exception_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:88

void __metal_default_exception_handler (struct metal_cpu *cpu, int ecode) {
2001294a:	1101                	addi	sp,sp,-32
2001294c:	ce06                	sw	ra,28(sp)
2001294e:	cc22                	sw	s0,24(sp)
20012950:	1000                	addi	s0,sp,32
20012952:	fea42623          	sw	a0,-20(s0)
20012956:	feb42423          	sw	a1,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:89
    metal_shutdown(100);
2001295a:	06400513          	li	a0,100
2001295e:	7f2030ef          	jal	ra,20016150 <metal_shutdown>

20012962 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:92
}

void __metal_default_interrupt_handler (int id, void *priv) {
20012962:	1101                	addi	sp,sp,-32
20012964:	ce06                	sw	ra,28(sp)
20012966:	cc22                	sw	s0,24(sp)
20012968:	1000                	addi	s0,sp,32
2001296a:	fea42623          	sw	a0,-20(s0)
2001296e:	feb42423          	sw	a1,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:93
    metal_shutdown(200);
20012972:	0c800513          	li	a0,200
20012976:	7da030ef          	jal	ra,20016150 <metal_shutdown>

2001297a <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:97
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler (void) {
2001297a:	715d                	addi	sp,sp,-80
2001297c:	c686                	sw	ra,76(sp)
2001297e:	c496                	sw	t0,72(sp)
20012980:	c29a                	sw	t1,68(sp)
20012982:	c09e                	sw	t2,64(sp)
20012984:	de22                	sw	s0,60(sp)
20012986:	dc2a                	sw	a0,56(sp)
20012988:	da2e                	sw	a1,52(sp)
2001298a:	d832                	sw	a2,48(sp)
2001298c:	d636                	sw	a3,44(sp)
2001298e:	d43a                	sw	a4,40(sp)
20012990:	d23e                	sw	a5,36(sp)
20012992:	d042                	sw	a6,32(sp)
20012994:	ce46                	sw	a7,28(sp)
20012996:	cc72                	sw	t3,24(sp)
20012998:	ca76                	sw	t4,20(sp)
2001299a:	c87a                	sw	t5,16(sp)
2001299c:	c67e                	sw	t6,12(sp)
2001299e:	0880                	addi	s0,sp,80
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:98
    metal_shutdown(300);
200129a0:	12c00513          	li	a0,300
200129a4:	7ac030ef          	jal	ra,20016150 <metal_shutdown>

200129a8 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:102
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_software_interrupt_vector_handler (void) {
200129a8:	711d                	addi	sp,sp,-96
200129aa:	ce86                	sw	ra,92(sp)
200129ac:	cc96                	sw	t0,88(sp)
200129ae:	ca9a                	sw	t1,84(sp)
200129b0:	c89e                	sw	t2,80(sp)
200129b2:	c6a2                	sw	s0,76(sp)
200129b4:	c4aa                	sw	a0,72(sp)
200129b6:	c2ae                	sw	a1,68(sp)
200129b8:	c0b2                	sw	a2,64(sp)
200129ba:	de36                	sw	a3,60(sp)
200129bc:	dc3a                	sw	a4,56(sp)
200129be:	da3e                	sw	a5,52(sp)
200129c0:	d842                	sw	a6,48(sp)
200129c2:	d646                	sw	a7,44(sp)
200129c4:	d472                	sw	t3,40(sp)
200129c6:	d276                	sw	t4,36(sp)
200129c8:	d07a                	sw	t5,32(sp)
200129ca:	ce7e                	sw	t6,28(sp)
200129cc:	1080                	addi	s0,sp,96
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:105
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200129ce:	3d3d                	jal	2001280c <__metal_myhart_id>
200129d0:	872a                	mv	a4,a0
200129d2:	800017b7          	lui	a5,0x80001
200129d6:	070a                	slli	a4,a4,0x2
200129d8:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
200129dc:	97ba                	add	a5,a5,a4
200129de:	439c                	lw	a5,0(a5)
200129e0:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:107

    if ( cpu ) {
200129e4:	fac42783          	lw	a5,-84(s0)
200129e8:	c785                	beqz	a5,20012a10 <metal_software_interrupt_vector_handler+0x68>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:109
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200129ea:	fac42503          	lw	a0,-84(s0)
200129ee:	33d1                	jal	200127b2 <__metal_driver_cpu_interrupt_controller>
200129f0:	faa42423          	sw	a0,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:110
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].exint_data;
200129f4:	fa842783          	lw	a5,-88(s0)
200129f8:	0e07a783          	lw	a5,224(a5)
200129fc:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:111
        intc->metal_int_table[METAL_INTERRUPT_ID_SW].handler(METAL_INTERRUPT_ID_SW, priv);
20012a00:	fa842783          	lw	a5,-88(s0)
20012a04:	0d87a783          	lw	a5,216(a5)
20012a08:	fa442583          	lw	a1,-92(s0)
20012a0c:	450d                	li	a0,3
20012a0e:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:113
    }
}
20012a10:	0001                	nop
20012a12:	40f6                	lw	ra,92(sp)
20012a14:	42e6                	lw	t0,88(sp)
20012a16:	4356                	lw	t1,84(sp)
20012a18:	43c6                	lw	t2,80(sp)
20012a1a:	4436                	lw	s0,76(sp)
20012a1c:	4526                	lw	a0,72(sp)
20012a1e:	4596                	lw	a1,68(sp)
20012a20:	4606                	lw	a2,64(sp)
20012a22:	56f2                	lw	a3,60(sp)
20012a24:	5762                	lw	a4,56(sp)
20012a26:	57d2                	lw	a5,52(sp)
20012a28:	5842                	lw	a6,48(sp)
20012a2a:	58b2                	lw	a7,44(sp)
20012a2c:	5e22                	lw	t3,40(sp)
20012a2e:	5e92                	lw	t4,36(sp)
20012a30:	5f02                	lw	t5,32(sp)
20012a32:	4ff2                	lw	t6,28(sp)
20012a34:	6125                	addi	sp,sp,96
20012a36:	30200073          	mret

20012a3a <__metal_default_sw_handler>:
__metal_default_sw_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:115

void __metal_default_sw_handler (int id, void *priv) {
20012a3a:	7179                	addi	sp,sp,-48
20012a3c:	d606                	sw	ra,44(sp)
20012a3e:	d422                	sw	s0,40(sp)
20012a40:	1800                	addi	s0,sp,48
20012a42:	fca42e23          	sw	a0,-36(s0)
20012a46:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:118
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20012a4a:	33c9                	jal	2001280c <__metal_myhart_id>
20012a4c:	872a                	mv	a4,a0
20012a4e:	800017b7          	lui	a5,0x80001
20012a52:	070a                	slli	a4,a4,0x2
20012a54:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
20012a58:	97ba                	add	a5,a5,a4
20012a5a:	439c                	lw	a5,0(a5)
20012a5c:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:120

    __asm__ volatile ("csrr %0, mcause" : "=r"(mcause));
20012a60:	342027f3          	csrr	a5,mcause
20012a64:	fef42423          	sw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:121
    if ( cpu ) {
20012a68:	fec42783          	lw	a5,-20(s0)
20012a6c:	c795                	beqz	a5,20012a98 <__metal_default_sw_handler+0x5e>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:123
        intc = (struct __metal_driver_riscv_cpu_intc *)
	  __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20012a6e:	fec42503          	lw	a0,-20(s0)
20012a72:	3381                	jal	200127b2 <__metal_driver_cpu_interrupt_controller>
20012a74:	fea42223          	sw	a0,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:124
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE]((struct metal_cpu *)cpu, id);
20012a78:	fe842783          	lw	a5,-24(s0)
20012a7c:	3ff7f793          	andi	a5,a5,1023
20012a80:	fe442703          	lw	a4,-28(s0)
20012a84:	0e078793          	addi	a5,a5,224
20012a88:	078a                	slli	a5,a5,0x2
20012a8a:	97ba                	add	a5,a5,a4
20012a8c:	479c                	lw	a5,8(a5)
20012a8e:	fdc42583          	lw	a1,-36(s0)
20012a92:	fec42503          	lw	a0,-20(s0)
20012a96:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:126
    }
}
20012a98:	0001                	nop
20012a9a:	50b2                	lw	ra,44(sp)
20012a9c:	5422                	lw	s0,40(sp)
20012a9e:	6145                	addi	sp,sp,48
20012aa0:	8082                	ret

20012aa2 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:129

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_timer_interrupt_vector_handler (void) {
20012aa2:	711d                	addi	sp,sp,-96
20012aa4:	ce86                	sw	ra,92(sp)
20012aa6:	cc96                	sw	t0,88(sp)
20012aa8:	ca9a                	sw	t1,84(sp)
20012aaa:	c89e                	sw	t2,80(sp)
20012aac:	c6a2                	sw	s0,76(sp)
20012aae:	c4aa                	sw	a0,72(sp)
20012ab0:	c2ae                	sw	a1,68(sp)
20012ab2:	c0b2                	sw	a2,64(sp)
20012ab4:	de36                	sw	a3,60(sp)
20012ab6:	dc3a                	sw	a4,56(sp)
20012ab8:	da3e                	sw	a5,52(sp)
20012aba:	d842                	sw	a6,48(sp)
20012abc:	d646                	sw	a7,44(sp)
20012abe:	d472                	sw	t3,40(sp)
20012ac0:	d276                	sw	t4,36(sp)
20012ac2:	d07a                	sw	t5,32(sp)
20012ac4:	ce7e                	sw	t6,28(sp)
20012ac6:	1080                	addi	s0,sp,96
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:132
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20012ac8:	3391                	jal	2001280c <__metal_myhart_id>
20012aca:	872a                	mv	a4,a0
20012acc:	800017b7          	lui	a5,0x80001
20012ad0:	070a                	slli	a4,a4,0x2
20012ad2:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
20012ad6:	97ba                	add	a5,a5,a4
20012ad8:	439c                	lw	a5,0(a5)
20012ada:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:134

    if ( cpu ) {
20012ade:	fac42783          	lw	a5,-84(s0)
20012ae2:	c785                	beqz	a5,20012b0a <metal_timer_interrupt_vector_handler+0x68>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:136
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20012ae4:	fac42503          	lw	a0,-84(s0)
20012ae8:	31e9                	jal	200127b2 <__metal_driver_cpu_interrupt_controller>
20012aea:	faa42423          	sw	a0,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:137
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].exint_data;
20012aee:	fa842783          	lw	a5,-88(s0)
20012af2:	1407a783          	lw	a5,320(a5)
20012af6:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:138
        intc->metal_int_table[METAL_INTERRUPT_ID_TMR].handler(METAL_INTERRUPT_ID_TMR, priv);
20012afa:	fa842783          	lw	a5,-88(s0)
20012afe:	1387a783          	lw	a5,312(a5)
20012b02:	fa442583          	lw	a1,-92(s0)
20012b06:	451d                	li	a0,7
20012b08:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:140
    }
}
20012b0a:	0001                	nop
20012b0c:	40f6                	lw	ra,92(sp)
20012b0e:	42e6                	lw	t0,88(sp)
20012b10:	4356                	lw	t1,84(sp)
20012b12:	43c6                	lw	t2,80(sp)
20012b14:	4436                	lw	s0,76(sp)
20012b16:	4526                	lw	a0,72(sp)
20012b18:	4596                	lw	a1,68(sp)
20012b1a:	4606                	lw	a2,64(sp)
20012b1c:	56f2                	lw	a3,60(sp)
20012b1e:	5762                	lw	a4,56(sp)
20012b20:	57d2                	lw	a5,52(sp)
20012b22:	5842                	lw	a6,48(sp)
20012b24:	58b2                	lw	a7,44(sp)
20012b26:	5e22                	lw	t3,40(sp)
20012b28:	5e92                	lw	t4,36(sp)
20012b2a:	5f02                	lw	t5,32(sp)
20012b2c:	4ff2                	lw	t6,28(sp)
20012b2e:	6125                	addi	sp,sp,96
20012b30:	30200073          	mret

20012b34 <__metal_default_timer_handler>:
__metal_default_timer_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:142

void __metal_default_timer_handler (int id, void *priv) {
20012b34:	7179                	addi	sp,sp,-48
20012b36:	d606                	sw	ra,44(sp)
20012b38:	d422                	sw	s0,40(sp)
20012b3a:	1800                	addi	s0,sp,48
20012b3c:	fca42e23          	sw	a0,-36(s0)
20012b40:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:143
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20012b44:	31e1                	jal	2001280c <__metal_myhart_id>
20012b46:	87aa                	mv	a5,a0
20012b48:	853e                	mv	a0,a5
20012b4a:	3949                	jal	200127dc <__metal_driver_cpu_get>
20012b4c:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:144
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20012b50:	fec42503          	lw	a0,-20(s0)
20012b54:	1dc010ef          	jal	ra,20013d30 <__metal_driver_cpu_mtime_get>
20012b58:	fea42023          	sw	a0,-32(s0)
20012b5c:	feb42223          	sw	a1,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:147

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20012b60:	fe042783          	lw	a5,-32(s0)
20012b64:	fe442803          	lw	a6,-28(s0)
20012b68:	45a9                	li	a1,10
20012b6a:	4601                	li	a2,0
20012b6c:	00b786b3          	add	a3,a5,a1
20012b70:	8536                	mv	a0,a3
20012b72:	00f53533          	sltu	a0,a0,a5
20012b76:	00c80733          	add	a4,a6,a2
20012b7a:	00e507b3          	add	a5,a0,a4
20012b7e:	873e                	mv	a4,a5
20012b80:	87b6                	mv	a5,a3
20012b82:	883a                	mv	a6,a4
20012b84:	85be                	mv	a1,a5
20012b86:	8642                	mv	a2,a6
20012b88:	fec42503          	lw	a0,-20(s0)
20012b8c:	20a010ef          	jal	ra,20013d96 <__metal_driver_cpu_mtimecmp_set>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:148
}
20012b90:	0001                	nop
20012b92:	50b2                	lw	ra,44(sp)
20012b94:	5422                	lw	s0,40(sp)
20012b96:	6145                	addi	sp,sp,48
20012b98:	8082                	ret
	...

20012c00 <__metal_exception_handler>:
__metal_exception_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:165
        intc->metal_int_table[METAL_INTERRUPT_ID_EXT].handler(METAL_INTERRUPT_ID_EXT, priv);
    }
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler (void) {
20012c00:	7119                	addi	sp,sp,-128
20012c02:	de86                	sw	ra,124(sp)
20012c04:	dc96                	sw	t0,120(sp)
20012c06:	da9a                	sw	t1,116(sp)
20012c08:	d89e                	sw	t2,112(sp)
20012c0a:	d6a2                	sw	s0,108(sp)
20012c0c:	d4aa                	sw	a0,104(sp)
20012c0e:	d2ae                	sw	a1,100(sp)
20012c10:	d0b2                	sw	a2,96(sp)
20012c12:	ceb6                	sw	a3,92(sp)
20012c14:	ccba                	sw	a4,88(sp)
20012c16:	cabe                	sw	a5,84(sp)
20012c18:	c8c2                	sw	a6,80(sp)
20012c1a:	c6c6                	sw	a7,76(sp)
20012c1c:	c4f2                	sw	t3,72(sp)
20012c1e:	c2f6                	sw	t4,68(sp)
20012c20:	c0fa                	sw	t5,64(sp)
20012c22:	de7e                	sw	t6,60(sp)
20012c24:	0100                	addi	s0,sp,128
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:170
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20012c26:	36dd                	jal	2001280c <__metal_myhart_id>
20012c28:	872a                	mv	a4,a0
20012c2a:	800017b7          	lui	a5,0x80001
20012c2e:	070a                	slli	a4,a4,0x2
20012c30:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
20012c34:	97ba                	add	a5,a5,a4
20012c36:	439c                	lw	a5,0(a5)
20012c38:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:172

    __asm__ volatile ("csrr %0, mcause" : "=r"(mcause));
20012c3c:	342027f3          	csrr	a5,mcause
20012c40:	faf42423          	sw	a5,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:173
    __asm__ volatile ("csrr %0, mepc" : "=r"(mepc));
20012c44:	341027f3          	csrr	a5,mepc
20012c48:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:174
    __asm__ volatile ("csrr %0, mtval" : "=r"(mtval));
20012c4c:	343027f3          	csrr	a5,mtval
20012c50:	faf42023          	sw	a5,-96(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:175
    __asm__ volatile ("csrr %0, mtvec" : "=r"(mtvec));
20012c54:	305027f3          	csrr	a5,mtvec
20012c58:	f8f42e23          	sw	a5,-100(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:177

    if ( cpu ) {
20012c5c:	fac42783          	lw	a5,-84(s0)
20012c60:	c7e9                	beqz	a5,20012d2a <__metal_exception_handler+0x12a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:179
        intc = (struct __metal_driver_riscv_cpu_intc *)
	  __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20012c62:	fac42503          	lw	a0,-84(s0)
20012c66:	b4dff0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
20012c6a:	f8a42c23          	sw	a0,-104(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:180
        id = mcause & METAL_MCAUSE_CAUSE;
20012c6e:	fa842783          	lw	a5,-88(s0)
20012c72:	3ff7f793          	andi	a5,a5,1023
20012c76:	f8f42a23          	sw	a5,-108(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:181
        if (mcause & METAL_MCAUSE_INTR) {
20012c7a:	fa842783          	lw	a5,-88(s0)
20012c7e:	0807d863          	bgez	a5,20012d0e <__metal_exception_handler+0x10e>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:182
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20012c82:	f9442703          	lw	a4,-108(s0)
20012c86:	47ad                	li	a5,11
20012c88:	00e7d763          	bge	a5,a4,20012c96 <__metal_exception_handler+0x96>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:183 (discriminator 1)
               ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20012c8c:	f9c42783          	lw	a5,-100(s0)
20012c90:	03f7f793          	andi	a5,a5,63
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:182 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20012c94:	ef9d                	bnez	a5,20012cd2 <__metal_exception_handler+0xd2>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:184
                priv = intc->metal_int_table[id].exint_data;
20012c96:	f9842683          	lw	a3,-104(s0)
20012c9a:	f9442703          	lw	a4,-108(s0)
20012c9e:	87ba                	mv	a5,a4
20012ca0:	0786                	slli	a5,a5,0x1
20012ca2:	97ba                	add	a5,a5,a4
20012ca4:	078e                	slli	a5,a5,0x3
20012ca6:	97b6                	add	a5,a5,a3
20012ca8:	0987a783          	lw	a5,152(a5)
20012cac:	f8f42623          	sw	a5,-116(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:185
                intc->metal_int_table[id].handler(id, priv);
20012cb0:	f9842683          	lw	a3,-104(s0)
20012cb4:	f9442703          	lw	a4,-108(s0)
20012cb8:	87ba                	mv	a5,a4
20012cba:	0786                	slli	a5,a5,0x1
20012cbc:	97ba                	add	a5,a5,a4
20012cbe:	078e                	slli	a5,a5,0x3
20012cc0:	97b6                	add	a5,a5,a3
20012cc2:	0907a783          	lw	a5,144(a5)
20012cc6:	f8c42583          	lw	a1,-116(s0)
20012cca:	f9442503          	lw	a0,-108(s0)
20012cce:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:186
		return;
20012cd0:	a8a9                	j	20012d2a <__metal_exception_handler+0x12a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:188
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20012cd2:	f9c42783          	lw	a5,-100(s0)
20012cd6:	03f7f713          	andi	a4,a5,63
20012cda:	4789                	li	a5,2
20012cdc:	04f71763          	bne	a4,a5,20012d2a <__metal_exception_handler+0x12a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:192
    		uintptr_t mtvt;
    		metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile ("csrr %0, 0x307" : "=r"(mtvt));
20012ce0:	307027f3          	csrr	a5,mtvt
20012ce4:	f8f42823          	sw	a5,-112(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:193
               	priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20012ce8:	f9842783          	lw	a5,-104(s0)
20012cec:	0dc7a783          	lw	a5,220(a5)
20012cf0:	f8f42623          	sw	a5,-116(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:194
               	mtvt_handler = (metal_interrupt_handler_t)*(uintptr_t *)mtvt;
20012cf4:	f9042783          	lw	a5,-112(s0)
20012cf8:	439c                	lw	a5,0(a5)
20012cfa:	f8f42423          	sw	a5,-120(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:195
               	mtvt_handler(id, priv);
20012cfe:	f8842783          	lw	a5,-120(s0)
20012d02:	f8c42583          	lw	a1,-116(s0)
20012d06:	f9442503          	lw	a0,-108(s0)
20012d0a:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:196
		return;
20012d0c:	a839                	j	20012d2a <__metal_exception_handler+0x12a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:199
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20012d0e:	f9842703          	lw	a4,-104(s0)
20012d12:	f9442783          	lw	a5,-108(s0)
20012d16:	0e078793          	addi	a5,a5,224
20012d1a:	078a                	slli	a5,a5,0x2
20012d1c:	97ba                	add	a5,a5,a4
20012d1e:	479c                	lw	a5,8(a5)
20012d20:	f9442583          	lw	a1,-108(s0)
20012d24:	fac42503          	lw	a0,-84(s0)
20012d28:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:202
        }
    }
}
20012d2a:	50f6                	lw	ra,124(sp)
20012d2c:	52e6                	lw	t0,120(sp)
20012d2e:	5356                	lw	t1,116(sp)
20012d30:	53c6                	lw	t2,112(sp)
20012d32:	5436                	lw	s0,108(sp)
20012d34:	5526                	lw	a0,104(sp)
20012d36:	5596                	lw	a1,100(sp)
20012d38:	5606                	lw	a2,96(sp)
20012d3a:	46f6                	lw	a3,92(sp)
20012d3c:	4766                	lw	a4,88(sp)
20012d3e:	47d6                	lw	a5,84(sp)
20012d40:	4846                	lw	a6,80(sp)
20012d42:	48b6                	lw	a7,76(sp)
20012d44:	4e26                	lw	t3,72(sp)
20012d46:	4e96                	lw	t4,68(sp)
20012d48:	4f06                	lw	t5,64(sp)
20012d4a:	5ff2                	lw	t6,60(sp)
20012d4c:	6109                	addi	sp,sp,128
20012d4e:	30200073          	mret
	...

20012d78 <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:205

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler (void) {
20012d78:	711d                	addi	sp,sp,-96
20012d7a:	ce86                	sw	ra,92(sp)
20012d7c:	cc96                	sw	t0,88(sp)
20012d7e:	ca9a                	sw	t1,84(sp)
20012d80:	c89e                	sw	t2,80(sp)
20012d82:	c6a2                	sw	s0,76(sp)
20012d84:	c4aa                	sw	a0,72(sp)
20012d86:	c2ae                	sw	a1,68(sp)
20012d88:	c0b2                	sw	a2,64(sp)
20012d8a:	de36                	sw	a3,60(sp)
20012d8c:	dc3a                	sw	a4,56(sp)
20012d8e:	da3e                	sw	a5,52(sp)
20012d90:	d842                	sw	a6,48(sp)
20012d92:	d646                	sw	a7,44(sp)
20012d94:	d472                	sw	t3,40(sp)
20012d96:	d276                	sw	t4,36(sp)
20012d98:	d07a                	sw	t5,32(sp)
20012d9a:	ce7e                	sw	t6,28(sp)
20012d9c:	1080                	addi	s0,sp,96
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:208
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20012d9e:	a6fff0ef          	jal	ra,2001280c <__metal_myhart_id>
20012da2:	872a                	mv	a4,a0
20012da4:	800017b7          	lui	a5,0x80001
20012da8:	070a                	slli	a4,a4,0x2
20012daa:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
20012dae:	97ba                	add	a5,a5,a4
20012db0:	439c                	lw	a5,0(a5)
20012db2:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:210

    if ( cpu ) {
20012db6:	fac42783          	lw	a5,-84(s0)
20012dba:	c78d                	beqz	a5,20012de4 <metal_lc0_interrupt_vector_handler+0x6c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:212
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20012dbc:	fac42503          	lw	a0,-84(s0)
20012dc0:	9f3ff0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
20012dc4:	faa42423          	sw	a0,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:213
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC0].exint_data;
20012dc8:	fa842783          	lw	a5,-88(s0)
20012dcc:	2187a783          	lw	a5,536(a5)
20012dd0:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:214
        intc->metal_int_table[METAL_INTERRUPT_ID_LC0].handler(METAL_INTERRUPT_ID_LC0, priv);
20012dd4:	fa842783          	lw	a5,-88(s0)
20012dd8:	2107a783          	lw	a5,528(a5)
20012ddc:	fa442583          	lw	a1,-92(s0)
20012de0:	4541                	li	a0,16
20012de2:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:216
    }
}
20012de4:	0001                	nop
20012de6:	40f6                	lw	ra,92(sp)
20012de8:	42e6                	lw	t0,88(sp)
20012dea:	4356                	lw	t1,84(sp)
20012dec:	43c6                	lw	t2,80(sp)
20012dee:	4436                	lw	s0,76(sp)
20012df0:	4526                	lw	a0,72(sp)
20012df2:	4596                	lw	a1,68(sp)
20012df4:	4606                	lw	a2,64(sp)
20012df6:	56f2                	lw	a3,60(sp)
20012df8:	5762                	lw	a4,56(sp)
20012dfa:	57d2                	lw	a5,52(sp)
20012dfc:	5842                	lw	a6,48(sp)
20012dfe:	58b2                	lw	a7,44(sp)
20012e00:	5e22                	lw	t3,40(sp)
20012e02:	5e92                	lw	t4,36(sp)
20012e04:	5f02                	lw	t5,32(sp)
20012e06:	4ff2                	lw	t6,28(sp)
20012e08:	6125                	addi	sp,sp,96
20012e0a:	30200073          	mret

20012e0e <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler (void) {
20012e0e:	711d                	addi	sp,sp,-96
20012e10:	ce86                	sw	ra,92(sp)
20012e12:	cc96                	sw	t0,88(sp)
20012e14:	ca9a                	sw	t1,84(sp)
20012e16:	c89e                	sw	t2,80(sp)
20012e18:	c6a2                	sw	s0,76(sp)
20012e1a:	c4aa                	sw	a0,72(sp)
20012e1c:	c2ae                	sw	a1,68(sp)
20012e1e:	c0b2                	sw	a2,64(sp)
20012e20:	de36                	sw	a3,60(sp)
20012e22:	dc3a                	sw	a4,56(sp)
20012e24:	da3e                	sw	a5,52(sp)
20012e26:	d842                	sw	a6,48(sp)
20012e28:	d646                	sw	a7,44(sp)
20012e2a:	d472                	sw	t3,40(sp)
20012e2c:	d276                	sw	t4,36(sp)
20012e2e:	d07a                	sw	t5,32(sp)
20012e30:	ce7e                	sw	t6,28(sp)
20012e32:	1080                	addi	s0,sp,96
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:222
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20012e34:	9d9ff0ef          	jal	ra,2001280c <__metal_myhart_id>
20012e38:	872a                	mv	a4,a0
20012e3a:	800017b7          	lui	a5,0x80001
20012e3e:	070a                	slli	a4,a4,0x2
20012e40:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
20012e44:	97ba                	add	a5,a5,a4
20012e46:	439c                	lw	a5,0(a5)
20012e48:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:224

    if ( cpu ) {
20012e4c:	fac42783          	lw	a5,-84(s0)
20012e50:	c78d                	beqz	a5,20012e7a <metal_lc1_interrupt_vector_handler+0x6c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:226
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20012e52:	fac42503          	lw	a0,-84(s0)
20012e56:	95dff0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
20012e5a:	faa42423          	sw	a0,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:227
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC1].exint_data;
20012e5e:	fa842783          	lw	a5,-88(s0)
20012e62:	2307a783          	lw	a5,560(a5)
20012e66:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:228
        intc->metal_int_table[METAL_INTERRUPT_ID_LC1].handler(METAL_INTERRUPT_ID_LC1, priv);
20012e6a:	fa842783          	lw	a5,-88(s0)
20012e6e:	2287a783          	lw	a5,552(a5)
20012e72:	fa442583          	lw	a1,-92(s0)
20012e76:	4545                	li	a0,17
20012e78:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:230
    }
}
20012e7a:	0001                	nop
20012e7c:	40f6                	lw	ra,92(sp)
20012e7e:	42e6                	lw	t0,88(sp)
20012e80:	4356                	lw	t1,84(sp)
20012e82:	43c6                	lw	t2,80(sp)
20012e84:	4436                	lw	s0,76(sp)
20012e86:	4526                	lw	a0,72(sp)
20012e88:	4596                	lw	a1,68(sp)
20012e8a:	4606                	lw	a2,64(sp)
20012e8c:	56f2                	lw	a3,60(sp)
20012e8e:	5762                	lw	a4,56(sp)
20012e90:	57d2                	lw	a5,52(sp)
20012e92:	5842                	lw	a6,48(sp)
20012e94:	58b2                	lw	a7,44(sp)
20012e96:	5e22                	lw	t3,40(sp)
20012e98:	5e92                	lw	t4,36(sp)
20012e9a:	5f02                	lw	t5,32(sp)
20012e9c:	4ff2                	lw	t6,28(sp)
20012e9e:	6125                	addi	sp,sp,96
20012ea0:	30200073          	mret

20012ea4 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:233

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler (void) {
20012ea4:	711d                	addi	sp,sp,-96
20012ea6:	ce86                	sw	ra,92(sp)
20012ea8:	cc96                	sw	t0,88(sp)
20012eaa:	ca9a                	sw	t1,84(sp)
20012eac:	c89e                	sw	t2,80(sp)
20012eae:	c6a2                	sw	s0,76(sp)
20012eb0:	c4aa                	sw	a0,72(sp)
20012eb2:	c2ae                	sw	a1,68(sp)
20012eb4:	c0b2                	sw	a2,64(sp)
20012eb6:	de36                	sw	a3,60(sp)
20012eb8:	dc3a                	sw	a4,56(sp)
20012eba:	da3e                	sw	a5,52(sp)
20012ebc:	d842                	sw	a6,48(sp)
20012ebe:	d646                	sw	a7,44(sp)
20012ec0:	d472                	sw	t3,40(sp)
20012ec2:	d276                	sw	t4,36(sp)
20012ec4:	d07a                	sw	t5,32(sp)
20012ec6:	ce7e                	sw	t6,28(sp)
20012ec8:	1080                	addi	s0,sp,96
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:236
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20012eca:	943ff0ef          	jal	ra,2001280c <__metal_myhart_id>
20012ece:	872a                	mv	a4,a0
20012ed0:	800017b7          	lui	a5,0x80001
20012ed4:	070a                	slli	a4,a4,0x2
20012ed6:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
20012eda:	97ba                	add	a5,a5,a4
20012edc:	439c                	lw	a5,0(a5)
20012ede:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:238

    if ( cpu ) {
20012ee2:	fac42783          	lw	a5,-84(s0)
20012ee6:	c78d                	beqz	a5,20012f10 <metal_lc2_interrupt_vector_handler+0x6c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:240
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20012ee8:	fac42503          	lw	a0,-84(s0)
20012eec:	8c7ff0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
20012ef0:	faa42423          	sw	a0,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:241
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC2].exint_data;
20012ef4:	fa842783          	lw	a5,-88(s0)
20012ef8:	2487a783          	lw	a5,584(a5)
20012efc:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:242
        intc->metal_int_table[METAL_INTERRUPT_ID_LC2].handler(METAL_INTERRUPT_ID_LC2, priv);
20012f00:	fa842783          	lw	a5,-88(s0)
20012f04:	2407a783          	lw	a5,576(a5)
20012f08:	fa442583          	lw	a1,-92(s0)
20012f0c:	4549                	li	a0,18
20012f0e:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:244
    }
}
20012f10:	0001                	nop
20012f12:	40f6                	lw	ra,92(sp)
20012f14:	42e6                	lw	t0,88(sp)
20012f16:	4356                	lw	t1,84(sp)
20012f18:	43c6                	lw	t2,80(sp)
20012f1a:	4436                	lw	s0,76(sp)
20012f1c:	4526                	lw	a0,72(sp)
20012f1e:	4596                	lw	a1,68(sp)
20012f20:	4606                	lw	a2,64(sp)
20012f22:	56f2                	lw	a3,60(sp)
20012f24:	5762                	lw	a4,56(sp)
20012f26:	57d2                	lw	a5,52(sp)
20012f28:	5842                	lw	a6,48(sp)
20012f2a:	58b2                	lw	a7,44(sp)
20012f2c:	5e22                	lw	t3,40(sp)
20012f2e:	5e92                	lw	t4,36(sp)
20012f30:	5f02                	lw	t5,32(sp)
20012f32:	4ff2                	lw	t6,28(sp)
20012f34:	6125                	addi	sp,sp,96
20012f36:	30200073          	mret

20012f3a <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:247

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler (void) {
20012f3a:	711d                	addi	sp,sp,-96
20012f3c:	ce86                	sw	ra,92(sp)
20012f3e:	cc96                	sw	t0,88(sp)
20012f40:	ca9a                	sw	t1,84(sp)
20012f42:	c89e                	sw	t2,80(sp)
20012f44:	c6a2                	sw	s0,76(sp)
20012f46:	c4aa                	sw	a0,72(sp)
20012f48:	c2ae                	sw	a1,68(sp)
20012f4a:	c0b2                	sw	a2,64(sp)
20012f4c:	de36                	sw	a3,60(sp)
20012f4e:	dc3a                	sw	a4,56(sp)
20012f50:	da3e                	sw	a5,52(sp)
20012f52:	d842                	sw	a6,48(sp)
20012f54:	d646                	sw	a7,44(sp)
20012f56:	d472                	sw	t3,40(sp)
20012f58:	d276                	sw	t4,36(sp)
20012f5a:	d07a                	sw	t5,32(sp)
20012f5c:	ce7e                	sw	t6,28(sp)
20012f5e:	1080                	addi	s0,sp,96
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:250
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20012f60:	8adff0ef          	jal	ra,2001280c <__metal_myhart_id>
20012f64:	872a                	mv	a4,a0
20012f66:	800017b7          	lui	a5,0x80001
20012f6a:	070a                	slli	a4,a4,0x2
20012f6c:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
20012f70:	97ba                	add	a5,a5,a4
20012f72:	439c                	lw	a5,0(a5)
20012f74:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:252

    if ( cpu ) {
20012f78:	fac42783          	lw	a5,-84(s0)
20012f7c:	c78d                	beqz	a5,20012fa6 <metal_lc3_interrupt_vector_handler+0x6c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:254
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20012f7e:	fac42503          	lw	a0,-84(s0)
20012f82:	831ff0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
20012f86:	faa42423          	sw	a0,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:255
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC3].exint_data;
20012f8a:	fa842783          	lw	a5,-88(s0)
20012f8e:	2607a783          	lw	a5,608(a5)
20012f92:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:256
        intc->metal_int_table[METAL_INTERRUPT_ID_LC3].handler(METAL_INTERRUPT_ID_LC3, priv);
20012f96:	fa842783          	lw	a5,-88(s0)
20012f9a:	2587a783          	lw	a5,600(a5)
20012f9e:	fa442583          	lw	a1,-92(s0)
20012fa2:	454d                	li	a0,19
20012fa4:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:258
    }
}
20012fa6:	0001                	nop
20012fa8:	40f6                	lw	ra,92(sp)
20012faa:	42e6                	lw	t0,88(sp)
20012fac:	4356                	lw	t1,84(sp)
20012fae:	43c6                	lw	t2,80(sp)
20012fb0:	4436                	lw	s0,76(sp)
20012fb2:	4526                	lw	a0,72(sp)
20012fb4:	4596                	lw	a1,68(sp)
20012fb6:	4606                	lw	a2,64(sp)
20012fb8:	56f2                	lw	a3,60(sp)
20012fba:	5762                	lw	a4,56(sp)
20012fbc:	57d2                	lw	a5,52(sp)
20012fbe:	5842                	lw	a6,48(sp)
20012fc0:	58b2                	lw	a7,44(sp)
20012fc2:	5e22                	lw	t3,40(sp)
20012fc4:	5e92                	lw	t4,36(sp)
20012fc6:	5f02                	lw	t5,32(sp)
20012fc8:	4ff2                	lw	t6,28(sp)
20012fca:	6125                	addi	sp,sp,96
20012fcc:	30200073          	mret

20012fd0 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:261

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler (void) {
20012fd0:	711d                	addi	sp,sp,-96
20012fd2:	ce86                	sw	ra,92(sp)
20012fd4:	cc96                	sw	t0,88(sp)
20012fd6:	ca9a                	sw	t1,84(sp)
20012fd8:	c89e                	sw	t2,80(sp)
20012fda:	c6a2                	sw	s0,76(sp)
20012fdc:	c4aa                	sw	a0,72(sp)
20012fde:	c2ae                	sw	a1,68(sp)
20012fe0:	c0b2                	sw	a2,64(sp)
20012fe2:	de36                	sw	a3,60(sp)
20012fe4:	dc3a                	sw	a4,56(sp)
20012fe6:	da3e                	sw	a5,52(sp)
20012fe8:	d842                	sw	a6,48(sp)
20012fea:	d646                	sw	a7,44(sp)
20012fec:	d472                	sw	t3,40(sp)
20012fee:	d276                	sw	t4,36(sp)
20012ff0:	d07a                	sw	t5,32(sp)
20012ff2:	ce7e                	sw	t6,28(sp)
20012ff4:	1080                	addi	s0,sp,96
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:264
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20012ff6:	817ff0ef          	jal	ra,2001280c <__metal_myhart_id>
20012ffa:	872a                	mv	a4,a0
20012ffc:	800017b7          	lui	a5,0x80001
20013000:	070a                	slli	a4,a4,0x2
20013002:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
20013006:	97ba                	add	a5,a5,a4
20013008:	439c                	lw	a5,0(a5)
2001300a:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:266

    if ( cpu ) {
2001300e:	fac42783          	lw	a5,-84(s0)
20013012:	c78d                	beqz	a5,2001303c <metal_lc4_interrupt_vector_handler+0x6c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:268
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20013014:	fac42503          	lw	a0,-84(s0)
20013018:	f9aff0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
2001301c:	faa42423          	sw	a0,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:269
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC4].exint_data;
20013020:	fa842783          	lw	a5,-88(s0)
20013024:	2787a783          	lw	a5,632(a5)
20013028:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:270
        intc->metal_int_table[METAL_INTERRUPT_ID_LC4].handler(METAL_INTERRUPT_ID_LC4, priv);
2001302c:	fa842783          	lw	a5,-88(s0)
20013030:	2707a783          	lw	a5,624(a5)
20013034:	fa442583          	lw	a1,-92(s0)
20013038:	4551                	li	a0,20
2001303a:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:272
    }
}
2001303c:	0001                	nop
2001303e:	40f6                	lw	ra,92(sp)
20013040:	42e6                	lw	t0,88(sp)
20013042:	4356                	lw	t1,84(sp)
20013044:	43c6                	lw	t2,80(sp)
20013046:	4436                	lw	s0,76(sp)
20013048:	4526                	lw	a0,72(sp)
2001304a:	4596                	lw	a1,68(sp)
2001304c:	4606                	lw	a2,64(sp)
2001304e:	56f2                	lw	a3,60(sp)
20013050:	5762                	lw	a4,56(sp)
20013052:	57d2                	lw	a5,52(sp)
20013054:	5842                	lw	a6,48(sp)
20013056:	58b2                	lw	a7,44(sp)
20013058:	5e22                	lw	t3,40(sp)
2001305a:	5e92                	lw	t4,36(sp)
2001305c:	5f02                	lw	t5,32(sp)
2001305e:	4ff2                	lw	t6,28(sp)
20013060:	6125                	addi	sp,sp,96
20013062:	30200073          	mret

20013066 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:275

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler (void) {
20013066:	711d                	addi	sp,sp,-96
20013068:	ce86                	sw	ra,92(sp)
2001306a:	cc96                	sw	t0,88(sp)
2001306c:	ca9a                	sw	t1,84(sp)
2001306e:	c89e                	sw	t2,80(sp)
20013070:	c6a2                	sw	s0,76(sp)
20013072:	c4aa                	sw	a0,72(sp)
20013074:	c2ae                	sw	a1,68(sp)
20013076:	c0b2                	sw	a2,64(sp)
20013078:	de36                	sw	a3,60(sp)
2001307a:	dc3a                	sw	a4,56(sp)
2001307c:	da3e                	sw	a5,52(sp)
2001307e:	d842                	sw	a6,48(sp)
20013080:	d646                	sw	a7,44(sp)
20013082:	d472                	sw	t3,40(sp)
20013084:	d276                	sw	t4,36(sp)
20013086:	d07a                	sw	t5,32(sp)
20013088:	ce7e                	sw	t6,28(sp)
2001308a:	1080                	addi	s0,sp,96
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:278
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2001308c:	f80ff0ef          	jal	ra,2001280c <__metal_myhart_id>
20013090:	872a                	mv	a4,a0
20013092:	800017b7          	lui	a5,0x80001
20013096:	070a                	slli	a4,a4,0x2
20013098:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
2001309c:	97ba                	add	a5,a5,a4
2001309e:	439c                	lw	a5,0(a5)
200130a0:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:280

    if ( cpu ) {
200130a4:	fac42783          	lw	a5,-84(s0)
200130a8:	c78d                	beqz	a5,200130d2 <metal_lc5_interrupt_vector_handler+0x6c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:282
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200130aa:	fac42503          	lw	a0,-84(s0)
200130ae:	f04ff0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
200130b2:	faa42423          	sw	a0,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:283
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC5].exint_data;
200130b6:	fa842783          	lw	a5,-88(s0)
200130ba:	2907a783          	lw	a5,656(a5)
200130be:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:284
        intc->metal_int_table[METAL_INTERRUPT_ID_LC5].handler(METAL_INTERRUPT_ID_LC5, priv);
200130c2:	fa842783          	lw	a5,-88(s0)
200130c6:	2887a783          	lw	a5,648(a5)
200130ca:	fa442583          	lw	a1,-92(s0)
200130ce:	4555                	li	a0,21
200130d0:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:286
    }
}
200130d2:	0001                	nop
200130d4:	40f6                	lw	ra,92(sp)
200130d6:	42e6                	lw	t0,88(sp)
200130d8:	4356                	lw	t1,84(sp)
200130da:	43c6                	lw	t2,80(sp)
200130dc:	4436                	lw	s0,76(sp)
200130de:	4526                	lw	a0,72(sp)
200130e0:	4596                	lw	a1,68(sp)
200130e2:	4606                	lw	a2,64(sp)
200130e4:	56f2                	lw	a3,60(sp)
200130e6:	5762                	lw	a4,56(sp)
200130e8:	57d2                	lw	a5,52(sp)
200130ea:	5842                	lw	a6,48(sp)
200130ec:	58b2                	lw	a7,44(sp)
200130ee:	5e22                	lw	t3,40(sp)
200130f0:	5e92                	lw	t4,36(sp)
200130f2:	5f02                	lw	t5,32(sp)
200130f4:	4ff2                	lw	t6,28(sp)
200130f6:	6125                	addi	sp,sp,96
200130f8:	30200073          	mret

200130fc <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler (void) {
200130fc:	711d                	addi	sp,sp,-96
200130fe:	ce86                	sw	ra,92(sp)
20013100:	cc96                	sw	t0,88(sp)
20013102:	ca9a                	sw	t1,84(sp)
20013104:	c89e                	sw	t2,80(sp)
20013106:	c6a2                	sw	s0,76(sp)
20013108:	c4aa                	sw	a0,72(sp)
2001310a:	c2ae                	sw	a1,68(sp)
2001310c:	c0b2                	sw	a2,64(sp)
2001310e:	de36                	sw	a3,60(sp)
20013110:	dc3a                	sw	a4,56(sp)
20013112:	da3e                	sw	a5,52(sp)
20013114:	d842                	sw	a6,48(sp)
20013116:	d646                	sw	a7,44(sp)
20013118:	d472                	sw	t3,40(sp)
2001311a:	d276                	sw	t4,36(sp)
2001311c:	d07a                	sw	t5,32(sp)
2001311e:	ce7e                	sw	t6,28(sp)
20013120:	1080                	addi	s0,sp,96
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:292
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20013122:	eeaff0ef          	jal	ra,2001280c <__metal_myhart_id>
20013126:	872a                	mv	a4,a0
20013128:	800017b7          	lui	a5,0x80001
2001312c:	070a                	slli	a4,a4,0x2
2001312e:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
20013132:	97ba                	add	a5,a5,a4
20013134:	439c                	lw	a5,0(a5)
20013136:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:294

    if ( cpu ) {
2001313a:	fac42783          	lw	a5,-84(s0)
2001313e:	c78d                	beqz	a5,20013168 <metal_lc6_interrupt_vector_handler+0x6c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:296
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20013140:	fac42503          	lw	a0,-84(s0)
20013144:	e6eff0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
20013148:	faa42423          	sw	a0,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:297
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC6].exint_data;
2001314c:	fa842783          	lw	a5,-88(s0)
20013150:	2a87a783          	lw	a5,680(a5)
20013154:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:298
        intc->metal_int_table[METAL_INTERRUPT_ID_LC6].handler(METAL_INTERRUPT_ID_LC6, priv);
20013158:	fa842783          	lw	a5,-88(s0)
2001315c:	2a07a783          	lw	a5,672(a5)
20013160:	fa442583          	lw	a1,-92(s0)
20013164:	4559                	li	a0,22
20013166:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:300
    }
}
20013168:	0001                	nop
2001316a:	40f6                	lw	ra,92(sp)
2001316c:	42e6                	lw	t0,88(sp)
2001316e:	4356                	lw	t1,84(sp)
20013170:	43c6                	lw	t2,80(sp)
20013172:	4436                	lw	s0,76(sp)
20013174:	4526                	lw	a0,72(sp)
20013176:	4596                	lw	a1,68(sp)
20013178:	4606                	lw	a2,64(sp)
2001317a:	56f2                	lw	a3,60(sp)
2001317c:	5762                	lw	a4,56(sp)
2001317e:	57d2                	lw	a5,52(sp)
20013180:	5842                	lw	a6,48(sp)
20013182:	58b2                	lw	a7,44(sp)
20013184:	5e22                	lw	t3,40(sp)
20013186:	5e92                	lw	t4,36(sp)
20013188:	5f02                	lw	t5,32(sp)
2001318a:	4ff2                	lw	t6,28(sp)
2001318c:	6125                	addi	sp,sp,96
2001318e:	30200073          	mret

20013192 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:303

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler (void) {
20013192:	711d                	addi	sp,sp,-96
20013194:	ce86                	sw	ra,92(sp)
20013196:	cc96                	sw	t0,88(sp)
20013198:	ca9a                	sw	t1,84(sp)
2001319a:	c89e                	sw	t2,80(sp)
2001319c:	c6a2                	sw	s0,76(sp)
2001319e:	c4aa                	sw	a0,72(sp)
200131a0:	c2ae                	sw	a1,68(sp)
200131a2:	c0b2                	sw	a2,64(sp)
200131a4:	de36                	sw	a3,60(sp)
200131a6:	dc3a                	sw	a4,56(sp)
200131a8:	da3e                	sw	a5,52(sp)
200131aa:	d842                	sw	a6,48(sp)
200131ac:	d646                	sw	a7,44(sp)
200131ae:	d472                	sw	t3,40(sp)
200131b0:	d276                	sw	t4,36(sp)
200131b2:	d07a                	sw	t5,32(sp)
200131b4:	ce7e                	sw	t6,28(sp)
200131b6:	1080                	addi	s0,sp,96
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:306
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200131b8:	e54ff0ef          	jal	ra,2001280c <__metal_myhart_id>
200131bc:	872a                	mv	a4,a0
200131be:	800017b7          	lui	a5,0x80001
200131c2:	070a                	slli	a4,a4,0x2
200131c4:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
200131c8:	97ba                	add	a5,a5,a4
200131ca:	439c                	lw	a5,0(a5)
200131cc:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:308

    if ( cpu ) {
200131d0:	fac42783          	lw	a5,-84(s0)
200131d4:	c78d                	beqz	a5,200131fe <metal_lc7_interrupt_vector_handler+0x6c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:310
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200131d6:	fac42503          	lw	a0,-84(s0)
200131da:	dd8ff0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
200131de:	faa42423          	sw	a0,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:311
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC7].exint_data;
200131e2:	fa842783          	lw	a5,-88(s0)
200131e6:	2c07a783          	lw	a5,704(a5)
200131ea:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:312
        intc->metal_int_table[METAL_INTERRUPT_ID_LC7].handler(METAL_INTERRUPT_ID_LC7, priv);
200131ee:	fa842783          	lw	a5,-88(s0)
200131f2:	2b87a783          	lw	a5,696(a5)
200131f6:	fa442583          	lw	a1,-92(s0)
200131fa:	455d                	li	a0,23
200131fc:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:314
    }
}
200131fe:	0001                	nop
20013200:	40f6                	lw	ra,92(sp)
20013202:	42e6                	lw	t0,88(sp)
20013204:	4356                	lw	t1,84(sp)
20013206:	43c6                	lw	t2,80(sp)
20013208:	4436                	lw	s0,76(sp)
2001320a:	4526                	lw	a0,72(sp)
2001320c:	4596                	lw	a1,68(sp)
2001320e:	4606                	lw	a2,64(sp)
20013210:	56f2                	lw	a3,60(sp)
20013212:	5762                	lw	a4,56(sp)
20013214:	57d2                	lw	a5,52(sp)
20013216:	5842                	lw	a6,48(sp)
20013218:	58b2                	lw	a7,44(sp)
2001321a:	5e22                	lw	t3,40(sp)
2001321c:	5e92                	lw	t4,36(sp)
2001321e:	5f02                	lw	t5,32(sp)
20013220:	4ff2                	lw	t6,28(sp)
20013222:	6125                	addi	sp,sp,96
20013224:	30200073          	mret

20013228 <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:317

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler (void) {
20013228:	711d                	addi	sp,sp,-96
2001322a:	ce86                	sw	ra,92(sp)
2001322c:	cc96                	sw	t0,88(sp)
2001322e:	ca9a                	sw	t1,84(sp)
20013230:	c89e                	sw	t2,80(sp)
20013232:	c6a2                	sw	s0,76(sp)
20013234:	c4aa                	sw	a0,72(sp)
20013236:	c2ae                	sw	a1,68(sp)
20013238:	c0b2                	sw	a2,64(sp)
2001323a:	de36                	sw	a3,60(sp)
2001323c:	dc3a                	sw	a4,56(sp)
2001323e:	da3e                	sw	a5,52(sp)
20013240:	d842                	sw	a6,48(sp)
20013242:	d646                	sw	a7,44(sp)
20013244:	d472                	sw	t3,40(sp)
20013246:	d276                	sw	t4,36(sp)
20013248:	d07a                	sw	t5,32(sp)
2001324a:	ce7e                	sw	t6,28(sp)
2001324c:	1080                	addi	s0,sp,96
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:320
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2001324e:	dbeff0ef          	jal	ra,2001280c <__metal_myhart_id>
20013252:	872a                	mv	a4,a0
20013254:	800017b7          	lui	a5,0x80001
20013258:	070a                	slli	a4,a4,0x2
2001325a:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
2001325e:	97ba                	add	a5,a5,a4
20013260:	439c                	lw	a5,0(a5)
20013262:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:322

    if ( cpu ) {
20013266:	fac42783          	lw	a5,-84(s0)
2001326a:	c78d                	beqz	a5,20013294 <metal_lc8_interrupt_vector_handler+0x6c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:324
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2001326c:	fac42503          	lw	a0,-84(s0)
20013270:	d42ff0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
20013274:	faa42423          	sw	a0,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:325
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC8].exint_data;
20013278:	fa842783          	lw	a5,-88(s0)
2001327c:	2d87a783          	lw	a5,728(a5)
20013280:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:326
        intc->metal_int_table[METAL_INTERRUPT_ID_LC8].handler(METAL_INTERRUPT_ID_LC8, priv);
20013284:	fa842783          	lw	a5,-88(s0)
20013288:	2d07a783          	lw	a5,720(a5)
2001328c:	fa442583          	lw	a1,-92(s0)
20013290:	4561                	li	a0,24
20013292:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:328
    }
}
20013294:	0001                	nop
20013296:	40f6                	lw	ra,92(sp)
20013298:	42e6                	lw	t0,88(sp)
2001329a:	4356                	lw	t1,84(sp)
2001329c:	43c6                	lw	t2,80(sp)
2001329e:	4436                	lw	s0,76(sp)
200132a0:	4526                	lw	a0,72(sp)
200132a2:	4596                	lw	a1,68(sp)
200132a4:	4606                	lw	a2,64(sp)
200132a6:	56f2                	lw	a3,60(sp)
200132a8:	5762                	lw	a4,56(sp)
200132aa:	57d2                	lw	a5,52(sp)
200132ac:	5842                	lw	a6,48(sp)
200132ae:	58b2                	lw	a7,44(sp)
200132b0:	5e22                	lw	t3,40(sp)
200132b2:	5e92                	lw	t4,36(sp)
200132b4:	5f02                	lw	t5,32(sp)
200132b6:	4ff2                	lw	t6,28(sp)
200132b8:	6125                	addi	sp,sp,96
200132ba:	30200073          	mret

200132be <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:331

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler (void) {
200132be:	711d                	addi	sp,sp,-96
200132c0:	ce86                	sw	ra,92(sp)
200132c2:	cc96                	sw	t0,88(sp)
200132c4:	ca9a                	sw	t1,84(sp)
200132c6:	c89e                	sw	t2,80(sp)
200132c8:	c6a2                	sw	s0,76(sp)
200132ca:	c4aa                	sw	a0,72(sp)
200132cc:	c2ae                	sw	a1,68(sp)
200132ce:	c0b2                	sw	a2,64(sp)
200132d0:	de36                	sw	a3,60(sp)
200132d2:	dc3a                	sw	a4,56(sp)
200132d4:	da3e                	sw	a5,52(sp)
200132d6:	d842                	sw	a6,48(sp)
200132d8:	d646                	sw	a7,44(sp)
200132da:	d472                	sw	t3,40(sp)
200132dc:	d276                	sw	t4,36(sp)
200132de:	d07a                	sw	t5,32(sp)
200132e0:	ce7e                	sw	t6,28(sp)
200132e2:	1080                	addi	s0,sp,96
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:334
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200132e4:	d28ff0ef          	jal	ra,2001280c <__metal_myhart_id>
200132e8:	872a                	mv	a4,a0
200132ea:	800017b7          	lui	a5,0x80001
200132ee:	070a                	slli	a4,a4,0x2
200132f0:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
200132f4:	97ba                	add	a5,a5,a4
200132f6:	439c                	lw	a5,0(a5)
200132f8:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:336

    if ( cpu ) {
200132fc:	fac42783          	lw	a5,-84(s0)
20013300:	c78d                	beqz	a5,2001332a <metal_lc9_interrupt_vector_handler+0x6c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:338
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20013302:	fac42503          	lw	a0,-84(s0)
20013306:	cacff0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
2001330a:	faa42423          	sw	a0,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:339
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC9].exint_data;
2001330e:	fa842783          	lw	a5,-88(s0)
20013312:	2f07a783          	lw	a5,752(a5)
20013316:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:340
        intc->metal_int_table[METAL_INTERRUPT_ID_LC9].handler(METAL_INTERRUPT_ID_LC9, priv);
2001331a:	fa842783          	lw	a5,-88(s0)
2001331e:	2e87a783          	lw	a5,744(a5)
20013322:	fa442583          	lw	a1,-92(s0)
20013326:	4565                	li	a0,25
20013328:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:342
    }
}
2001332a:	0001                	nop
2001332c:	40f6                	lw	ra,92(sp)
2001332e:	42e6                	lw	t0,88(sp)
20013330:	4356                	lw	t1,84(sp)
20013332:	43c6                	lw	t2,80(sp)
20013334:	4436                	lw	s0,76(sp)
20013336:	4526                	lw	a0,72(sp)
20013338:	4596                	lw	a1,68(sp)
2001333a:	4606                	lw	a2,64(sp)
2001333c:	56f2                	lw	a3,60(sp)
2001333e:	5762                	lw	a4,56(sp)
20013340:	57d2                	lw	a5,52(sp)
20013342:	5842                	lw	a6,48(sp)
20013344:	58b2                	lw	a7,44(sp)
20013346:	5e22                	lw	t3,40(sp)
20013348:	5e92                	lw	t4,36(sp)
2001334a:	5f02                	lw	t5,32(sp)
2001334c:	4ff2                	lw	t6,28(sp)
2001334e:	6125                	addi	sp,sp,96
20013350:	30200073          	mret

20013354 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:345

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc10_interrupt_vector_handler (void) {
20013354:	711d                	addi	sp,sp,-96
20013356:	ce86                	sw	ra,92(sp)
20013358:	cc96                	sw	t0,88(sp)
2001335a:	ca9a                	sw	t1,84(sp)
2001335c:	c89e                	sw	t2,80(sp)
2001335e:	c6a2                	sw	s0,76(sp)
20013360:	c4aa                	sw	a0,72(sp)
20013362:	c2ae                	sw	a1,68(sp)
20013364:	c0b2                	sw	a2,64(sp)
20013366:	de36                	sw	a3,60(sp)
20013368:	dc3a                	sw	a4,56(sp)
2001336a:	da3e                	sw	a5,52(sp)
2001336c:	d842                	sw	a6,48(sp)
2001336e:	d646                	sw	a7,44(sp)
20013370:	d472                	sw	t3,40(sp)
20013372:	d276                	sw	t4,36(sp)
20013374:	d07a                	sw	t5,32(sp)
20013376:	ce7e                	sw	t6,28(sp)
20013378:	1080                	addi	s0,sp,96
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:348
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2001337a:	c92ff0ef          	jal	ra,2001280c <__metal_myhart_id>
2001337e:	872a                	mv	a4,a0
20013380:	800017b7          	lui	a5,0x80001
20013384:	070a                	slli	a4,a4,0x2
20013386:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
2001338a:	97ba                	add	a5,a5,a4
2001338c:	439c                	lw	a5,0(a5)
2001338e:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:350

    if ( cpu ) {
20013392:	fac42783          	lw	a5,-84(s0)
20013396:	c78d                	beqz	a5,200133c0 <metal_lc10_interrupt_vector_handler+0x6c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:352
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20013398:	fac42503          	lw	a0,-84(s0)
2001339c:	c16ff0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
200133a0:	faa42423          	sw	a0,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:353
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC10].exint_data;
200133a4:	fa842783          	lw	a5,-88(s0)
200133a8:	3087a783          	lw	a5,776(a5)
200133ac:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:354
        intc->metal_int_table[METAL_INTERRUPT_ID_LC10].handler(METAL_INTERRUPT_ID_LC10, priv);
200133b0:	fa842783          	lw	a5,-88(s0)
200133b4:	3007a783          	lw	a5,768(a5)
200133b8:	fa442583          	lw	a1,-92(s0)
200133bc:	4569                	li	a0,26
200133be:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:356
    }
}
200133c0:	0001                	nop
200133c2:	40f6                	lw	ra,92(sp)
200133c4:	42e6                	lw	t0,88(sp)
200133c6:	4356                	lw	t1,84(sp)
200133c8:	43c6                	lw	t2,80(sp)
200133ca:	4436                	lw	s0,76(sp)
200133cc:	4526                	lw	a0,72(sp)
200133ce:	4596                	lw	a1,68(sp)
200133d0:	4606                	lw	a2,64(sp)
200133d2:	56f2                	lw	a3,60(sp)
200133d4:	5762                	lw	a4,56(sp)
200133d6:	57d2                	lw	a5,52(sp)
200133d8:	5842                	lw	a6,48(sp)
200133da:	58b2                	lw	a7,44(sp)
200133dc:	5e22                	lw	t3,40(sp)
200133de:	5e92                	lw	t4,36(sp)
200133e0:	5f02                	lw	t5,32(sp)
200133e2:	4ff2                	lw	t6,28(sp)
200133e4:	6125                	addi	sp,sp,96
200133e6:	30200073          	mret

200133ea <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:359

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc11_interrupt_vector_handler (void) {
200133ea:	711d                	addi	sp,sp,-96
200133ec:	ce86                	sw	ra,92(sp)
200133ee:	cc96                	sw	t0,88(sp)
200133f0:	ca9a                	sw	t1,84(sp)
200133f2:	c89e                	sw	t2,80(sp)
200133f4:	c6a2                	sw	s0,76(sp)
200133f6:	c4aa                	sw	a0,72(sp)
200133f8:	c2ae                	sw	a1,68(sp)
200133fa:	c0b2                	sw	a2,64(sp)
200133fc:	de36                	sw	a3,60(sp)
200133fe:	dc3a                	sw	a4,56(sp)
20013400:	da3e                	sw	a5,52(sp)
20013402:	d842                	sw	a6,48(sp)
20013404:	d646                	sw	a7,44(sp)
20013406:	d472                	sw	t3,40(sp)
20013408:	d276                	sw	t4,36(sp)
2001340a:	d07a                	sw	t5,32(sp)
2001340c:	ce7e                	sw	t6,28(sp)
2001340e:	1080                	addi	s0,sp,96
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:362
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20013410:	bfcff0ef          	jal	ra,2001280c <__metal_myhart_id>
20013414:	872a                	mv	a4,a0
20013416:	800017b7          	lui	a5,0x80001
2001341a:	070a                	slli	a4,a4,0x2
2001341c:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
20013420:	97ba                	add	a5,a5,a4
20013422:	439c                	lw	a5,0(a5)
20013424:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:364

    if ( cpu ) {
20013428:	fac42783          	lw	a5,-84(s0)
2001342c:	c78d                	beqz	a5,20013456 <metal_lc11_interrupt_vector_handler+0x6c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:366
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2001342e:	fac42503          	lw	a0,-84(s0)
20013432:	b80ff0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
20013436:	faa42423          	sw	a0,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:367
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC11].exint_data;
2001343a:	fa842783          	lw	a5,-88(s0)
2001343e:	3207a783          	lw	a5,800(a5)
20013442:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:368
        intc->metal_int_table[METAL_INTERRUPT_ID_LC11].handler(METAL_INTERRUPT_ID_LC11, priv);
20013446:	fa842783          	lw	a5,-88(s0)
2001344a:	3187a783          	lw	a5,792(a5)
2001344e:	fa442583          	lw	a1,-92(s0)
20013452:	456d                	li	a0,27
20013454:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:370
    }
}
20013456:	0001                	nop
20013458:	40f6                	lw	ra,92(sp)
2001345a:	42e6                	lw	t0,88(sp)
2001345c:	4356                	lw	t1,84(sp)
2001345e:	43c6                	lw	t2,80(sp)
20013460:	4436                	lw	s0,76(sp)
20013462:	4526                	lw	a0,72(sp)
20013464:	4596                	lw	a1,68(sp)
20013466:	4606                	lw	a2,64(sp)
20013468:	56f2                	lw	a3,60(sp)
2001346a:	5762                	lw	a4,56(sp)
2001346c:	57d2                	lw	a5,52(sp)
2001346e:	5842                	lw	a6,48(sp)
20013470:	58b2                	lw	a7,44(sp)
20013472:	5e22                	lw	t3,40(sp)
20013474:	5e92                	lw	t4,36(sp)
20013476:	5f02                	lw	t5,32(sp)
20013478:	4ff2                	lw	t6,28(sp)
2001347a:	6125                	addi	sp,sp,96
2001347c:	30200073          	mret

20013480 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:373

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc12_interrupt_vector_handler (void) {
20013480:	711d                	addi	sp,sp,-96
20013482:	ce86                	sw	ra,92(sp)
20013484:	cc96                	sw	t0,88(sp)
20013486:	ca9a                	sw	t1,84(sp)
20013488:	c89e                	sw	t2,80(sp)
2001348a:	c6a2                	sw	s0,76(sp)
2001348c:	c4aa                	sw	a0,72(sp)
2001348e:	c2ae                	sw	a1,68(sp)
20013490:	c0b2                	sw	a2,64(sp)
20013492:	de36                	sw	a3,60(sp)
20013494:	dc3a                	sw	a4,56(sp)
20013496:	da3e                	sw	a5,52(sp)
20013498:	d842                	sw	a6,48(sp)
2001349a:	d646                	sw	a7,44(sp)
2001349c:	d472                	sw	t3,40(sp)
2001349e:	d276                	sw	t4,36(sp)
200134a0:	d07a                	sw	t5,32(sp)
200134a2:	ce7e                	sw	t6,28(sp)
200134a4:	1080                	addi	s0,sp,96
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:376
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200134a6:	b66ff0ef          	jal	ra,2001280c <__metal_myhart_id>
200134aa:	872a                	mv	a4,a0
200134ac:	800017b7          	lui	a5,0x80001
200134b0:	070a                	slli	a4,a4,0x2
200134b2:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
200134b6:	97ba                	add	a5,a5,a4
200134b8:	439c                	lw	a5,0(a5)
200134ba:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:378

    if ( cpu ) {
200134be:	fac42783          	lw	a5,-84(s0)
200134c2:	c78d                	beqz	a5,200134ec <metal_lc12_interrupt_vector_handler+0x6c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:380
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200134c4:	fac42503          	lw	a0,-84(s0)
200134c8:	aeaff0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
200134cc:	faa42423          	sw	a0,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:381
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC12].exint_data;
200134d0:	fa842783          	lw	a5,-88(s0)
200134d4:	3387a783          	lw	a5,824(a5)
200134d8:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:382
        intc->metal_int_table[METAL_INTERRUPT_ID_LC12].handler(METAL_INTERRUPT_ID_LC12, priv);
200134dc:	fa842783          	lw	a5,-88(s0)
200134e0:	3307a783          	lw	a5,816(a5)
200134e4:	fa442583          	lw	a1,-92(s0)
200134e8:	4571                	li	a0,28
200134ea:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:384
    }
}
200134ec:	0001                	nop
200134ee:	40f6                	lw	ra,92(sp)
200134f0:	42e6                	lw	t0,88(sp)
200134f2:	4356                	lw	t1,84(sp)
200134f4:	43c6                	lw	t2,80(sp)
200134f6:	4436                	lw	s0,76(sp)
200134f8:	4526                	lw	a0,72(sp)
200134fa:	4596                	lw	a1,68(sp)
200134fc:	4606                	lw	a2,64(sp)
200134fe:	56f2                	lw	a3,60(sp)
20013500:	5762                	lw	a4,56(sp)
20013502:	57d2                	lw	a5,52(sp)
20013504:	5842                	lw	a6,48(sp)
20013506:	58b2                	lw	a7,44(sp)
20013508:	5e22                	lw	t3,40(sp)
2001350a:	5e92                	lw	t4,36(sp)
2001350c:	5f02                	lw	t5,32(sp)
2001350e:	4ff2                	lw	t6,28(sp)
20013510:	6125                	addi	sp,sp,96
20013512:	30200073          	mret

20013516 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:387

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc13_interrupt_vector_handler (void) {
20013516:	711d                	addi	sp,sp,-96
20013518:	ce86                	sw	ra,92(sp)
2001351a:	cc96                	sw	t0,88(sp)
2001351c:	ca9a                	sw	t1,84(sp)
2001351e:	c89e                	sw	t2,80(sp)
20013520:	c6a2                	sw	s0,76(sp)
20013522:	c4aa                	sw	a0,72(sp)
20013524:	c2ae                	sw	a1,68(sp)
20013526:	c0b2                	sw	a2,64(sp)
20013528:	de36                	sw	a3,60(sp)
2001352a:	dc3a                	sw	a4,56(sp)
2001352c:	da3e                	sw	a5,52(sp)
2001352e:	d842                	sw	a6,48(sp)
20013530:	d646                	sw	a7,44(sp)
20013532:	d472                	sw	t3,40(sp)
20013534:	d276                	sw	t4,36(sp)
20013536:	d07a                	sw	t5,32(sp)
20013538:	ce7e                	sw	t6,28(sp)
2001353a:	1080                	addi	s0,sp,96
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:390
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2001353c:	ad0ff0ef          	jal	ra,2001280c <__metal_myhart_id>
20013540:	872a                	mv	a4,a0
20013542:	800017b7          	lui	a5,0x80001
20013546:	070a                	slli	a4,a4,0x2
20013548:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
2001354c:	97ba                	add	a5,a5,a4
2001354e:	439c                	lw	a5,0(a5)
20013550:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:392

    if ( cpu ) {
20013554:	fac42783          	lw	a5,-84(s0)
20013558:	c78d                	beqz	a5,20013582 <metal_lc13_interrupt_vector_handler+0x6c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:394
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2001355a:	fac42503          	lw	a0,-84(s0)
2001355e:	a54ff0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
20013562:	faa42423          	sw	a0,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:395
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC13].exint_data;
20013566:	fa842783          	lw	a5,-88(s0)
2001356a:	3507a783          	lw	a5,848(a5)
2001356e:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:396
        intc->metal_int_table[METAL_INTERRUPT_ID_LC13].handler(METAL_INTERRUPT_ID_LC13, priv);
20013572:	fa842783          	lw	a5,-88(s0)
20013576:	3487a783          	lw	a5,840(a5)
2001357a:	fa442583          	lw	a1,-92(s0)
2001357e:	4575                	li	a0,29
20013580:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:398
    }
}
20013582:	0001                	nop
20013584:	40f6                	lw	ra,92(sp)
20013586:	42e6                	lw	t0,88(sp)
20013588:	4356                	lw	t1,84(sp)
2001358a:	43c6                	lw	t2,80(sp)
2001358c:	4436                	lw	s0,76(sp)
2001358e:	4526                	lw	a0,72(sp)
20013590:	4596                	lw	a1,68(sp)
20013592:	4606                	lw	a2,64(sp)
20013594:	56f2                	lw	a3,60(sp)
20013596:	5762                	lw	a4,56(sp)
20013598:	57d2                	lw	a5,52(sp)
2001359a:	5842                	lw	a6,48(sp)
2001359c:	58b2                	lw	a7,44(sp)
2001359e:	5e22                	lw	t3,40(sp)
200135a0:	5e92                	lw	t4,36(sp)
200135a2:	5f02                	lw	t5,32(sp)
200135a4:	4ff2                	lw	t6,28(sp)
200135a6:	6125                	addi	sp,sp,96
200135a8:	30200073          	mret

200135ac <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:401

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc14_interrupt_vector_handler (void) {
200135ac:	711d                	addi	sp,sp,-96
200135ae:	ce86                	sw	ra,92(sp)
200135b0:	cc96                	sw	t0,88(sp)
200135b2:	ca9a                	sw	t1,84(sp)
200135b4:	c89e                	sw	t2,80(sp)
200135b6:	c6a2                	sw	s0,76(sp)
200135b8:	c4aa                	sw	a0,72(sp)
200135ba:	c2ae                	sw	a1,68(sp)
200135bc:	c0b2                	sw	a2,64(sp)
200135be:	de36                	sw	a3,60(sp)
200135c0:	dc3a                	sw	a4,56(sp)
200135c2:	da3e                	sw	a5,52(sp)
200135c4:	d842                	sw	a6,48(sp)
200135c6:	d646                	sw	a7,44(sp)
200135c8:	d472                	sw	t3,40(sp)
200135ca:	d276                	sw	t4,36(sp)
200135cc:	d07a                	sw	t5,32(sp)
200135ce:	ce7e                	sw	t6,28(sp)
200135d0:	1080                	addi	s0,sp,96
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:404
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200135d2:	a3aff0ef          	jal	ra,2001280c <__metal_myhart_id>
200135d6:	872a                	mv	a4,a0
200135d8:	800017b7          	lui	a5,0x80001
200135dc:	070a                	slli	a4,a4,0x2
200135de:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
200135e2:	97ba                	add	a5,a5,a4
200135e4:	439c                	lw	a5,0(a5)
200135e6:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:406

    if ( cpu ) {
200135ea:	fac42783          	lw	a5,-84(s0)
200135ee:	c78d                	beqz	a5,20013618 <metal_lc14_interrupt_vector_handler+0x6c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:408
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200135f0:	fac42503          	lw	a0,-84(s0)
200135f4:	9beff0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
200135f8:	faa42423          	sw	a0,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:409
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC14].exint_data;
200135fc:	fa842783          	lw	a5,-88(s0)
20013600:	3687a783          	lw	a5,872(a5)
20013604:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:410
        intc->metal_int_table[METAL_INTERRUPT_ID_LC14].handler(METAL_INTERRUPT_ID_LC14, priv);
20013608:	fa842783          	lw	a5,-88(s0)
2001360c:	3607a783          	lw	a5,864(a5)
20013610:	fa442583          	lw	a1,-92(s0)
20013614:	4579                	li	a0,30
20013616:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:412
    }
}
20013618:	0001                	nop
2001361a:	40f6                	lw	ra,92(sp)
2001361c:	42e6                	lw	t0,88(sp)
2001361e:	4356                	lw	t1,84(sp)
20013620:	43c6                	lw	t2,80(sp)
20013622:	4436                	lw	s0,76(sp)
20013624:	4526                	lw	a0,72(sp)
20013626:	4596                	lw	a1,68(sp)
20013628:	4606                	lw	a2,64(sp)
2001362a:	56f2                	lw	a3,60(sp)
2001362c:	5762                	lw	a4,56(sp)
2001362e:	57d2                	lw	a5,52(sp)
20013630:	5842                	lw	a6,48(sp)
20013632:	58b2                	lw	a7,44(sp)
20013634:	5e22                	lw	t3,40(sp)
20013636:	5e92                	lw	t4,36(sp)
20013638:	5f02                	lw	t5,32(sp)
2001363a:	4ff2                	lw	t6,28(sp)
2001363c:	6125                	addi	sp,sp,96
2001363e:	30200073          	mret

20013642 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:415

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc15_interrupt_vector_handler (void) {
20013642:	711d                	addi	sp,sp,-96
20013644:	ce86                	sw	ra,92(sp)
20013646:	cc96                	sw	t0,88(sp)
20013648:	ca9a                	sw	t1,84(sp)
2001364a:	c89e                	sw	t2,80(sp)
2001364c:	c6a2                	sw	s0,76(sp)
2001364e:	c4aa                	sw	a0,72(sp)
20013650:	c2ae                	sw	a1,68(sp)
20013652:	c0b2                	sw	a2,64(sp)
20013654:	de36                	sw	a3,60(sp)
20013656:	dc3a                	sw	a4,56(sp)
20013658:	da3e                	sw	a5,52(sp)
2001365a:	d842                	sw	a6,48(sp)
2001365c:	d646                	sw	a7,44(sp)
2001365e:	d472                	sw	t3,40(sp)
20013660:	d276                	sw	t4,36(sp)
20013662:	d07a                	sw	t5,32(sp)
20013664:	ce7e                	sw	t6,28(sp)
20013666:	1080                	addi	s0,sp,96
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:418
    void *priv;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20013668:	9a4ff0ef          	jal	ra,2001280c <__metal_myhart_id>
2001366c:	872a                	mv	a4,a0
2001366e:	800017b7          	lui	a5,0x80001
20013672:	070a                	slli	a4,a4,0x2
20013674:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
20013678:	97ba                	add	a5,a5,a4
2001367a:	439c                	lw	a5,0(a5)
2001367c:	faf42623          	sw	a5,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:420

    if ( cpu ) {
20013680:	fac42783          	lw	a5,-84(s0)
20013684:	c78d                	beqz	a5,200136ae <metal_lc15_interrupt_vector_handler+0x6c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:422
        intc = (struct __metal_driver_riscv_cpu_intc *)
          __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20013686:	fac42503          	lw	a0,-84(s0)
2001368a:	928ff0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
2001368e:	faa42423          	sw	a0,-88(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:423
        priv = intc->metal_int_table[METAL_INTERRUPT_ID_LC15].exint_data;
20013692:	fa842783          	lw	a5,-88(s0)
20013696:	3807a783          	lw	a5,896(a5)
2001369a:	faf42223          	sw	a5,-92(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:424
        intc->metal_int_table[METAL_INTERRUPT_ID_LC15].handler(METAL_INTERRUPT_ID_LC15, priv);
2001369e:	fa842783          	lw	a5,-88(s0)
200136a2:	3787a783          	lw	a5,888(a5)
200136a6:	fa442583          	lw	a1,-92(s0)
200136aa:	457d                	li	a0,31
200136ac:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:426
    }
}
200136ae:	0001                	nop
200136b0:	40f6                	lw	ra,92(sp)
200136b2:	42e6                	lw	t0,88(sp)
200136b4:	4356                	lw	t1,84(sp)
200136b6:	43c6                	lw	t2,80(sp)
200136b8:	4436                	lw	s0,76(sp)
200136ba:	4526                	lw	a0,72(sp)
200136bc:	4596                	lw	a1,68(sp)
200136be:	4606                	lw	a2,64(sp)
200136c0:	56f2                	lw	a3,60(sp)
200136c2:	5762                	lw	a4,56(sp)
200136c4:	57d2                	lw	a5,52(sp)
200136c6:	5842                	lw	a6,48(sp)
200136c8:	58b2                	lw	a7,44(sp)
200136ca:	5e22                	lw	t3,40(sp)
200136cc:	5e92                	lw	t4,36(sp)
200136ce:	5f02                	lw	t5,32(sp)
200136d0:	4ff2                	lw	t6,28(sp)
200136d2:	6125                	addi	sp,sp,96
200136d4:	30200073          	mret

200136d8 <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:429

metal_vector_mode __metal_controller_interrupt_vector_mode (void)
{
200136d8:	1101                	addi	sp,sp,-32
200136da:	ce22                	sw	s0,28(sp)
200136dc:	1000                	addi	s0,sp,32
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:432
    uintptr_t val;

    asm volatile ("csrr %0, mtvec" : "=r"(val));
200136de:	305027f3          	csrr	a5,mtvec
200136e2:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:433
    val &= METAL_MTVEC_MASK;
200136e6:	fec42783          	lw	a5,-20(s0)
200136ea:	03f7f793          	andi	a5,a5,63
200136ee:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:435

    switch (val) {
200136f2:	fec42703          	lw	a4,-20(s0)
200136f6:	4789                	li	a5,2
200136f8:	00f70d63          	beq	a4,a5,20013712 <__metal_controller_interrupt_vector_mode+0x3a>
200136fc:	fec42703          	lw	a4,-20(s0)
20013700:	478d                	li	a5,3
20013702:	00f70a63          	beq	a4,a5,20013716 <__metal_controller_interrupt_vector_mode+0x3e>
20013706:	fec42703          	lw	a4,-20(s0)
2001370a:	4785                	li	a5,1
2001370c:	00f70763          	beq	a4,a5,2001371a <__metal_controller_interrupt_vector_mode+0x42>
20013710:	a039                	j	2001371e <__metal_controller_interrupt_vector_mode+0x46>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:437
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20013712:	478d                	li	a5,3
20013714:	a031                	j	20013720 <__metal_controller_interrupt_vector_mode+0x48>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:439
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20013716:	4791                	li	a5,4
20013718:	a021                	j	20013720 <__metal_controller_interrupt_vector_mode+0x48>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:441
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
2001371a:	4785                	li	a5,1
2001371c:	a011                	j	20013720 <__metal_controller_interrupt_vector_mode+0x48>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:443
    }
    return METAL_DIRECT_MODE;
2001371e:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:444
}
20013720:	853e                	mv	a0,a5
20013722:	4472                	lw	s0,28(sp)
20013724:	6105                	addi	sp,sp,32
20013726:	8082                	ret

20013728 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:447

void __metal_controller_interrupt_vector (metal_vector_mode mode, void *vec_table)
{  
20013728:	7179                	addi	sp,sp,-48
2001372a:	d622                	sw	s0,44(sp)
2001372c:	1800                	addi	s0,sp,48
2001372e:	fca42e23          	sw	a0,-36(s0)
20013732:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:450
    uintptr_t trap_entry, val;

    __asm__ volatile ("csrr %0, mtvec" : "=r"(val));
20013736:	305027f3          	csrr	a5,mtvec
2001373a:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:451
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
2001373e:	fec42783          	lw	a5,-20(s0)
20013742:	fc07f793          	andi	a5,a5,-64
20013746:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:452
    trap_entry = (uintptr_t)vec_table;
2001374a:	fd842783          	lw	a5,-40(s0)
2001374e:	fef42423          	sw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:454

    switch (mode) {
20013752:	fdc42703          	lw	a4,-36(s0)
20013756:	4791                	li	a5,4
20013758:	06e7e063          	bltu	a5,a4,200137b8 <__metal_controller_interrupt_vector+0x90>
2001375c:	fdc42783          	lw	a5,-36(s0)
20013760:	00279713          	slli	a4,a5,0x2
20013764:	200177b7          	lui	a5,0x20017
20013768:	32878793          	addi	a5,a5,808 # 20017328 <__metal_driver_vtable_riscv_clint0+0x4c>
2001376c:	97ba                	add	a5,a5,a4
2001376e:	439c                	lw	a5,0(a5)
20013770:	8782                	jr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:457
    case METAL_SELECTIVE_NONVECTOR_MODE:
    case METAL_SELECTIVE_VECTOR_MODE:
        __asm__ volatile ("csrw 0x307, %0" :: "r"(trap_entry));
20013772:	fe842783          	lw	a5,-24(s0)
20013776:	30779073          	csrw	mtvt,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:458
        __asm__ volatile ("csrw mtvec, %0" :: "r"(val | METAL_MTVEC_CLIC));
2001377a:	fec42783          	lw	a5,-20(s0)
2001377e:	0027e793          	ori	a5,a5,2
20013782:	30579073          	csrw	mtvec,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:459
        break;
20013786:	a80d                	j	200137b8 <__metal_controller_interrupt_vector+0x90>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:461
    case METAL_HARDWARE_VECTOR_MODE:
        __asm__ volatile ("csrw 0x307, %0" :: "r"(trap_entry));
20013788:	fe842783          	lw	a5,-24(s0)
2001378c:	30779073          	csrw	mtvt,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:462
        __asm__ volatile ("csrw mtvec, %0" :: "r"(val | METAL_MTVEC_CLIC_VECTORED));
20013790:	fec42783          	lw	a5,-20(s0)
20013794:	0037e793          	ori	a5,a5,3
20013798:	30579073          	csrw	mtvec,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:463
        break;
2001379c:	a831                	j	200137b8 <__metal_controller_interrupt_vector+0x90>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:465
    case METAL_VECTOR_MODE:
        __asm__ volatile ("csrw mtvec, %0" :: "r"(trap_entry | METAL_MTVEC_VECTORED));
2001379e:	fe842783          	lw	a5,-24(s0)
200137a2:	0017e793          	ori	a5,a5,1
200137a6:	30579073          	csrw	mtvec,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:466
        break;
200137aa:	a039                	j	200137b8 <__metal_controller_interrupt_vector+0x90>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:468
    case METAL_DIRECT_MODE:
        __asm__ volatile ("csrw mtvec, %0" :: "r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
200137ac:	fe842783          	lw	a5,-24(s0)
200137b0:	9bf1                	andi	a5,a5,-4
200137b2:	30579073          	csrw	mtvec,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:469
        break;
200137b6:	0001                	nop
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:471
    }
}
200137b8:	0001                	nop
200137ba:	5432                	lw	s0,44(sp)
200137bc:	6145                	addi	sp,sp,48
200137be:	8082                	ret

200137c0 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:474

int __metal_valid_interrupt_id (int id)
{
200137c0:	1101                	addi	sp,sp,-32
200137c2:	ce22                	sw	s0,28(sp)
200137c4:	1000                	addi	s0,sp,32
200137c6:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:475
    switch (id) {
200137ca:	fec42783          	lw	a5,-20(s0)
200137ce:	17f5                	addi	a5,a5,-3
200137d0:	4771                	li	a4,28
200137d2:	00f76d63          	bltu	a4,a5,200137ec <__metal_valid_interrupt_id+0x2c>
200137d6:	00279713          	slli	a4,a5,0x2
200137da:	200177b7          	lui	a5,0x20017
200137de:	33c78793          	addi	a5,a5,828 # 2001733c <__metal_driver_vtable_riscv_clint0+0x60>
200137e2:	97ba                	add	a5,a5,a4
200137e4:	439c                	lw	a5,0(a5)
200137e6:	8782                	jr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:495
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        return 1;
200137e8:	4785                	li	a5,1
200137ea:	a019                	j	200137f0 <__metal_valid_interrupt_id+0x30>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:497
    default:
        break;
200137ec:	0001                	nop
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:500
    }

    return 0;
200137ee:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:501
}
200137f0:	853e                	mv	a0,a5
200137f2:	4472                	lw	s0,28(sp)
200137f4:	6105                	addi	sp,sp,32
200137f6:	8082                	ret

200137f8 <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:506

 
int __metal_local_interrupt_enable (struct metal_interrupt *controller,
				  metal_interrupt_id_e id, int enable)
{
200137f8:	7179                	addi	sp,sp,-48
200137fa:	d606                	sw	ra,44(sp)
200137fc:	d422                	sw	s0,40(sp)
200137fe:	1800                	addi	s0,sp,48
20013800:	fca42e23          	sw	a0,-36(s0)
20013804:	fcb42c23          	sw	a1,-40(s0)
20013808:	fcc42a23          	sw	a2,-44(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:507
    int rc = 0;
2001380c:	fe042623          	sw	zero,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:509
  
    if ( !controller) {
20013810:	fdc42783          	lw	a5,-36(s0)
20013814:	e399                	bnez	a5,2001381a <__metal_local_interrupt_enable+0x22>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:510
        return -1;
20013816:	57fd                	li	a5,-1
20013818:	a849                	j	200138aa <__metal_local_interrupt_enable+0xb2>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:513
    }

    switch (id) {
2001381a:	fd842703          	lw	a4,-40(s0)
2001381e:	47fd                	li	a5,31
20013820:	08e7e063          	bltu	a5,a4,200138a0 <__metal_local_interrupt_enable+0xa8>
20013824:	fd842783          	lw	a5,-40(s0)
20013828:	00279713          	slli	a4,a5,0x2
2001382c:	200177b7          	lui	a5,0x20017
20013830:	3b078793          	addi	a5,a5,944 # 200173b0 <__metal_driver_vtable_riscv_clint0+0xd4>
20013834:	97ba                	add	a5,a5,a4
20013836:	439c                	lw	a5,0(a5)
20013838:	8782                	jr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:515
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
2001383a:	fd442783          	lw	a5,-44(s0)
2001383e:	c781                	beqz	a5,20013846 <__metal_local_interrupt_enable+0x4e>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:516
            __metal_interrupt_global_enable();
20013840:	fe7fe0ef          	jal	ra,20012826 <__metal_interrupt_global_enable>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:520
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20013844:	a08d                	j	200138a6 <__metal_local_interrupt_enable+0xae>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:518
            __metal_interrupt_global_disable();
20013846:	ff9fe0ef          	jal	ra,2001283e <__metal_interrupt_global_disable>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:520
        break;
2001384a:	a8b1                	j	200138a6 <__metal_local_interrupt_enable+0xae>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:522
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
2001384c:	fd442783          	lw	a5,-44(s0)
20013850:	c781                	beqz	a5,20013858 <__metal_local_interrupt_enable+0x60>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:523
            __metal_interrupt_software_enable();
20013852:	804ff0ef          	jal	ra,20012856 <__metal_interrupt_software_enable>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:527
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20013856:	a881                	j	200138a6 <__metal_local_interrupt_enable+0xae>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:525
            __metal_interrupt_software_disable();
20013858:	816ff0ef          	jal	ra,2001286e <__metal_interrupt_software_disable>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:527
        break;
2001385c:	a0a9                	j	200138a6 <__metal_local_interrupt_enable+0xae>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:529
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
2001385e:	fd442783          	lw	a5,-44(s0)
20013862:	c781                	beqz	a5,2001386a <__metal_local_interrupt_enable+0x72>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:530
	    __metal_interrupt_timer_enable();
20013864:	822ff0ef          	jal	ra,20012886 <__metal_interrupt_timer_enable>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:534
	} else {
	    __metal_interrupt_timer_disable();
	}
	break;
20013868:	a83d                	j	200138a6 <__metal_local_interrupt_enable+0xae>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:532
	    __metal_interrupt_timer_disable();
2001386a:	836ff0ef          	jal	ra,200128a0 <__metal_interrupt_timer_disable>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:534
	break;
2001386e:	a825                	j	200138a6 <__metal_local_interrupt_enable+0xae>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:536
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20013870:	fd442783          	lw	a5,-44(s0)
20013874:	c781                	beqz	a5,2001387c <__metal_local_interrupt_enable+0x84>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:537
            __metal_interrupt_external_enable();
20013876:	844ff0ef          	jal	ra,200128ba <__metal_interrupt_external_enable>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:541
        } else {
            __metal_interrupt_external_disable();
        }
        break;
2001387a:	a035                	j	200138a6 <__metal_local_interrupt_enable+0xae>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:539
            __metal_interrupt_external_disable();
2001387c:	85aff0ef          	jal	ra,200128d6 <__metal_interrupt_external_disable>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:541
        break;
20013880:	a01d                	j	200138a6 <__metal_local_interrupt_enable+0xae>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:558
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20013882:	fd442783          	lw	a5,-44(s0)
20013886:	c799                	beqz	a5,20013894 <__metal_local_interrupt_enable+0x9c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:559
            __metal_interrupt_local_enable(id);
20013888:	fd842783          	lw	a5,-40(s0)
2001388c:	853e                	mv	a0,a5
2001388e:	864ff0ef          	jal	ra,200128f2 <__metal_interrupt_local_enable>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:563
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20013892:	a811                	j	200138a6 <__metal_local_interrupt_enable+0xae>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:561
            __metal_interrupt_local_disable(id);
20013894:	fd842783          	lw	a5,-40(s0)
20013898:	853e                	mv	a0,a5
2001389a:	884ff0ef          	jal	ra,2001291e <__metal_interrupt_local_disable>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:563
        break;
2001389e:	a021                	j	200138a6 <__metal_local_interrupt_enable+0xae>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:565
    default:
        rc = -1;
200138a0:	57fd                	li	a5,-1
200138a2:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:567
    }
    return rc;
200138a6:	fec42783          	lw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:568
}
200138aa:	853e                	mv	a0,a5
200138ac:	50b2                	lw	ra,44(sp)
200138ae:	5422                	lw	s0,40(sp)
200138b0:	6145                	addi	sp,sp,48
200138b2:	8082                	ret

200138b4 <__metal_exception_register>:
__metal_exception_register():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:572

int __metal_exception_register (struct metal_interrupt *controller,
                              int ecode, metal_exception_handler_t isr)
{
200138b4:	7179                	addi	sp,sp,-48
200138b6:	d622                	sw	s0,44(sp)
200138b8:	1800                	addi	s0,sp,48
200138ba:	fca42e23          	sw	a0,-36(s0)
200138be:	fcb42c23          	sw	a1,-40(s0)
200138c2:	fcc42a23          	sw	a2,-44(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:573
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
200138c6:	fdc42783          	lw	a5,-36(s0)
200138ca:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:575

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
200138ce:	fd842703          	lw	a4,-40(s0)
200138d2:	47ad                	li	a5,11
200138d4:	02e7c263          	blt	a5,a4,200138f8 <__metal_exception_register+0x44>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:575 (discriminator 1)
200138d8:	fd442783          	lw	a5,-44(s0)
200138dc:	cf91                	beqz	a5,200138f8 <__metal_exception_register+0x44>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:576
        intc->metal_exception_table[ecode] = isr;
200138de:	fec42703          	lw	a4,-20(s0)
200138e2:	fd842783          	lw	a5,-40(s0)
200138e6:	0e078793          	addi	a5,a5,224
200138ea:	078a                	slli	a5,a5,0x2
200138ec:	97ba                	add	a5,a5,a4
200138ee:	fd442703          	lw	a4,-44(s0)
200138f2:	c798                	sw	a4,8(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:577
        return 0;
200138f4:	4781                	li	a5,0
200138f6:	a011                	j	200138fa <__metal_exception_register+0x46>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:579
    }
    return -1;
200138f8:	57fd                	li	a5,-1
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:580
}
200138fa:	853e                	mv	a0,a5
200138fc:	5432                	lw	s0,44(sp)
200138fe:	6145                	addi	sp,sp,48
20013900:	8082                	ret

20013902 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:583

void __metal_driver_riscv_cpu_controller_interrupt_init (struct metal_interrupt *controller)
{
20013902:	7139                	addi	sp,sp,-64
20013904:	de06                	sw	ra,60(sp)
20013906:	dc22                	sw	s0,56(sp)
20013908:	0080                	addi	s0,sp,64
2001390a:	fca42623          	sw	a0,-52(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:584
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
2001390e:	fcc42783          	lw	a5,-52(s0)
20013912:	fef42223          	sw	a5,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:587
    uintptr_t val;

    if ( !intc->init_done ) {
20013916:	fe442783          	lw	a5,-28(s0)
2001391a:	43dc                	lw	a5,4(a5)
2001391c:	10079d63          	bnez	a5,20013a36 <__metal_driver_riscv_cpu_controller_interrupt_init+0x134>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:589
        /* Disable and clear all interrupt sources */
        __asm__ volatile ("csrc mie, %0" :: "r"(-1));
20013920:	57fd                	li	a5,-1
20013922:	3047b073          	csrc	mie,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:590
        __asm__ volatile ("csrc mip, %0" :: "r"(-1));
20013926:	57fd                	li	a5,-1
20013928:	3447b073          	csrc	mip,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:594

        /* Read the misa CSR to determine if the delegation registers exist */
        uintptr_t misa;
        __asm__ volatile ("csrr %0, misa" : "=r" (misa));
2001392c:	301027f3          	csrr	a5,misa
20013930:	fef42023          	sw	a5,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:598

        /* The delegation CSRs exist if user mode interrupts (N extension) or
         * supervisor mode (S extension) are supported */
        if((misa & METAL_ISA_N_EXTENSIONS) || (misa & METAL_ISA_S_EXTENSIONS)) {
20013934:	fe042703          	lw	a4,-32(s0)
20013938:	6789                	lui	a5,0x2
2001393a:	8ff9                	and	a5,a5,a4
2001393c:	e799                	bnez	a5,2001394a <__metal_driver_riscv_cpu_controller_interrupt_init+0x48>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:598 (discriminator 1)
2001393e:	fe042703          	lw	a4,-32(s0)
20013942:	000407b7          	lui	a5,0x40
20013946:	8ff9                	and	a5,a5,a4
20013948:	c799                	beqz	a5,20013956 <__metal_driver_riscv_cpu_controller_interrupt_init+0x54>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:600
            /* Disable interrupt and exception delegation */
            __asm__ volatile ("csrc mideleg, %0" :: "r"(-1));
2001394a:	57fd                	li	a5,-1
2001394c:	3037b073          	csrc	mideleg,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:601
            __asm__ volatile ("csrc medeleg, %0" :: "r"(-1));
20013950:	57fd                	li	a5,-1
20013952:	3027b073          	csrc	medeleg,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:605
        }

        /* The satp CSR exists if supervisor mode (S extension) is supported */
        if(misa & METAL_ISA_S_EXTENSIONS) {
20013956:	fe042703          	lw	a4,-32(s0)
2001395a:	000407b7          	lui	a5,0x40
2001395e:	8ff9                	and	a5,a5,a4
20013960:	c781                	beqz	a5,20013968 <__metal_driver_riscv_cpu_controller_interrupt_init+0x66>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:607
            /* Clear the entire CSR to make sure that satp.MODE = 0 */
            __asm__ volatile ("csrc satp, %0" :: "r"(-1));
20013962:	57fd                	li	a5,-1
20013964:	1807b073          	csrc	satp,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:611
        }

        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20013968:	fe042623          	sw	zero,-20(s0)
2001396c:	a0b9                	j	200139ba <__metal_driver_riscv_cpu_controller_interrupt_init+0xb8>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:612 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
2001396e:	fe442683          	lw	a3,-28(s0)
20013972:	fec42703          	lw	a4,-20(s0)
20013976:	87ba                	mv	a5,a4
20013978:	0786                	slli	a5,a5,0x1
2001397a:	97ba                	add	a5,a5,a4
2001397c:	078e                	slli	a5,a5,0x3
2001397e:	97b6                	add	a5,a5,a3
20013980:	0807a823          	sw	zero,144(a5) # 40090 <__heap_size+0x3f890>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:613 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20013984:	fe442683          	lw	a3,-28(s0)
20013988:	fec42703          	lw	a4,-20(s0)
2001398c:	87ba                	mv	a5,a4
2001398e:	0786                	slli	a5,a5,0x1
20013990:	97ba                	add	a5,a5,a4
20013992:	078e                	slli	a5,a5,0x3
20013994:	97b6                	add	a5,a5,a3
20013996:	0807aa23          	sw	zero,148(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:614 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
2001399a:	fe442683          	lw	a3,-28(s0)
2001399e:	fec42703          	lw	a4,-20(s0)
200139a2:	87ba                	mv	a5,a4
200139a4:	0786                	slli	a5,a5,0x1
200139a6:	97ba                	add	a5,a5,a4
200139a8:	078e                	slli	a5,a5,0x3
200139aa:	97b6                	add	a5,a5,a3
200139ac:	0807ac23          	sw	zero,152(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:611 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
200139b0:	fec42783          	lw	a5,-20(s0)
200139b4:	0785                	addi	a5,a5,1
200139b6:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:611 (discriminator 1)
200139ba:	fec42703          	lw	a4,-20(s0)
200139be:	47fd                	li	a5,31
200139c0:	fae7d7e3          	bge	a5,a4,2001396e <__metal_driver_riscv_cpu_controller_interrupt_init+0x6c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:616
	}
	for (int i = 0; i < METAL_MAX_ME; i++) {
200139c4:	fe042423          	sw	zero,-24(s0)
200139c8:	a01d                	j	200139ee <__metal_driver_riscv_cpu_controller_interrupt_init+0xec>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:617 (discriminator 3)
	    intc->metal_exception_table[i] = __metal_default_exception_handler;
200139ca:	fe442703          	lw	a4,-28(s0)
200139ce:	fe842783          	lw	a5,-24(s0)
200139d2:	0e078793          	addi	a5,a5,224
200139d6:	078a                	slli	a5,a5,0x2
200139d8:	97ba                	add	a5,a5,a4
200139da:	20013737          	lui	a4,0x20013
200139de:	94a70713          	addi	a4,a4,-1718 # 2001294a <__metal_default_exception_handler>
200139e2:	c798                	sw	a4,8(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:616 (discriminator 3)
	for (int i = 0; i < METAL_MAX_ME; i++) {
200139e4:	fe842783          	lw	a5,-24(s0)
200139e8:	0785                	addi	a5,a5,1
200139ea:	fef42423          	sw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:616 (discriminator 1)
200139ee:	fe842703          	lw	a4,-24(s0)
200139f2:	47ad                	li	a5,11
200139f4:	fce7dbe3          	bge	a5,a4,200139ca <__metal_driver_riscv_cpu_controller_interrupt_init+0xc8>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:619
	}
        __metal_controller_interrupt_vector(METAL_DIRECT_MODE, (void *)(uintptr_t)&__metal_exception_handler);
200139f8:	200137b7          	lui	a5,0x20013
200139fc:	c0078593          	addi	a1,a5,-1024 # 20012c00 <__metal_exception_handler>
20013a00:	4501                	li	a0,0
20013a02:	331d                	jal	20013728 <__metal_controller_interrupt_vector>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:620
	__asm__ volatile ("csrr %0, misa" : "=r"(val));
20013a04:	301027f3          	csrr	a5,misa
20013a08:	fcf42e23          	sw	a5,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:621
	if (val & (METAL_ISA_D_EXTENSIONS | METAL_ISA_F_EXTENSIONS | METAL_ISA_Q_EXTENSIONS)) {
20013a0c:	fdc42703          	lw	a4,-36(s0)
20013a10:	67c1                	lui	a5,0x10
20013a12:	02878793          	addi	a5,a5,40 # 10028 <__heap_size+0xf828>
20013a16:	8ff9                	and	a5,a5,a4
20013a18:	cb99                	beqz	a5,20013a2e <__metal_driver_riscv_cpu_controller_interrupt_init+0x12c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:623
	    /* Floating point architecture, so turn on FP register saving*/
	    __asm__ volatile ("csrr %0, mstatus" : "=r"(val));
20013a1a:	300027f3          	csrr	a5,mstatus
20013a1e:	fcf42e23          	sw	a5,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:624
	    __asm__ volatile ("csrw mstatus, %0" :: "r"(val | METAL_MSTATUS_FS_INIT));
20013a22:	fdc42703          	lw	a4,-36(s0)
20013a26:	6789                	lui	a5,0x2
20013a28:	8fd9                	or	a5,a5,a4
20013a2a:	30079073          	csrw	mstatus,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:626
	}
	intc->init_done = 1;
20013a2e:	fe442783          	lw	a5,-28(s0)
20013a32:	4705                	li	a4,1
20013a34:	c3d8                	sw	a4,4(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:628
    }
}
20013a36:	0001                	nop
20013a38:	50f2                	lw	ra,60(sp)
20013a3a:	5462                	lw	s0,56(sp)
20013a3c:	6121                	addi	sp,sp,64
20013a3e:	8082                	ret

20013a40 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:633

int __metal_driver_riscv_cpu_controller_interrupt_register(struct metal_interrupt *controller,
							 int id, metal_interrupt_handler_t isr,
							 void *priv)
{
20013a40:	7179                	addi	sp,sp,-48
20013a42:	d606                	sw	ra,44(sp)
20013a44:	d422                	sw	s0,40(sp)
20013a46:	1800                	addi	s0,sp,48
20013a48:	fca42e23          	sw	a0,-36(s0)
20013a4c:	fcb42c23          	sw	a1,-40(s0)
20013a50:	fcc42a23          	sw	a2,-44(s0)
20013a54:	fcd42823          	sw	a3,-48(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:634
    int rc = 0;
20013a58:	fe042623          	sw	zero,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:635
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20013a5c:	fdc42783          	lw	a5,-36(s0)
20013a60:	fef42423          	sw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:637
 
    if ( !__metal_valid_interrupt_id(id) ) {
20013a64:	fd842503          	lw	a0,-40(s0)
20013a68:	3ba1                	jal	200137c0 <__metal_valid_interrupt_id>
20013a6a:	87aa                	mv	a5,a0
20013a6c:	e399                	bnez	a5,20013a72 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:638
        return -11;
20013a6e:	57d5                	li	a5,-11
20013a70:	aa11                	j	20013b84 <__metal_driver_riscv_cpu_controller_interrupt_register+0x144>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:641
    }

    if (isr) {
20013a72:	fd442783          	lw	a5,-44(s0)
20013a76:	cf85                	beqz	a5,20013aae <__metal_driver_riscv_cpu_controller_interrupt_register+0x6e>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:642
        intc->metal_int_table[id].handler = isr;
20013a78:	fe842683          	lw	a3,-24(s0)
20013a7c:	fd842703          	lw	a4,-40(s0)
20013a80:	87ba                	mv	a5,a4
20013a82:	0786                	slli	a5,a5,0x1
20013a84:	97ba                	add	a5,a5,a4
20013a86:	078e                	slli	a5,a5,0x3
20013a88:	97b6                	add	a5,a5,a3
20013a8a:	fd442703          	lw	a4,-44(s0)
20013a8e:	08e7a823          	sw	a4,144(a5) # 2090 <__heap_size+0x1890>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:643
        intc->metal_int_table[id].exint_data = priv;
20013a92:	fe842683          	lw	a3,-24(s0)
20013a96:	fd842703          	lw	a4,-40(s0)
20013a9a:	87ba                	mv	a5,a4
20013a9c:	0786                	slli	a5,a5,0x1
20013a9e:	97ba                	add	a5,a5,a4
20013aa0:	078e                	slli	a5,a5,0x3
20013aa2:	97b6                	add	a5,a5,a3
20013aa4:	fd042703          	lw	a4,-48(s0)
20013aa8:	08e7ac23          	sw	a4,152(a5)
20013aac:	a8d1                	j	20013b80 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:645
    } else {
	switch (id) {
20013aae:	fd842783          	lw	a5,-40(s0)
20013ab2:	17f5                	addi	a5,a5,-3
20013ab4:	4771                	li	a4,28
20013ab6:	0cf76263          	bltu	a4,a5,20013b7a <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
20013aba:	00279713          	slli	a4,a5,0x2
20013abe:	200177b7          	lui	a5,0x20017
20013ac2:	43078793          	addi	a5,a5,1072 # 20017430 <__metal_driver_vtable_riscv_clint0+0x154>
20013ac6:	97ba                	add	a5,a5,a4
20013ac8:	439c                	lw	a5,0(a5)
20013aca:	8782                	jr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:647
	case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20013acc:	fe842683          	lw	a3,-24(s0)
20013ad0:	fd842703          	lw	a4,-40(s0)
20013ad4:	87ba                	mv	a5,a4
20013ad6:	0786                	slli	a5,a5,0x1
20013ad8:	97ba                	add	a5,a5,a4
20013ada:	078e                	slli	a5,a5,0x3
20013adc:	97b6                	add	a5,a5,a3
20013ade:	20013737          	lui	a4,0x20013
20013ae2:	a3a70713          	addi	a4,a4,-1478 # 20012a3a <__metal_default_sw_handler>
20013ae6:	08e7a823          	sw	a4,144(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:648
            intc->metal_int_table[id].sub_int = priv;
20013aea:	fe842683          	lw	a3,-24(s0)
20013aee:	fd842703          	lw	a4,-40(s0)
20013af2:	87ba                	mv	a5,a4
20013af4:	0786                	slli	a5,a5,0x1
20013af6:	97ba                	add	a5,a5,a4
20013af8:	078e                	slli	a5,a5,0x3
20013afa:	97b6                	add	a5,a5,a3
20013afc:	fd042703          	lw	a4,-48(s0)
20013b00:	08e7aa23          	sw	a4,148(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:649
	  break;
20013b04:	a8b5                	j	20013b80 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:651
	case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20013b06:	fe842683          	lw	a3,-24(s0)
20013b0a:	fd842703          	lw	a4,-40(s0)
20013b0e:	87ba                	mv	a5,a4
20013b10:	0786                	slli	a5,a5,0x1
20013b12:	97ba                	add	a5,a5,a4
20013b14:	078e                	slli	a5,a5,0x3
20013b16:	97b6                	add	a5,a5,a3
20013b18:	20013737          	lui	a4,0x20013
20013b1c:	b3470713          	addi	a4,a4,-1228 # 20012b34 <__metal_default_timer_handler>
20013b20:	08e7a823          	sw	a4,144(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:652
            intc->metal_int_table[id].sub_int = priv;
20013b24:	fe842683          	lw	a3,-24(s0)
20013b28:	fd842703          	lw	a4,-40(s0)
20013b2c:	87ba                	mv	a5,a4
20013b2e:	0786                	slli	a5,a5,0x1
20013b30:	97ba                	add	a5,a5,a4
20013b32:	078e                	slli	a5,a5,0x3
20013b34:	97b6                	add	a5,a5,a3
20013b36:	fd042703          	lw	a4,-48(s0)
20013b3a:	08e7aa23          	sw	a4,148(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:653
	  break;
20013b3e:	a089                	j	20013b80 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:671
	case METAL_INTERRUPT_ID_LC11:
	case METAL_INTERRUPT_ID_LC12:
	case METAL_INTERRUPT_ID_LC13:
	case METAL_INTERRUPT_ID_LC14:
	case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler = __metal_default_interrupt_handler;
20013b40:	fe842683          	lw	a3,-24(s0)
20013b44:	fd842703          	lw	a4,-40(s0)
20013b48:	87ba                	mv	a5,a4
20013b4a:	0786                	slli	a5,a5,0x1
20013b4c:	97ba                	add	a5,a5,a4
20013b4e:	078e                	slli	a5,a5,0x3
20013b50:	97b6                	add	a5,a5,a3
20013b52:	20013737          	lui	a4,0x20013
20013b56:	96270713          	addi	a4,a4,-1694 # 20012962 <__metal_default_interrupt_handler>
20013b5a:	08e7a823          	sw	a4,144(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:672
            intc->metal_int_table[id].sub_int = priv;
20013b5e:	fe842683          	lw	a3,-24(s0)
20013b62:	fd842703          	lw	a4,-40(s0)
20013b66:	87ba                	mv	a5,a4
20013b68:	0786                	slli	a5,a5,0x1
20013b6a:	97ba                	add	a5,a5,a4
20013b6c:	078e                	slli	a5,a5,0x3
20013b6e:	97b6                	add	a5,a5,a3
20013b70:	fd042703          	lw	a4,-48(s0)
20013b74:	08e7aa23          	sw	a4,148(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:673
	  break;
20013b78:	a021                	j	20013b80 <__metal_driver_riscv_cpu_controller_interrupt_register+0x140>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:675
	default:
	  rc = -12;
20013b7a:	57d1                	li	a5,-12
20013b7c:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:678
	}
    }
    return rc;
20013b80:	fec42783          	lw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:679
}
20013b84:	853e                	mv	a0,a5
20013b86:	50b2                	lw	ra,44(sp)
20013b88:	5422                	lw	s0,40(sp)
20013b8a:	6145                	addi	sp,sp,48
20013b8c:	8082                	ret

20013b8e <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:683

int __metal_driver_riscv_cpu_controller_interrupt_enable (struct metal_interrupt *controller,
                                                        int id)
{
20013b8e:	1101                	addi	sp,sp,-32
20013b90:	ce06                	sw	ra,28(sp)
20013b92:	cc22                	sw	s0,24(sp)
20013b94:	1000                	addi	s0,sp,32
20013b96:	fea42623          	sw	a0,-20(s0)
20013b9a:	feb42423          	sw	a1,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:684
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20013b9e:	fe842783          	lw	a5,-24(s0)
20013ba2:	4605                	li	a2,1
20013ba4:	85be                	mv	a1,a5
20013ba6:	fec42503          	lw	a0,-20(s0)
20013baa:	31b9                	jal	200137f8 <__metal_local_interrupt_enable>
20013bac:	87aa                	mv	a5,a0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:685
}
20013bae:	853e                	mv	a0,a5
20013bb0:	40f2                	lw	ra,28(sp)
20013bb2:	4462                	lw	s0,24(sp)
20013bb4:	6105                	addi	sp,sp,32
20013bb6:	8082                	ret

20013bb8 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:689

int __metal_driver_riscv_cpu_controller_interrupt_disable (struct metal_interrupt *controller,
                                                         int id)
{   
20013bb8:	1101                	addi	sp,sp,-32
20013bba:	ce06                	sw	ra,28(sp)
20013bbc:	cc22                	sw	s0,24(sp)
20013bbe:	1000                	addi	s0,sp,32
20013bc0:	fea42623          	sw	a0,-20(s0)
20013bc4:	feb42423          	sw	a1,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:690
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20013bc8:	fe842783          	lw	a5,-24(s0)
20013bcc:	4601                	li	a2,0
20013bce:	85be                	mv	a1,a5
20013bd0:	fec42503          	lw	a0,-20(s0)
20013bd4:	c25ff0ef          	jal	ra,200137f8 <__metal_local_interrupt_enable>
20013bd8:	87aa                	mv	a5,a0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:691
}
20013bda:	853e                	mv	a0,a5
20013bdc:	40f2                	lw	ra,28(sp)
20013bde:	4462                	lw	s0,24(sp)
20013be0:	6105                	addi	sp,sp,32
20013be2:	8082                	ret

20013be4 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:722
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode (struct metal_interrupt *controller)
{   
20013be4:	1101                	addi	sp,sp,-32
20013be6:	ce06                	sw	ra,28(sp)
20013be8:	cc22                	sw	s0,24(sp)
20013bea:	1000                	addi	s0,sp,32
20013bec:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:723
    return __metal_controller_interrupt_vector_mode();
20013bf0:	ae9ff0ef          	jal	ra,200136d8 <__metal_controller_interrupt_vector_mode>
20013bf4:	87aa                	mv	a5,a0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:724
}
20013bf6:	853e                	mv	a0,a5
20013bf8:	40f2                	lw	ra,28(sp)
20013bfa:	4462                	lw	s0,24(sp)
20013bfc:	6105                	addi	sp,sp,32
20013bfe:	8082                	ret

20013c00 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:728

int __metal_driver_riscv_cpu_controller_set_vector_mode (struct metal_interrupt *controller,
                                                         metal_vector_mode mode)
{   
20013c00:	7179                	addi	sp,sp,-48
20013c02:	d606                	sw	ra,44(sp)
20013c04:	d422                	sw	s0,40(sp)
20013c06:	1800                	addi	s0,sp,48
20013c08:	fca42e23          	sw	a0,-36(s0)
20013c0c:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:729
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20013c10:	fdc42783          	lw	a5,-36(s0)
20013c14:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:731

    if (mode == METAL_DIRECT_MODE) {
20013c18:	fd842783          	lw	a5,-40(s0)
20013c1c:	eb99                	bnez	a5,20013c32 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x32>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:732
        __metal_controller_interrupt_vector(mode, (void *)(uintptr_t)&__metal_exception_handler);
20013c1e:	200137b7          	lui	a5,0x20013
20013c22:	c0078593          	addi	a1,a5,-1024 # 20012c00 <__metal_exception_handler>
20013c26:	fd842503          	lw	a0,-40(s0)
20013c2a:	affff0ef          	jal	ra,20013728 <__metal_controller_interrupt_vector>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:733
            return 0;
20013c2e:	4781                	li	a5,0
20013c30:	a00d                	j	20013c52 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x52>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:735
    }
    if (mode == METAL_VECTOR_MODE) {
20013c32:	fd842703          	lw	a4,-40(s0)
20013c36:	4785                	li	a5,1
20013c38:	00f71c63          	bne	a4,a5,20013c50 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x50>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:736
        __metal_controller_interrupt_vector(mode, (void *)__metal_vector_table);
20013c3c:	200167b7          	lui	a5,0x20016
20013c40:	38078593          	addi	a1,a5,896 # 20016380 <__metal_vector_table>
20013c44:	fd842503          	lw	a0,-40(s0)
20013c48:	ae1ff0ef          	jal	ra,20013728 <__metal_controller_interrupt_vector>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:737
        return 0;
20013c4c:	4781                	li	a5,0
20013c4e:	a011                	j	20013c52 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x52>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:739
    }
    return -1;
20013c50:	57fd                	li	a5,-1
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:740
}
20013c52:	853e                	mv	a0,a5
20013c54:	50b2                	lw	ra,44(sp)
20013c56:	5422                	lw	s0,40(sp)
20013c58:	6145                	addi	sp,sp,48
20013c5a:	8082                	ret

20013c5c <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:744

int __metal_driver_riscv_cpu_controller_command_request (struct metal_interrupt *controller,
						       int cmd, void *data)
{
20013c5c:	1101                	addi	sp,sp,-32
20013c5e:	ce22                	sw	s0,28(sp)
20013c60:	1000                	addi	s0,sp,32
20013c62:	fea42623          	sw	a0,-20(s0)
20013c66:	feb42423          	sw	a1,-24(s0)
20013c6a:	fec42223          	sw	a2,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:746
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic */
    return 0;
20013c6e:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:747
}
20013c70:	853e                	mv	a0,a5
20013c72:	4472                	lw	s0,28(sp)
20013c74:	6105                	addi	sp,sp,32
20013c76:	8082                	ret

20013c78 <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:752

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu)
{
20013c78:	7139                	addi	sp,sp,-64
20013c7a:	de22                	sw	s0,60(sp)
20013c7c:	0080                	addi	s0,sp,64
20013c7e:	fca42623          	sw	a0,-52(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:753
    unsigned long long val = 0;
20013c82:	4301                	li	t1,0
20013c84:	4381                	li	t2,0
20013c86:	fe642423          	sw	t1,-24(s0)
20013c8a:	fe742623          	sw	t2,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:758

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    __asm__ volatile ("csrr %0, mcycleh" : "=r"(hi));
20013c8e:	b8002573          	csrr	a0,mcycleh
20013c92:	fea42223          	sw	a0,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:759
    __asm__ volatile ("csrr %0, mcycle" : "=r"(lo));
20013c96:	b0002573          	csrr	a0,mcycle
20013c9a:	fea42023          	sw	a0,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:760
    __asm__ volatile ("csrr %0, mcycleh" : "=r"(hi1));
20013c9e:	b8002573          	csrr	a0,mcycleh
20013ca2:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:761
    if (hi == hi1) {
20013ca6:	fe442883          	lw	a7,-28(s0)
20013caa:	fdc42503          	lw	a0,-36(s0)
20013cae:	02a89563          	bne	a7,a0,20013cd8 <__metal_driver_cpu_mcycle_get+0x60>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:762
        val = ((unsigned long long)hi << 32) | lo;
20013cb2:	fe442503          	lw	a0,-28(s0)
20013cb6:	85aa                	mv	a1,a0
20013cb8:	4601                	li	a2,0
20013cba:	00059813          	slli	a6,a1,0x0
20013cbe:	4781                	li	a5,0
20013cc0:	fe042603          	lw	a2,-32(s0)
20013cc4:	86b2                	mv	a3,a2
20013cc6:	4701                	li	a4,0
20013cc8:	00d7e633          	or	a2,a5,a3
20013ccc:	fec42423          	sw	a2,-24(s0)
20013cd0:	00e867b3          	or	a5,a6,a4
20013cd4:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:768
    }
#else
    __asm__ volatile ("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20013cd8:	fe842783          	lw	a5,-24(s0)
20013cdc:	fec42803          	lw	a6,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:769
}
20013ce0:	853e                	mv	a0,a5
20013ce2:	85c2                	mv	a1,a6
20013ce4:	5472                	lw	s0,60(sp)
20013ce6:	6121                	addi	sp,sp,64
20013ce8:	8082                	ret

20013cea <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:772

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu)
{
20013cea:	7179                	addi	sp,sp,-48
20013cec:	d606                	sw	ra,44(sp)
20013cee:	d422                	sw	s0,40(sp)
20013cf0:	d24a                	sw	s2,36(sp)
20013cf2:	d04e                	sw	s3,32(sp)
20013cf4:	1800                	addi	s0,sp,48
20013cf6:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:774
  int timebase;
    if (!cpu) {
20013cfa:	fdc42783          	lw	a5,-36(s0)
20013cfe:	e781                	bnez	a5,20013d06 <__metal_driver_cpu_timebase_get+0x1c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:775
        return 0;
20013d00:	4901                	li	s2,0
20013d02:	4981                	li	s3,0
20013d04:	a821                	j	20013d1c <__metal_driver_cpu_timebase_get+0x32>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:778
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20013d06:	fdc42503          	lw	a0,-36(s0)
20013d0a:	a7ffe0ef          	jal	ra,20012788 <__metal_driver_cpu_timebase>
20013d0e:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:779
    return timebase;
20013d12:	fec42783          	lw	a5,-20(s0)
20013d16:	893e                	mv	s2,a5
20013d18:	87fd                	srai	a5,a5,0x1f
20013d1a:	89be                	mv	s3,a5
20013d1c:	87ca                	mv	a5,s2
20013d1e:	884e                	mv	a6,s3
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:780
}
20013d20:	853e                	mv	a0,a5
20013d22:	85c2                	mv	a1,a6
20013d24:	50b2                	lw	ra,44(sp)
20013d26:	5422                	lw	s0,40(sp)
20013d28:	5912                	lw	s2,36(sp)
20013d2a:	5982                	lw	s3,32(sp)
20013d2c:	6145                	addi	sp,sp,48
20013d2e:	8082                	ret

20013d30 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:783

unsigned long long  __metal_driver_cpu_mtime_get (struct metal_cpu *cpu)
{
20013d30:	7179                	addi	sp,sp,-48
20013d32:	d606                	sw	ra,44(sp)
20013d34:	d422                	sw	s0,40(sp)
20013d36:	1800                	addi	s0,sp,48
20013d38:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:784
    unsigned long long time = 0;
20013d3c:	4781                	li	a5,0
20013d3e:	4801                	li	a6,0
20013d40:	fef42023          	sw	a5,-32(s0)
20013d44:	ff042223          	sw	a6,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:787
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20013d48:	fdc42503          	lw	a0,-36(s0)
20013d4c:	a67fe0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
20013d50:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:789

    if (intc) {
20013d54:	fec42783          	lw	a5,-20(s0)
20013d58:	c78d                	beqz	a5,20013d82 <__metal_driver_cpu_mtime_get+0x52>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:790
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20013d5a:	fec42783          	lw	a5,-20(s0)
20013d5e:	13c7a783          	lw	a5,316(a5)
20013d62:	fef42423          	sw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:791
        if (tmr_intc) {
20013d66:	fe842783          	lw	a5,-24(s0)
20013d6a:	cf81                	beqz	a5,20013d82 <__metal_driver_cpu_mtime_get+0x52>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:792
            tmr_intc->vtable->command_request(tmr_intc,
20013d6c:	fe842783          	lw	a5,-24(s0)
20013d70:	439c                	lw	a5,0(a5)
20013d72:	43f8                	lw	a4,68(a5)
20013d74:	fe040793          	addi	a5,s0,-32
20013d78:	863e                	mv	a2,a5
20013d7a:	4585                	li	a1,1
20013d7c:	fe842503          	lw	a0,-24(s0)
20013d80:	9702                	jalr	a4
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:796
                                              METAL_TIMER_MTIME_GET, &time);
        }
    }
    return time;
20013d82:	fe042783          	lw	a5,-32(s0)
20013d86:	fe442803          	lw	a6,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:797
}
20013d8a:	853e                	mv	a0,a5
20013d8c:	85c2                	mv	a1,a6
20013d8e:	50b2                	lw	ra,44(sp)
20013d90:	5422                	lw	s0,40(sp)
20013d92:	6145                	addi	sp,sp,48
20013d94:	8082                	ret

20013d96 <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:800

int __metal_driver_cpu_mtimecmp_set (struct metal_cpu *cpu, unsigned long long time)
{
20013d96:	7179                	addi	sp,sp,-48
20013d98:	d606                	sw	ra,44(sp)
20013d9a:	d422                	sw	s0,40(sp)
20013d9c:	d226                	sw	s1,36(sp)
20013d9e:	1800                	addi	s0,sp,48
20013da0:	fca42e23          	sw	a0,-36(s0)
20013da4:	fcb42823          	sw	a1,-48(s0)
20013da8:	fcc42a23          	sw	a2,-44(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:801
    int rc = -1;
20013dac:	57fd                	li	a5,-1
20013dae:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:804
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20013db2:	fdc42503          	lw	a0,-36(s0)
20013db6:	9fdfe0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
20013dba:	fea42423          	sw	a0,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:806

    if (intc) {
20013dbe:	fe842783          	lw	a5,-24(s0)
20013dc2:	cf8d                	beqz	a5,20013dfc <__metal_driver_cpu_mtimecmp_set+0x66>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:807
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20013dc4:	fe842783          	lw	a5,-24(s0)
20013dc8:	13c7a783          	lw	a5,316(a5)
20013dcc:	fef42223          	sw	a5,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:808
        if (tmr_intc) {
20013dd0:	fe442783          	lw	a5,-28(s0)
20013dd4:	c785                	beqz	a5,20013dfc <__metal_driver_cpu_mtimecmp_set+0x66>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:809
            rc = tmr_intc->vtable->mtimecmp_set(tmr_intc,
20013dd6:	fe442783          	lw	a5,-28(s0)
20013dda:	439c                	lw	a5,0(a5)
20013ddc:	47a4                	lw	s1,72(a5)
20013dde:	fdc42503          	lw	a0,-36(s0)
20013de2:	983fe0ef          	jal	ra,20012764 <__metal_driver_cpu_hartid>
20013de6:	87aa                	mv	a5,a0
20013de8:	fd042603          	lw	a2,-48(s0)
20013dec:	fd442683          	lw	a3,-44(s0)
20013df0:	85be                	mv	a1,a5
20013df2:	fe442503          	lw	a0,-28(s0)
20013df6:	9482                	jalr	s1
20013df8:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:814
                                                __metal_driver_cpu_hartid(cpu),
                                                time);
        }
    }
    return rc;
20013dfc:	fec42783          	lw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:815
}
20013e00:	853e                	mv	a0,a5
20013e02:	50b2                	lw	ra,44(sp)
20013e04:	5422                	lw	s0,40(sp)
20013e06:	5492                	lw	s1,36(sp)
20013e08:	6145                	addi	sp,sp,48
20013e0a:	8082                	ret

20013e0c <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:819

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu)
{
20013e0c:	1101                	addi	sp,sp,-32
20013e0e:	ce22                	sw	s0,28(sp)
20013e10:	1000                	addi	s0,sp,32
20013e12:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:821
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20013e16:	800017b7          	lui	a5,0x80001
20013e1a:	a9478793          	addi	a5,a5,-1388 # 80000a94 <metal_segment_heap_target_end+0xfffff324>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:830
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20013e1e:	853e                	mv	a0,a5
20013e20:	4472                	lw	s0,28(sp)
20013e22:	6105                	addi	sp,sp,32
20013e24:	8082                	ret

20013e26 <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:833

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu)
{
20013e26:	1101                	addi	sp,sp,-32
20013e28:	ce22                	sw	s0,28(sp)
20013e2a:	1000                	addi	s0,sp,32
20013e2c:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:834
    return METAL_INTERRUPT_ID_TMR;
20013e30:	479d                	li	a5,7
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:835
}
20013e32:	853e                	mv	a0,a5
20013e34:	4472                	lw	s0,28(sp)
20013e36:	6105                	addi	sp,sp,32
20013e38:	8082                	ret

20013e3a <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:839

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu)
{
20013e3a:	1101                	addi	sp,sp,-32
20013e3c:	ce22                	sw	s0,28(sp)
20013e3e:	1000                	addi	s0,sp,32
20013e40:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:841
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20013e44:	800017b7          	lui	a5,0x80001
20013e48:	a9478793          	addi	a5,a5,-1388 # 80000a94 <metal_segment_heap_target_end+0xfffff324>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:850
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20013e4c:	853e                	mv	a0,a5
20013e4e:	4472                	lw	s0,28(sp)
20013e50:	6105                	addi	sp,sp,32
20013e52:	8082                	ret

20013e54 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:853

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu)
{
20013e54:	1101                	addi	sp,sp,-32
20013e56:	ce22                	sw	s0,28(sp)
20013e58:	1000                	addi	s0,sp,32
20013e5a:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:854
    return METAL_INTERRUPT_ID_SW;
20013e5e:	478d                	li	a5,3
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:855
}
20013e60:	853e                	mv	a0,a5
20013e62:	4472                	lw	s0,28(sp)
20013e64:	6105                	addi	sp,sp,32
20013e66:	8082                	ret

20013e68 <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:858

int __metal_driver_cpu_set_sw_ipi (struct metal_cpu *cpu, int hartid)
{
20013e68:	7179                	addi	sp,sp,-48
20013e6a:	d606                	sw	ra,44(sp)
20013e6c:	d422                	sw	s0,40(sp)
20013e6e:	1800                	addi	s0,sp,48
20013e70:	fca42e23          	sw	a0,-36(s0)
20013e74:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:859
    int rc = -1;
20013e78:	57fd                	li	a5,-1
20013e7a:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:862
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc = 
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20013e7e:	fdc42503          	lw	a0,-36(s0)
20013e82:	931fe0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
20013e86:	fea42423          	sw	a0,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:864

    if (intc) {
20013e8a:	fe842783          	lw	a5,-24(s0)
20013e8e:	c79d                	beqz	a5,20013ebc <__metal_driver_cpu_set_sw_ipi+0x54>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:865
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20013e90:	fe842783          	lw	a5,-24(s0)
20013e94:	0dc7a783          	lw	a5,220(a5)
20013e98:	fef42223          	sw	a5,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:866
        if (sw_intc) {
20013e9c:	fe442783          	lw	a5,-28(s0)
20013ea0:	cf91                	beqz	a5,20013ebc <__metal_driver_cpu_set_sw_ipi+0x54>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:867
            rc = sw_intc->vtable->command_request(sw_intc,
20013ea2:	fe442783          	lw	a5,-28(s0)
20013ea6:	439c                	lw	a5,0(a5)
20013ea8:	43f8                	lw	a4,68(a5)
20013eaa:	fd840793          	addi	a5,s0,-40
20013eae:	863e                	mv	a2,a5
20013eb0:	458d                	li	a1,3
20013eb2:	fe442503          	lw	a0,-28(s0)
20013eb6:	9702                	jalr	a4
20013eb8:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:871
                                                  METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20013ebc:	fec42783          	lw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:872
}
20013ec0:	853e                	mv	a0,a5
20013ec2:	50b2                	lw	ra,44(sp)
20013ec4:	5422                	lw	s0,40(sp)
20013ec6:	6145                	addi	sp,sp,48
20013ec8:	8082                	ret

20013eca <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:875

int __metal_driver_cpu_clear_sw_ipi (struct metal_cpu *cpu, int hartid)
{
20013eca:	7179                	addi	sp,sp,-48
20013ecc:	d606                	sw	ra,44(sp)
20013ece:	d422                	sw	s0,40(sp)
20013ed0:	1800                	addi	s0,sp,48
20013ed2:	fca42e23          	sw	a0,-36(s0)
20013ed6:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:876
    int rc = -1;
20013eda:	57fd                	li	a5,-1
20013edc:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:879
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20013ee0:	fdc42503          	lw	a0,-36(s0)
20013ee4:	8cffe0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
20013ee8:	fea42423          	sw	a0,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:881

    if (intc) {
20013eec:	fe842783          	lw	a5,-24(s0)
20013ef0:	c79d                	beqz	a5,20013f1e <__metal_driver_cpu_clear_sw_ipi+0x54>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:882
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20013ef2:	fe842783          	lw	a5,-24(s0)
20013ef6:	0dc7a783          	lw	a5,220(a5)
20013efa:	fef42223          	sw	a5,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:883
        if (sw_intc) {
20013efe:	fe442783          	lw	a5,-28(s0)
20013f02:	cf91                	beqz	a5,20013f1e <__metal_driver_cpu_clear_sw_ipi+0x54>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:884
            rc = sw_intc->vtable->command_request(sw_intc,
20013f04:	fe442783          	lw	a5,-28(s0)
20013f08:	439c                	lw	a5,0(a5)
20013f0a:	43f8                	lw	a4,68(a5)
20013f0c:	fd840793          	addi	a5,s0,-40
20013f10:	863e                	mv	a2,a5
20013f12:	4589                	li	a1,2
20013f14:	fe442503          	lw	a0,-28(s0)
20013f18:	9702                	jalr	a4
20013f1a:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:888
                                                  METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20013f1e:	fec42783          	lw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:889
}
20013f22:	853e                	mv	a0,a5
20013f24:	50b2                	lw	ra,44(sp)
20013f26:	5422                	lw	s0,40(sp)
20013f28:	6145                	addi	sp,sp,48
20013f2a:	8082                	ret

20013f2c <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:892

int __metal_driver_cpu_get_msip (struct metal_cpu *cpu, int hartid)
{
20013f2c:	7179                	addi	sp,sp,-48
20013f2e:	d606                	sw	ra,44(sp)
20013f30:	d422                	sw	s0,40(sp)
20013f32:	1800                	addi	s0,sp,48
20013f34:	fca42e23          	sw	a0,-36(s0)
20013f38:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:893
    int rc = 0;
20013f3c:	fe042623          	sw	zero,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:896
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20013f40:	fdc42503          	lw	a0,-36(s0)
20013f44:	86ffe0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
20013f48:	fea42423          	sw	a0,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:898

    if (intc) {
20013f4c:	fe842783          	lw	a5,-24(s0)
20013f50:	c79d                	beqz	a5,20013f7e <__metal_driver_cpu_get_msip+0x52>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:899
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20013f52:	fe842783          	lw	a5,-24(s0)
20013f56:	0dc7a783          	lw	a5,220(a5)
20013f5a:	fef42223          	sw	a5,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:900
        if (sw_intc) {
20013f5e:	fe442783          	lw	a5,-28(s0)
20013f62:	cf91                	beqz	a5,20013f7e <__metal_driver_cpu_get_msip+0x52>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:901
            rc = sw_intc->vtable->command_request(sw_intc,
20013f64:	fe442783          	lw	a5,-28(s0)
20013f68:	439c                	lw	a5,0(a5)
20013f6a:	43f8                	lw	a4,68(a5)
20013f6c:	fd840793          	addi	a5,s0,-40
20013f70:	863e                	mv	a2,a5
20013f72:	4591                	li	a1,4
20013f74:	fe442503          	lw	a0,-28(s0)
20013f78:	9702                	jalr	a4
20013f7a:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:905
                                                  METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20013f7e:	fec42783          	lw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:906
}
20013f82:	853e                	mv	a0,a5
20013f84:	50b2                	lw	ra,44(sp)
20013f86:	5422                	lw	s0,40(sp)
20013f88:	6145                	addi	sp,sp,48
20013f8a:	8082                	ret

20013f8c <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:910

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu)
{
20013f8c:	1101                	addi	sp,sp,-32
20013f8e:	ce06                	sw	ra,28(sp)
20013f90:	cc22                	sw	s0,24(sp)
20013f92:	1000                	addi	s0,sp,32
20013f94:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:911
    return __metal_driver_cpu_interrupt_controller(cpu);
20013f98:	fec42503          	lw	a0,-20(s0)
20013f9c:	817fe0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
20013fa0:	87aa                	mv	a5,a0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:912
}
20013fa2:	853e                	mv	a0,a5
20013fa4:	40f2                	lw	ra,28(sp)
20013fa6:	4462                	lw	s0,24(sp)
20013fa8:	6105                	addi	sp,sp,32
20013faa:	8082                	ret

20013fac <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:936
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
				        metal_exception_handler_t isr)
{
20013fac:	7179                	addi	sp,sp,-48
20013fae:	d606                	sw	ra,44(sp)
20013fb0:	d422                	sw	s0,40(sp)
20013fb2:	1800                	addi	s0,sp,48
20013fb4:	fca42e23          	sw	a0,-36(s0)
20013fb8:	fcb42c23          	sw	a1,-40(s0)
20013fbc:	fcc42a23          	sw	a2,-44(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:938
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)__metal_driver_cpu_interrupt_controller(cpu);
20013fc0:	fdc42503          	lw	a0,-36(s0)
20013fc4:	feefe0ef          	jal	ra,200127b2 <__metal_driver_cpu_interrupt_controller>
20013fc8:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:940

    if (intc) {
20013fcc:	fec42783          	lw	a5,-20(s0)
20013fd0:	cb99                	beqz	a5,20013fe6 <__metal_driver_cpu_exception_register+0x3a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:941
        return __metal_exception_register((struct metal_interrupt *)intc, ecode, isr);
20013fd2:	fd442603          	lw	a2,-44(s0)
20013fd6:	fd842583          	lw	a1,-40(s0)
20013fda:	fec42503          	lw	a0,-20(s0)
20013fde:	8d7ff0ef          	jal	ra,200138b4 <__metal_exception_register>
20013fe2:	87aa                	mv	a5,a0
20013fe4:	a011                	j	20013fe8 <__metal_driver_cpu_exception_register+0x3c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:943
    }
    return -1;
20013fe6:	57fd                	li	a5,-1
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:944
}
20013fe8:	853e                	mv	a0,a5
20013fea:	50b2                	lw	ra,44(sp)
20013fec:	5422                	lw	s0,40(sp)
20013fee:	6145                	addi	sp,sp,48
20013ff0:	8082                	ret

20013ff2 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:947

int  __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu, uintptr_t epc)
{
20013ff2:	1101                	addi	sp,sp,-32
20013ff4:	ce22                	sw	s0,28(sp)
20013ff6:	1000                	addi	s0,sp,32
20013ff8:	fea42623          	sw	a0,-20(s0)
20013ffc:	feb42423          	sw	a1,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:953
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short*)epc & METAL_INSN_LENGTH_MASK)
20014000:	fe842783          	lw	a5,-24(s0)
20014004:	0007d783          	lhu	a5,0(a5)
20014008:	0037f713          	andi	a4,a5,3
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:954
            == METAL_INSN_NOT_COMPRESSED) ? 4 : 2;
2001400c:	478d                	li	a5,3
2001400e:	00f71463          	bne	a4,a5,20014016 <__metal_driver_cpu_get_instruction_length+0x24>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:954 (discriminator 1)
20014012:	4791                	li	a5,4
20014014:	a011                	j	20014018 <__metal_driver_cpu_get_instruction_length+0x26>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:954 (discriminator 2)
20014016:	4789                	li	a5,2
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:955 (discriminator 5)
}
20014018:	853e                	mv	a0,a5
2001401a:	4472                	lw	s0,28(sp)
2001401c:	6105                	addi	sp,sp,32
2001401e:	8082                	ret

20014020 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:958

uintptr_t  __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu)
{
20014020:	7179                	addi	sp,sp,-48
20014022:	d622                	sw	s0,44(sp)
20014024:	1800                	addi	s0,sp,48
20014026:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:960
    uintptr_t mepc;
    __asm__ volatile ("csrr %0, mepc" : "=r"(mepc));
2001402a:	341027f3          	csrr	a5,mepc
2001402e:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:961
    return mepc;
20014032:	fec42783          	lw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:962
}
20014036:	853e                	mv	a0,a5
20014038:	5432                	lw	s0,44(sp)
2001403a:	6145                	addi	sp,sp,48
2001403c:	8082                	ret

2001403e <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:965

int  __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc)
{
2001403e:	1101                	addi	sp,sp,-32
20014040:	ce22                	sw	s0,28(sp)
20014042:	1000                	addi	s0,sp,32
20014044:	fea42623          	sw	a0,-20(s0)
20014048:	feb42423          	sw	a1,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:966
    __asm__ volatile ("csrw mepc, %0" :: "r"(mepc));
2001404c:	fe842783          	lw	a5,-24(s0)
20014050:	34179073          	csrw	mepc,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:967
    return 0;
20014054:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_cpu.c:968
}
20014056:	853e                	mv	a0,a5
20014058:	4472                	lw	s0,28(sp)
2001405a:	6105                	addi	sp,sp,32
2001405c:	8082                	ret

2001405e <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:305



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
2001405e:	1101                	addi	sp,sp,-32
20014060:	ce22                	sw	s0,28(sp)
20014062:	1000                	addi	s0,sp,32
20014064:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:306
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20014068:	fec42703          	lw	a4,-20(s0)
2001406c:	800007b7          	lui	a5,0x80000
20014070:	44878793          	addi	a5,a5,1096 # 80000448 <metal_segment_heap_target_end+0xffffecd8>
20014074:	00f71563          	bne	a4,a5,2001407e <__metal_driver_sifive_plic0_control_base+0x20>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:307
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
20014078:	0c0007b7          	lui	a5,0xc000
2001407c:	a011                	j	20014080 <__metal_driver_sifive_plic0_control_base+0x22>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:310
	}
	else {
		return 0;
2001407e:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:312
	}
}
20014080:	853e                	mv	a0,a5
20014082:	4472                	lw	s0,28(sp)
20014084:	6105                	addi	sp,sp,32
20014086:	8082                	ret

20014088 <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:325
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
20014088:	1101                	addi	sp,sp,-32
2001408a:	ce22                	sw	s0,28(sp)
2001408c:	1000                	addi	s0,sp,32
2001408e:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:326
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20014092:	fec42703          	lw	a4,-20(s0)
20014096:	800007b7          	lui	a5,0x80000
2001409a:	44878793          	addi	a5,a5,1096 # 80000448 <metal_segment_heap_target_end+0xffffecd8>
2001409e:	00f71563          	bne	a4,a5,200140a8 <__metal_driver_sifive_plic0_num_interrupts+0x20>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:327
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
200140a2:	03500793          	li	a5,53
200140a6:	a011                	j	200140aa <__metal_driver_sifive_plic0_num_interrupts+0x22>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:330
	}
	else {
		return 0;
200140a8:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:332
	}
}
200140aa:	853e                	mv	a0,a5
200140ac:	4472                	lw	s0,28(sp)
200140ae:	6105                	addi	sp,sp,32
200140b0:	8082                	ret

200140b2 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:335

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
200140b2:	1101                	addi	sp,sp,-32
200140b4:	ce22                	sw	s0,28(sp)
200140b6:	1000                	addi	s0,sp,32
200140b8:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:336
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200140bc:	fec42703          	lw	a4,-20(s0)
200140c0:	800007b7          	lui	a5,0x80000
200140c4:	44878793          	addi	a5,a5,1096 # 80000448 <metal_segment_heap_target_end+0xffffecd8>
200140c8:	00f71463          	bne	a4,a5,200140d0 <__metal_driver_sifive_plic0_max_priority+0x1e>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:337
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
200140cc:	479d                	li	a5,7
200140ce:	a011                	j	200140d2 <__metal_driver_sifive_plic0_max_priority+0x20>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:340
	}
	else {
		return 0;
200140d0:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:342
	}
}
200140d2:	853e                	mv	a0,a5
200140d4:	4472                	lw	s0,28(sp)
200140d6:	6105                	addi	sp,sp,32
200140d8:	8082                	ret

200140da <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:345

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
200140da:	1101                	addi	sp,sp,-32
200140dc:	ce22                	sw	s0,28(sp)
200140de:	1000                	addi	s0,sp,32
200140e0:	fea42623          	sw	a0,-20(s0)
200140e4:	feb42423          	sw	a1,-24(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:346
	if (idx == 0) {
200140e8:	fe842783          	lw	a5,-24(s0)
200140ec:	e791                	bnez	a5,200140f8 <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:347
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
200140ee:	800007b7          	lui	a5,0x80000
200140f2:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe920>
200140f6:	a011                	j	200140fa <__metal_driver_sifive_plic0_interrupt_parents+0x20>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:350
	}
	else {
		return NULL;
200140f8:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:352
	}
}
200140fa:	853e                	mv	a0,a5
200140fc:	4472                	lw	s0,28(sp)
200140fe:	6105                	addi	sp,sp,32
20014100:	8082                	ret

20014102 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:355

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20014102:	1101                	addi	sp,sp,-32
20014104:	ce22                	sw	s0,28(sp)
20014106:	1000                	addi	s0,sp,32
20014108:	fea42623          	sw	a0,-20(s0)
2001410c:	feb42423          	sw	a1,-24(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:356
	if (idx == 0) {
20014110:	fe842783          	lw	a5,-24(s0)
20014114:	e399                	bnez	a5,2001411a <__metal_driver_sifive_plic0_interrupt_lines+0x18>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:357
		return 11;
20014116:	47ad                	li	a5,11
20014118:	a011                	j	2001411c <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:360
	}
	else {
		return 0;
2001411a:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:362
	}
}
2001411c:	853e                	mv	a0,a5
2001411e:	4472                	lw	s0,28(sp)
20014120:	6105                	addi	sp,sp,32
20014122:	8082                	ret

20014124 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:14
#include <metal/shutdown.h>
#include <metal/drivers/riscv_plic0.h>
#include <metal/machine.h>

unsigned int __metal_plic0_claim_interrupt (struct __metal_driver_riscv_plic0 *plic)
{
20014124:	7179                	addi	sp,sp,-48
20014126:	d606                	sw	ra,44(sp)
20014128:	d422                	sw	s0,40(sp)
2001412a:	1800                	addi	s0,sp,48
2001412c:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:15
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
20014130:	fdc42503          	lw	a0,-36(s0)
20014134:	372d                	jal	2001405e <__metal_driver_sifive_plic0_control_base>
20014136:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:16
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2001413a:	fec42703          	lw	a4,-20(s0)
2001413e:	002007b7          	lui	a5,0x200
20014142:	0791                	addi	a5,a5,4
20014144:	97ba                	add	a5,a5,a4
20014146:	439c                	lw	a5,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:18
					      METAL_RISCV_PLIC0_CLAIM));
}
20014148:	853e                	mv	a0,a5
2001414a:	50b2                	lw	ra,44(sp)
2001414c:	5422                	lw	s0,40(sp)
2001414e:	6145                	addi	sp,sp,48
20014150:	8082                	ret

20014152 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:22

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
				    unsigned int id)
{
20014152:	7179                	addi	sp,sp,-48
20014154:	d606                	sw	ra,44(sp)
20014156:	d422                	sw	s0,40(sp)
20014158:	1800                	addi	s0,sp,48
2001415a:	fca42e23          	sw	a0,-36(s0)
2001415e:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:23
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
20014162:	fdc42503          	lw	a0,-36(s0)
20014166:	3de5                	jal	2001405e <__metal_driver_sifive_plic0_control_base>
20014168:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:24
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2001416c:	fec42703          	lw	a4,-20(s0)
20014170:	002007b7          	lui	a5,0x200
20014174:	0791                	addi	a5,a5,4
20014176:	97ba                	add	a5,a5,a4
20014178:	873e                	mv	a4,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:25
				       METAL_RISCV_PLIC0_CLAIM)) = id;
2001417a:	fd842783          	lw	a5,-40(s0)
2001417e:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:26
}
20014180:	0001                	nop
20014182:	50b2                	lw	ra,44(sp)
20014184:	5422                	lw	s0,40(sp)
20014186:	6145                	addi	sp,sp,48
20014188:	8082                	ret

2001418a <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:29

int __metal_plic0_set_threshold(struct metal_interrupt *controller, unsigned int threshold)
{
2001418a:	7179                	addi	sp,sp,-48
2001418c:	d606                	sw	ra,44(sp)
2001418e:	d422                	sw	s0,40(sp)
20014190:	1800                	addi	s0,sp,48
20014192:	fca42e23          	sw	a0,-36(s0)
20014196:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:30
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
2001419a:	fdc42503          	lw	a0,-36(s0)
2001419e:	35c1                	jal	2001405e <__metal_driver_sifive_plic0_control_base>
200141a0:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:31
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
200141a4:	fec42703          	lw	a4,-20(s0)
200141a8:	002007b7          	lui	a5,0x200
200141ac:	97ba                	add	a5,a5,a4
200141ae:	873e                	mv	a4,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:32
				       METAL_RISCV_PLIC0_THRESHOLD)) = threshold;
200141b0:	fd842783          	lw	a5,-40(s0)
200141b4:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:33
    return 0;
200141b6:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:34
}
200141b8:	853e                	mv	a0,a5
200141ba:	50b2                	lw	ra,44(sp)
200141bc:	5422                	lw	s0,40(sp)
200141be:	6145                	addi	sp,sp,48
200141c0:	8082                	ret

200141c2 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:37

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller)
{
200141c2:	7179                	addi	sp,sp,-48
200141c4:	d606                	sw	ra,44(sp)
200141c6:	d422                	sw	s0,40(sp)
200141c8:	1800                	addi	s0,sp,48
200141ca:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:38
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
200141ce:	fdc42503          	lw	a0,-36(s0)
200141d2:	3571                	jal	2001405e <__metal_driver_sifive_plic0_control_base>
200141d4:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:40

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
200141d8:	fec42703          	lw	a4,-20(s0)
200141dc:	002007b7          	lui	a5,0x200
200141e0:	97ba                	add	a5,a5,a4
200141e2:	439c                	lw	a5,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:42
				       METAL_RISCV_PLIC0_THRESHOLD));
}
200141e4:	853e                	mv	a0,a5
200141e6:	50b2                	lw	ra,44(sp)
200141e8:	5422                	lw	s0,40(sp)
200141ea:	6145                	addi	sp,sp,48
200141ec:	8082                	ret

200141ee <__metal_plic0_set_priority>:
__metal_plic0_set_priority():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:45

int __metal_plic0_set_priority(struct metal_interrupt *controller, int id, unsigned int priority)
{
200141ee:	7179                	addi	sp,sp,-48
200141f0:	d606                	sw	ra,44(sp)
200141f2:	d422                	sw	s0,40(sp)
200141f4:	1800                	addi	s0,sp,48
200141f6:	fca42e23          	sw	a0,-36(s0)
200141fa:	fcb42c23          	sw	a1,-40(s0)
200141fe:	fcc42a23          	sw	a2,-44(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:46
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)controller);
20014202:	fdc42503          	lw	a0,-36(s0)
20014206:	3da1                	jal	2001405e <__metal_driver_sifive_plic0_control_base>
20014208:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:47
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority((struct metal_interrupt *)controller);
2001420c:	fdc42503          	lw	a0,-36(s0)
20014210:	354d                	jal	200140b2 <__metal_driver_sifive_plic0_max_priority>
20014212:	87aa                	mv	a5,a0
20014214:	fef42423          	sw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:48
    if ( (max_priority) && (priority < max_priority) ) {
20014218:	fe842783          	lw	a5,-24(s0)
2001421c:	c785                	beqz	a5,20014244 <__metal_plic0_set_priority+0x56>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:48 (discriminator 1)
2001421e:	fd442703          	lw	a4,-44(s0)
20014222:	fe842783          	lw	a5,-24(s0)
20014226:	00f77f63          	bgeu	a4,a5,20014244 <__metal_plic0_set_priority+0x56>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:49
        __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2001422a:	fd842783          	lw	a5,-40(s0)
2001422e:	078a                	slli	a5,a5,0x2
20014230:	873e                	mv	a4,a5
20014232:	fec42783          	lw	a5,-20(s0)
20014236:	97ba                	add	a5,a5,a4
20014238:	873e                	mv	a4,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:51
					   METAL_RISCV_PLIC0_PRIORITY_BASE +
					   (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) = priority;
2001423a:	fd442783          	lw	a5,-44(s0)
2001423e:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:52
        return 0;
20014240:	4781                	li	a5,0
20014242:	a011                	j	20014246 <__metal_plic0_set_priority+0x58>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:54
    }
    return -1;
20014244:	57fd                	li	a5,-1
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:55
}
20014246:	853e                	mv	a0,a5
20014248:	50b2                	lw	ra,44(sp)
2001424a:	5422                	lw	s0,40(sp)
2001424c:	6145                	addi	sp,sp,48
2001424e:	8082                	ret

20014250 <__metal_plic0_get_priority>:
__metal_plic0_get_priority():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:58

unsigned int __metal_plic0_get_priority(struct metal_interrupt *controller, int id)
{
20014250:	7179                	addi	sp,sp,-48
20014252:	d606                	sw	ra,44(sp)
20014254:	d422                	sw	s0,40(sp)
20014256:	1800                	addi	s0,sp,48
20014258:	fca42e23          	sw	a0,-36(s0)
2001425c:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:59
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(controller);
20014260:	fdc42503          	lw	a0,-36(s0)
20014264:	3bed                	jal	2001405e <__metal_driver_sifive_plic0_control_base>
20014266:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:61

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2001426a:	fd842783          	lw	a5,-40(s0)
2001426e:	078a                	slli	a5,a5,0x2
20014270:	873e                	mv	a4,a5
20014272:	fec42783          	lw	a5,-20(s0)
20014276:	97ba                	add	a5,a5,a4
20014278:	439c                	lw	a5,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:64
					   METAL_RISCV_PLIC0_PRIORITY_BASE +
					   (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
2001427a:	853e                	mv	a0,a5
2001427c:	50b2                	lw	ra,44(sp)
2001427e:	5422                	lw	s0,40(sp)
20014280:	6145                	addi	sp,sp,48
20014282:	8082                	ret

20014284 <__metal_plic0_enable>:
__metal_plic0_enable():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:67

void __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic, int id, int enable)
{
20014284:	7179                	addi	sp,sp,-48
20014286:	d606                	sw	ra,44(sp)
20014288:	d422                	sw	s0,40(sp)
2001428a:	1800                	addi	s0,sp,48
2001428c:	fca42e23          	sw	a0,-36(s0)
20014290:	fcb42c23          	sw	a1,-40(s0)
20014294:	fcc42a23          	sw	a2,-44(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:69
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base((struct metal_interrupt *)plic);
20014298:	fdc42503          	lw	a0,-36(s0)
2001429c:	33c9                	jal	2001405e <__metal_driver_sifive_plic0_control_base>
2001429e:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:71

    current = __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
200142a2:	fd842783          	lw	a5,-40(s0)
200142a6:	8795                	srai	a5,a5,0x5
200142a8:	078a                	slli	a5,a5,0x2
200142aa:	873e                	mv	a4,a5
200142ac:	fec42783          	lw	a5,-20(s0)
200142b0:	973e                	add	a4,a4,a5
200142b2:	6789                	lui	a5,0x2
200142b4:	97ba                	add	a5,a5,a4
200142b6:	439c                	lw	a5,0(a5)
200142b8:	fef42423          	sw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:78
						(id >> METAL_PLIC_SOURCE_SHIFT) * 4));
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
					METAL_RISCV_PLIC0_ENABLE_BASE +
					((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
              enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
                     : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
200142bc:	fd442783          	lw	a5,-44(s0)
200142c0:	cf81                	beqz	a5,200142d8 <__metal_plic0_enable+0x54>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:77 (discriminator 1)
              enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
200142c2:	fd842783          	lw	a5,-40(s0)
200142c6:	8bfd                	andi	a5,a5,31
200142c8:	4705                	li	a4,1
200142ca:	00f717b3          	sll	a5,a4,a5
200142ce:	873e                	mv	a4,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:78 (discriminator 1)
                     : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
200142d0:	fe842783          	lw	a5,-24(s0)
200142d4:	8fd9                	or	a5,a5,a4
200142d6:	a829                	j	200142f0 <__metal_plic0_enable+0x6c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:78 (discriminator 2)
200142d8:	fd842783          	lw	a5,-40(s0)
200142dc:	8bfd                	andi	a5,a5,31
200142de:	4705                	li	a4,1
200142e0:	00f717b3          	sll	a5,a4,a5
200142e4:	fff7c793          	not	a5,a5
200142e8:	873e                	mv	a4,a5
200142ea:	fe842783          	lw	a5,-24(s0)
200142ee:	8ff9                	and	a5,a5,a4
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:74
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
200142f0:	fd842703          	lw	a4,-40(s0)
200142f4:	8715                	srai	a4,a4,0x5
200142f6:	070a                	slli	a4,a4,0x2
200142f8:	86ba                	mv	a3,a4
200142fa:	fec42703          	lw	a4,-20(s0)
200142fe:	96ba                	add	a3,a3,a4
20014300:	6709                	lui	a4,0x2
20014302:	9736                	add	a4,a4,a3
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:76
					((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20014304:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:79
}
20014306:	0001                	nop
20014308:	50b2                	lw	ra,44(sp)
2001430a:	5422                	lw	s0,40(sp)
2001430c:	6145                	addi	sp,sp,48
2001430e:	8082                	ret

20014310 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:81

void __metal_plic0_default_handler (int id, void *priv) {
20014310:	1101                	addi	sp,sp,-32
20014312:	ce06                	sw	ra,28(sp)
20014314:	cc22                	sw	s0,24(sp)
20014316:	1000                	addi	s0,sp,32
20014318:	fea42623          	sw	a0,-20(s0)
2001431c:	feb42423          	sw	a1,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:82
    metal_shutdown(300);
20014320:	12c00513          	li	a0,300
20014324:	62d010ef          	jal	ra,20016150 <metal_shutdown>

20014328 <__metal_plic0_handler>:
__metal_plic0_handler():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:86
}

void __metal_plic0_handler (int id, void *priv)
{
20014328:	7179                	addi	sp,sp,-48
2001432a:	d606                	sw	ra,44(sp)
2001432c:	d422                	sw	s0,40(sp)
2001432e:	1800                	addi	s0,sp,48
20014330:	fca42e23          	sw	a0,-36(s0)
20014334:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:87
    struct __metal_driver_riscv_plic0 *plic = priv;
20014338:	fd842783          	lw	a5,-40(s0)
2001433c:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int idx = __metal_plic0_claim_interrupt(plic);
20014340:	fec42503          	lw	a0,-20(s0)
20014344:	33c5                	jal	20014124 <__metal_plic0_claim_interrupt>
20014346:	fea42423          	sw	a0,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:89
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts((struct metal_interrupt *)plic);
2001434a:	fec42503          	lw	a0,-20(s0)
2001434e:	3b2d                	jal	20014088 <__metal_driver_sifive_plic0_num_interrupts>
20014350:	87aa                	mv	a5,a0
20014352:	fef42223          	sw	a5,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:91

    if ( (idx < num_interrupts) && (plic->metal_exint_table[idx]) ) {
20014356:	fe842703          	lw	a4,-24(s0)
2001435a:	fe442783          	lw	a5,-28(s0)
2001435e:	04f77263          	bgeu	a4,a5,200143a2 <__metal_plic0_handler+0x7a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:91 (discriminator 1)
20014362:	fec42703          	lw	a4,-20(s0)
20014366:	fe842783          	lw	a5,-24(s0)
2001436a:	078a                	slli	a5,a5,0x2
2001436c:	97ba                	add	a5,a5,a4
2001436e:	479c                	lw	a5,8(a5)
20014370:	cb8d                	beqz	a5,200143a2 <__metal_plic0_handler+0x7a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:92
	plic->metal_exint_table[idx](idx,
20014372:	fec42703          	lw	a4,-20(s0)
20014376:	fe842783          	lw	a5,-24(s0)
2001437a:	078a                	slli	a5,a5,0x2
2001437c:	97ba                	add	a5,a5,a4
2001437e:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20014382:	fe842603          	lw	a2,-24(s0)
20014386:	fec42683          	lw	a3,-20(s0)
2001438a:	fe842703          	lw	a4,-24(s0)
2001438e:	87ba                	mv	a5,a4
20014390:	0786                	slli	a5,a5,0x1
20014392:	97ba                	add	a5,a5,a4
20014394:	078e                	slli	a5,a5,0x3
20014396:	97b6                	add	a5,a5,a3
20014398:	0f07a783          	lw	a5,240(a5)
2001439c:	85be                	mv	a1,a5
2001439e:	8532                	mv	a0,a2
200143a0:	9802                	jalr	a6
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:96
				  plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, idx);
200143a2:	fe842583          	lw	a1,-24(s0)
200143a6:	fec42503          	lw	a0,-20(s0)
200143aa:	3365                	jal	20014152 <__metal_plic0_complete_interrupt>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:97
}
200143ac:	0001                	nop
200143ae:	50b2                	lw	ra,44(sp)
200143b0:	5422                	lw	s0,40(sp)
200143b2:	6145                	addi	sp,sp,48
200143b4:	8082                	ret

200143b6 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:100

void __metal_driver_riscv_plic0_init (struct metal_interrupt *controller)
{
200143b6:	7139                	addi	sp,sp,-64
200143b8:	de06                	sw	ra,60(sp)
200143ba:	dc22                	sw	s0,56(sp)
200143bc:	0080                	addi	s0,sp,64
200143be:	fca42623          	sw	a0,-52(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:101
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
200143c2:	fcc42783          	lw	a5,-52(s0)
200143c6:	fef42223          	sw	a5,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:103

    if ( !plic->init_done ) {
200143ca:	fe442783          	lw	a5,-28(s0)
200143ce:	43dc                	lw	a5,4(a5)
200143d0:	10079d63          	bnez	a5,200144ea <__metal_driver_riscv_plic0_init+0x134>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:107
        int num_interrupts, line;
        struct metal_interrupt *intc;

	for(int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
200143d4:	fe042623          	sw	zero,-20(s0)
200143d8:	a209                	j	200144da <__metal_driver_riscv_plic0_init+0x124>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:108
	    num_interrupts = __metal_driver_sifive_plic0_num_interrupts(controller);
200143da:	fcc42503          	lw	a0,-52(s0)
200143de:	cabff0ef          	jal	ra,20014088 <__metal_driver_sifive_plic0_num_interrupts>
200143e2:	fea42023          	sw	a0,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:109
	    intc = __metal_driver_sifive_plic0_interrupt_parents(controller, parent);
200143e6:	fec42583          	lw	a1,-20(s0)
200143ea:	fcc42503          	lw	a0,-52(s0)
200143ee:	31f5                	jal	200140da <__metal_driver_sifive_plic0_interrupt_parents>
200143f0:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:110
	    line = __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
200143f4:	fec42583          	lw	a1,-20(s0)
200143f8:	fcc42503          	lw	a0,-52(s0)
200143fc:	3319                	jal	20014102 <__metal_driver_sifive_plic0_interrupt_lines>
200143fe:	fca42c23          	sw	a0,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:113

	    /* Initialize ist parent controller, aka cpu_intc. */
	    intc->vtable->interrupt_init(intc);
20014402:	fdc42783          	lw	a5,-36(s0)
20014406:	439c                	lw	a5,0(a5)
20014408:	439c                	lw	a5,0(a5)
2001440a:	fdc42503          	lw	a0,-36(s0)
2001440e:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:115

	    for (int i = 0; i < num_interrupts; i++) {
20014410:	fe042423          	sw	zero,-24(s0)
20014414:	a085                	j	20014474 <__metal_driver_riscv_plic0_init+0xbe>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:116 (discriminator 3)
		__metal_plic0_enable(plic, i, METAL_DISABLE);
20014416:	4601                	li	a2,0
20014418:	fe842583          	lw	a1,-24(s0)
2001441c:	fe442503          	lw	a0,-28(s0)
20014420:	3595                	jal	20014284 <__metal_plic0_enable>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:117 (discriminator 3)
		__metal_plic0_set_priority(controller, i, 0);
20014422:	4601                	li	a2,0
20014424:	fe842583          	lw	a1,-24(s0)
20014428:	fcc42503          	lw	a0,-52(s0)
2001442c:	33c9                	jal	200141ee <__metal_plic0_set_priority>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:118 (discriminator 3)
		plic->metal_exint_table[i] = NULL;
2001442e:	fe442703          	lw	a4,-28(s0)
20014432:	fe842783          	lw	a5,-24(s0)
20014436:	078a                	slli	a5,a5,0x2
20014438:	97ba                	add	a5,a5,a4
2001443a:	0007a423          	sw	zero,8(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:119 (discriminator 3)
		plic->metal_exdata_table[i].sub_int = NULL;
2001443e:	fe442683          	lw	a3,-28(s0)
20014442:	fe842703          	lw	a4,-24(s0)
20014446:	87ba                	mv	a5,a4
20014448:	0786                	slli	a5,a5,0x1
2001444a:	97ba                	add	a5,a5,a4
2001444c:	078e                	slli	a5,a5,0x3
2001444e:	97b6                	add	a5,a5,a3
20014450:	0e07a623          	sw	zero,236(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:120 (discriminator 3)
		plic->metal_exdata_table[i].exint_data = NULL;
20014454:	fe442683          	lw	a3,-28(s0)
20014458:	fe842703          	lw	a4,-24(s0)
2001445c:	87ba                	mv	a5,a4
2001445e:	0786                	slli	a5,a5,0x1
20014460:	97ba                	add	a5,a5,a4
20014462:	078e                	slli	a5,a5,0x3
20014464:	97b6                	add	a5,a5,a3
20014466:	0e07a823          	sw	zero,240(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 3)
	    for (int i = 0; i < num_interrupts; i++) {
2001446a:	fe842783          	lw	a5,-24(s0)
2001446e:	0785                	addi	a5,a5,1
20014470:	fef42423          	sw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20014474:	fe842703          	lw	a4,-24(s0)
20014478:	fe042783          	lw	a5,-32(s0)
2001447c:	f8f74de3          	blt	a4,a5,20014416 <__metal_driver_riscv_plic0_init+0x60>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:123 (discriminator 2)
	    }

	    __metal_plic0_set_threshold(controller, 0);
20014480:	4581                	li	a1,0
20014482:	fcc42503          	lw	a0,-52(s0)
20014486:	3311                	jal	2001418a <__metal_plic0_set_threshold>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:126 (discriminator 2)

	    /* Register plic (ext) interrupt with with parent controller */
	    intc->vtable->interrupt_register(intc, line, NULL, plic);
20014488:	fdc42783          	lw	a5,-36(s0)
2001448c:	439c                	lw	a5,0(a5)
2001448e:	4fdc                	lw	a5,28(a5)
20014490:	fe442683          	lw	a3,-28(s0)
20014494:	4601                	li	a2,0
20014496:	fd842583          	lw	a1,-40(s0)
2001449a:	fdc42503          	lw	a0,-36(s0)
2001449e:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:128 (discriminator 2)
	    /* Register plic handler for dispatching its device interrupts */
	    intc->vtable->interrupt_register(intc, line, __metal_plic0_handler, plic);
200144a0:	fdc42783          	lw	a5,-36(s0)
200144a4:	439c                	lw	a5,0(a5)
200144a6:	4fd8                	lw	a4,28(a5)
200144a8:	fe442683          	lw	a3,-28(s0)
200144ac:	200147b7          	lui	a5,0x20014
200144b0:	32878613          	addi	a2,a5,808 # 20014328 <__metal_plic0_handler>
200144b4:	fd842583          	lw	a1,-40(s0)
200144b8:	fdc42503          	lw	a0,-36(s0)
200144bc:	9702                	jalr	a4
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
	    /* Enable plic (ext) interrupt with with parent controller */
	    intc->vtable->interrupt_enable(intc, line);
200144be:	fdc42783          	lw	a5,-36(s0)
200144c2:	439c                	lw	a5,0(a5)
200144c4:	53dc                	lw	a5,36(a5)
200144c6:	fd842583          	lw	a1,-40(s0)
200144ca:	fdc42503          	lw	a0,-36(s0)
200144ce:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:107 (discriminator 2)
	for(int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
200144d0:	fec42783          	lw	a5,-20(s0)
200144d4:	0785                	addi	a5,a5,1
200144d6:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:107 (discriminator 1)
200144da:	fec42783          	lw	a5,-20(s0)
200144de:	eef05ee3          	blez	a5,200143da <__metal_driver_riscv_plic0_init+0x24>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:132
	}
        plic->init_done = 1;
200144e2:	fe442783          	lw	a5,-28(s0)
200144e6:	4705                	li	a4,1
200144e8:	c3d8                	sw	a4,4(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:134
    }
}
200144ea:	0001                	nop
200144ec:	50f2                	lw	ra,60(sp)
200144ee:	5462                	lw	s0,56(sp)
200144f0:	6121                	addi	sp,sp,64
200144f2:	8082                	ret

200144f4 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:139

int __metal_driver_riscv_plic0_register (struct metal_interrupt *controller,
			               int id, metal_interrupt_handler_t isr,
			               void *priv)
{
200144f4:	7179                	addi	sp,sp,-48
200144f6:	d606                	sw	ra,44(sp)
200144f8:	d422                	sw	s0,40(sp)
200144fa:	1800                	addi	s0,sp,48
200144fc:	fca42e23          	sw	a0,-36(s0)
20014500:	fcb42c23          	sw	a1,-40(s0)
20014504:	fcc42a23          	sw	a2,-44(s0)
20014508:	fcd42823          	sw	a3,-48(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:140
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2001450c:	fdc42783          	lw	a5,-36(s0)
20014510:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:142

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014514:	fdc42503          	lw	a0,-36(s0)
20014518:	b71ff0ef          	jal	ra,20014088 <__metal_driver_sifive_plic0_num_interrupts>
2001451c:	872a                	mv	a4,a0
2001451e:	fd842783          	lw	a5,-40(s0)
20014522:	00e7c463          	blt	a5,a4,2001452a <__metal_driver_riscv_plic0_register+0x36>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:143
        return -1;
20014526:	57fd                	li	a5,-1
20014528:	a051                	j	200145ac <__metal_driver_riscv_plic0_register+0xb8>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:146
    }
 
    if (isr) {
2001452a:	fd442783          	lw	a5,-44(s0)
2001452e:	cf9d                	beqz	a5,2001456c <__metal_driver_riscv_plic0_register+0x78>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:147
        __metal_plic0_set_priority(controller, id, 2);
20014530:	4609                	li	a2,2
20014532:	fd842583          	lw	a1,-40(s0)
20014536:	fdc42503          	lw	a0,-36(s0)
2001453a:	cb5ff0ef          	jal	ra,200141ee <__metal_plic0_set_priority>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:148
	plic->metal_exint_table[id] = isr;
2001453e:	fec42703          	lw	a4,-20(s0)
20014542:	fd842783          	lw	a5,-40(s0)
20014546:	078a                	slli	a5,a5,0x2
20014548:	97ba                	add	a5,a5,a4
2001454a:	fd442703          	lw	a4,-44(s0)
2001454e:	c798                	sw	a4,8(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:149
	plic->metal_exdata_table[id].exint_data = priv;
20014550:	fec42683          	lw	a3,-20(s0)
20014554:	fd842703          	lw	a4,-40(s0)
20014558:	87ba                	mv	a5,a4
2001455a:	0786                	slli	a5,a5,0x1
2001455c:	97ba                	add	a5,a5,a4
2001455e:	078e                	slli	a5,a5,0x3
20014560:	97b6                	add	a5,a5,a3
20014562:	fd042703          	lw	a4,-48(s0)
20014566:	0ee7a823          	sw	a4,240(a5)
2001456a:	a081                	j	200145aa <__metal_driver_riscv_plic0_register+0xb6>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:151
    } else {
        __metal_plic0_set_priority(controller, id, 1);
2001456c:	4605                	li	a2,1
2001456e:	fd842583          	lw	a1,-40(s0)
20014572:	fdc42503          	lw	a0,-36(s0)
20014576:	c79ff0ef          	jal	ra,200141ee <__metal_plic0_set_priority>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:152
	plic->metal_exint_table[id] = __metal_plic0_default_handler;
2001457a:	fec42703          	lw	a4,-20(s0)
2001457e:	fd842783          	lw	a5,-40(s0)
20014582:	078a                	slli	a5,a5,0x2
20014584:	97ba                	add	a5,a5,a4
20014586:	20014737          	lui	a4,0x20014
2001458a:	31070713          	addi	a4,a4,784 # 20014310 <__metal_plic0_default_handler>
2001458e:	c798                	sw	a4,8(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:153
	plic->metal_exdata_table[id].sub_int = priv;
20014590:	fec42683          	lw	a3,-20(s0)
20014594:	fd842703          	lw	a4,-40(s0)
20014598:	87ba                	mv	a5,a4
2001459a:	0786                	slli	a5,a5,0x1
2001459c:	97ba                	add	a5,a5,a4
2001459e:	078e                	slli	a5,a5,0x3
200145a0:	97b6                	add	a5,a5,a3
200145a2:	fd042703          	lw	a4,-48(s0)
200145a6:	0ee7a623          	sw	a4,236(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:156
    }

    return 0;
200145aa:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:157
}
200145ac:	853e                	mv	a0,a5
200145ae:	50b2                	lw	ra,44(sp)
200145b0:	5422                	lw	s0,40(sp)
200145b2:	6145                	addi	sp,sp,48
200145b4:	8082                	ret

200145b6 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:160

int __metal_driver_riscv_plic0_enable (struct metal_interrupt *controller, int id)
{
200145b6:	7179                	addi	sp,sp,-48
200145b8:	d606                	sw	ra,44(sp)
200145ba:	d422                	sw	s0,40(sp)
200145bc:	1800                	addi	s0,sp,48
200145be:	fca42e23          	sw	a0,-36(s0)
200145c2:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:161
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
200145c6:	fdc42783          	lw	a5,-36(s0)
200145ca:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:163

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
200145ce:	fdc42503          	lw	a0,-36(s0)
200145d2:	ab7ff0ef          	jal	ra,20014088 <__metal_driver_sifive_plic0_num_interrupts>
200145d6:	872a                	mv	a4,a0
200145d8:	fd842783          	lw	a5,-40(s0)
200145dc:	00e7c463          	blt	a5,a4,200145e4 <__metal_driver_riscv_plic0_enable+0x2e>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:164
        return -1;
200145e0:	57fd                	li	a5,-1
200145e2:	a809                	j	200145f4 <__metal_driver_riscv_plic0_enable+0x3e>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:167
    }

    __metal_plic0_enable(plic, id, METAL_ENABLE);
200145e4:	4605                	li	a2,1
200145e6:	fd842583          	lw	a1,-40(s0)
200145ea:	fec42503          	lw	a0,-20(s0)
200145ee:	c97ff0ef          	jal	ra,20014284 <__metal_plic0_enable>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:168
    return 0;
200145f2:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:169
}
200145f4:	853e                	mv	a0,a5
200145f6:	50b2                	lw	ra,44(sp)
200145f8:	5422                	lw	s0,40(sp)
200145fa:	6145                	addi	sp,sp,48
200145fc:	8082                	ret

200145fe <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:172

int __metal_driver_riscv_plic0_disable (struct metal_interrupt *controller, int id)
{
200145fe:	7179                	addi	sp,sp,-48
20014600:	d606                	sw	ra,44(sp)
20014602:	d422                	sw	s0,40(sp)
20014604:	1800                	addi	s0,sp,48
20014606:	fca42e23          	sw	a0,-36(s0)
2001460a:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:173
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2001460e:	fdc42783          	lw	a5,-36(s0)
20014612:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:175

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014616:	fdc42503          	lw	a0,-36(s0)
2001461a:	a6fff0ef          	jal	ra,20014088 <__metal_driver_sifive_plic0_num_interrupts>
2001461e:	872a                	mv	a4,a0
20014620:	fd842783          	lw	a5,-40(s0)
20014624:	00e7c463          	blt	a5,a4,2001462c <__metal_driver_riscv_plic0_disable+0x2e>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:176
        return -1;
20014628:	57fd                	li	a5,-1
2001462a:	a809                	j	2001463c <__metal_driver_riscv_plic0_disable+0x3e>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:178
    }
    __metal_plic0_enable(plic, id, METAL_DISABLE);
2001462c:	4601                	li	a2,0
2001462e:	fd842583          	lw	a1,-40(s0)
20014632:	fec42503          	lw	a0,-20(s0)
20014636:	c4fff0ef          	jal	ra,20014284 <__metal_plic0_enable>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:179
    return 0;
2001463a:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/riscv_plic0.c:180
}
2001463c:	853e                	mv	a0,a5
2001463e:	50b2                	lw	ra,44(sp)
20014640:	5422                	lw	s0,40(sp)
20014642:	6145                	addi	sp,sp,48
20014644:	8082                	ret

20014646 <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:911



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20014646:	1101                	addi	sp,sp,-32
20014648:	ce22                	sw	s0,28(sp)
2001464a:	1000                	addi	s0,sp,32
2001464c:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:912
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20014650:	800007b7          	lui	a5,0x80000
20014654:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8fc>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:913
}
20014658:	853e                	mv	a0,a5
2001465a:	4472                	lw	s0,28(sp)
2001465c:	6105                	addi	sp,sp,32
2001465e:	8082                	ret

20014660 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:916

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20014660:	1101                	addi	sp,sp,-32
20014662:	ce22                	sw	s0,28(sp)
20014664:	1000                	addi	s0,sp,32
20014666:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:917
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2001466a:	81c18793          	addi	a5,gp,-2020 # 80000aa4 <__metal_dt_prci_10008000>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:918
}
2001466e:	853e                	mv	a0,a5
20014670:	4472                	lw	s0,28(sp)
20014672:	6105                	addi	sp,sp,32
20014674:	8082                	ret

20014676 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:926
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20014676:	1101                	addi	sp,sp,-32
20014678:	ce22                	sw	s0,28(sp)
2001467a:	1000                	addi	s0,sp,32
2001467c:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:927
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20014680:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:928
}
20014682:	853e                	mv	a0,a5
20014684:	4472                	lw	s0,28(sp)
20014686:	6105                	addi	sp,sp,32
20014688:	8082                	ret

2001468a <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1043
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
2001468a:	1141                	addi	sp,sp,-16
2001468c:	c622                	sw	s0,12(sp)
2001468e:	0800                	addi	s0,sp,16
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1044
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20014690:	83018793          	addi	a5,gp,-2000 # 80000ab8 <__metal_driver_vtable_sifive_fe310_g000_prci>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1045
}
20014694:	853e                	mv	a0,a5
20014696:	4432                	lw	s0,12(sp)
20014698:	0141                	addi	sp,sp,16
2001469a:	8082                	ret

2001469c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM    0x001F0000UL
#define CONFIG_ENABLE  0x40000000UL
#define CONFIG_READY   0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(const struct metal_clock *clock)
{
2001469c:	7139                	addi	sp,sp,-64
2001469e:	de06                	sw	ra,60(sp)
200146a0:	dc22                	sw	s0,56(sp)
200146a2:	0080                	addi	s0,sp,64
200146a4:	fca42623          	sw	a0,-52(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:18
    struct metal_clock *ref = __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
200146a8:	fcc42503          	lw	a0,-52(s0)
200146ac:	3f69                	jal	20014646 <__metal_driver_sifive_fe310_g000_hfrosc_ref>
200146ae:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    long config_offset = __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
200146b2:	fcc42503          	lw	a0,-52(s0)
200146b6:	37c1                	jal	20014676 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
200146b8:	fea42423          	sw	a0,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
      __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
200146bc:	fcc42503          	lw	a0,-52(s0)
200146c0:	3745                	jal	20014660 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
200146c2:	fea42223          	sw	a0,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
      __metal_driver_sifive_fe310_g000_prci_vtable();
200146c6:	37d1                	jal	2001468a <__metal_driver_sifive_fe310_g000_prci_vtable>
200146c8:	fea42023          	sw	a0,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
200146cc:	fe042783          	lw	a5,-32(s0)
200146d0:	439c                	lw	a5,0(a5)
200146d2:	fe842583          	lw	a1,-24(s0)
200146d6:	fe442503          	lw	a0,-28(s0)
200146da:	9782                	jalr	a5
200146dc:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
200146e0:	fdc42703          	lw	a4,-36(s0)
200146e4:	400007b7          	lui	a5,0x40000
200146e8:	8ff9                	and	a5,a5,a4
200146ea:	e399                	bnez	a5,200146f0 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:27
        return -1;
200146ec:	57fd                	li	a5,-1
200146ee:	a025                	j	20014716 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28
    if ((cfg & CONFIG_READY) == 0)
200146f0:	fdc42783          	lw	a5,-36(s0)
200146f4:	0007c463          	bltz	a5,200146fc <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
200146f8:	57fd                	li	a5,-1
200146fa:	a831                	j	20014716 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
200146fc:	fec42503          	lw	a0,-20(s0)
20014700:	0bb010ef          	jal	ra,20015fba <metal_clock_get_rate_hz>
20014704:	87aa                	mv	a5,a0
20014706:	873e                	mv	a4,a5
20014708:	fdc42783          	lw	a5,-36(s0)
2001470c:	03f7f793          	andi	a5,a5,63
20014710:	0785                	addi	a5,a5,1
20014712:	02f757b3          	divu	a5,a4,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
}
20014716:	853e                	mv	a0,a5
20014718:	50f2                	lw	ra,60(sp)
2001471a:	5462                	lw	s0,56(sp)
2001471c:	6121                	addi	sp,sp,64
2001471e:	8082                	ret

20014720 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:34

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(struct metal_clock *clock, long rate)
{
20014720:	1101                	addi	sp,sp,-32
20014722:	ce06                	sw	ra,28(sp)
20014724:	cc22                	sw	s0,24(sp)
20014726:	1000                	addi	s0,sp,32
20014728:	fea42623          	sw	a0,-20(s0)
2001472c:	feb42423          	sw	a1,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:35
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20014730:	fec42503          	lw	a0,-20(s0)
20014734:	37a5                	jal	2001469c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20014736:	87aa                	mv	a5,a0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36
}
20014738:	853e                	mv	a0,a5
2001473a:	40f2                	lw	ra,28(sp)
2001473c:	4462                	lw	s0,24(sp)
2001473e:	6105                	addi	sp,sp,32
20014740:	8082                	ret

20014742 <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:934
{
20014742:	1101                	addi	sp,sp,-32
20014744:	ce22                	sw	s0,28(sp)
20014746:	1000                	addi	s0,sp,32
20014748:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:935
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
2001474c:	800007b7          	lui	a5,0x80000
20014750:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8f0>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:936
}
20014754:	853e                	mv	a0,a5
20014756:	4472                	lw	s0,28(sp)
20014758:	6105                	addi	sp,sp,32
2001475a:	8082                	ret

2001475c <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:939
{
2001475c:	1101                	addi	sp,sp,-32
2001475e:	ce22                	sw	s0,28(sp)
20014760:	1000                	addi	s0,sp,32
20014762:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:940
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20014766:	81c18793          	addi	a5,gp,-2020 # 80000aa4 <__metal_dt_prci_10008000>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:941
}
2001476a:	853e                	mv	a0,a5
2001476c:	4472                	lw	s0,28(sp)
2001476e:	6105                	addi	sp,sp,32
20014770:	8082                	ret

20014772 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:944
{
20014772:	1101                	addi	sp,sp,-32
20014774:	ce22                	sw	s0,28(sp)
20014776:	1000                	addi	s0,sp,32
20014778:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:945
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
2001477c:	4791                	li	a5,4
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:946
}
2001477e:	853e                	mv	a0,a5
20014780:	4472                	lw	s0,28(sp)
20014782:	6105                	addi	sp,sp,32
20014784:	8082                	ret

20014786 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1043
{
20014786:	1141                	addi	sp,sp,-16
20014788:	c622                	sw	s0,12(sp)
2001478a:	0800                	addi	s0,sp,16
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1044
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
2001478c:	83018793          	addi	a5,gp,-2000 # 80000ab8 <__metal_driver_vtable_sifive_fe310_g000_prci>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1045
}
20014790:	853e                	mv	a0,a5
20014792:	4432                	lw	s0,12(sp)
20014794:	0141                	addi	sp,sp,16
20014796:	8082                	ret

20014798 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE  0x40000000UL
#define CONFIG_READY   0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(const struct metal_clock *clock)
{
20014798:	7139                	addi	sp,sp,-64
2001479a:	de06                	sw	ra,60(sp)
2001479c:	dc22                	sw	s0,56(sp)
2001479e:	0080                	addi	s0,sp,64
200147a0:	fca42623          	sw	a0,-52(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:16
    struct metal_clock *ref = __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
200147a4:	fcc42503          	lw	a0,-52(s0)
200147a8:	3f69                	jal	20014742 <__metal_driver_sifive_fe310_g000_hfxosc_ref>
200147aa:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    long config_offset = __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
200147ae:	fcc42503          	lw	a0,-52(s0)
200147b2:	37c1                	jal	20014772 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
200147b4:	fea42423          	sw	a0,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
      __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
200147b8:	fcc42503          	lw	a0,-52(s0)
200147bc:	3745                	jal	2001475c <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
200147be:	fea42223          	sw	a0,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
      __metal_driver_sifive_fe310_g000_prci_vtable();
200147c2:	37d1                	jal	20014786 <__metal_driver_sifive_fe310_g000_prci_vtable>
200147c4:	fea42023          	sw	a0,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:22
    long cfg = vtable->get_reg(config_base, config_offset);
200147c8:	fe042783          	lw	a5,-32(s0)
200147cc:	439c                	lw	a5,0(a5)
200147ce:	fe842583          	lw	a1,-24(s0)
200147d2:	fe442503          	lw	a0,-28(s0)
200147d6:	9782                	jalr	a5
200147d8:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24

    if ((cfg & CONFIG_ENABLE) == 0)
200147dc:	fdc42703          	lw	a4,-36(s0)
200147e0:	400007b7          	lui	a5,0x40000
200147e4:	8ff9                	and	a5,a5,a4
200147e6:	e399                	bnez	a5,200147ec <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:25
        return -1;
200147e8:	57fd                	li	a5,-1
200147ea:	a821                	j	20014802 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26
    if ((cfg & CONFIG_READY) == 0)
200147ec:	fdc42783          	lw	a5,-36(s0)
200147f0:	0007c463          	bltz	a5,200147f8 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
200147f4:	57fd                	li	a5,-1
200147f6:	a031                	j	20014802 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    return metal_clock_get_rate_hz(ref);
200147f8:	fec42503          	lw	a0,-20(s0)
200147fc:	7be010ef          	jal	ra,20015fba <metal_clock_get_rate_hz>
20014800:	87aa                	mv	a5,a0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
}
20014802:	853e                	mv	a0,a5
20014804:	50f2                	lw	ra,60(sp)
20014806:	5462                	lw	s0,56(sp)
20014808:	6121                	addi	sp,sp,64
2001480a:	8082                	ret

2001480c <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:32

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(struct metal_clock *clock, long rate)
{
2001480c:	1101                	addi	sp,sp,-32
2001480e:	ce06                	sw	ra,28(sp)
20014810:	cc22                	sw	s0,24(sp)
20014812:	1000                	addi	s0,sp,32
20014814:	fea42623          	sw	a0,-20(s0)
20014818:	feb42423          	sw	a1,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:33
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
2001481c:	fec42503          	lw	a0,-20(s0)
20014820:	3fa5                	jal	20014798 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20014822:	87aa                	mv	a5,a0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34
}
20014824:	853e                	mv	a0,a5
20014826:	40f2                	lw	ra,28(sp)
20014828:	4462                	lw	s0,24(sp)
2001482a:	6105                	addi	sp,sp,32
2001482c:	8082                	ret

2001482e <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:995
{
2001482e:	1101                	addi	sp,sp,-32
20014830:	ce22                	sw	s0,28(sp)
20014832:	1000                	addi	s0,sp,32
20014834:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:996
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20014838:	800017b7          	lui	a5,0x80001
2001483c:	a6078793          	addi	a5,a5,-1440 # 80000a60 <metal_segment_heap_target_end+0xfffff2f0>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:997
}
20014840:	853e                	mv	a0,a5
20014842:	4472                	lw	s0,28(sp)
20014844:	6105                	addi	sp,sp,32
20014846:	8082                	ret

20014848 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1000
{
20014848:	1101                	addi	sp,sp,-32
2001484a:	ce22                	sw	s0,28(sp)
2001484c:	1000                	addi	s0,sp,32
2001484e:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1001
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20014852:	800017b7          	lui	a5,0x80001
20014856:	a6c78793          	addi	a5,a5,-1428 # 80000a6c <metal_segment_heap_target_end+0xfffff2fc>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1002
}
2001485a:	853e                	mv	a0,a5
2001485c:	4472                	lw	s0,28(sp)
2001485e:	6105                	addi	sp,sp,32
20014860:	8082                	ret

20014862 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1005
{
20014862:	1101                	addi	sp,sp,-32
20014864:	ce22                	sw	s0,28(sp)
20014866:	1000                	addi	s0,sp,32
20014868:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1006
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2001486c:	81c18793          	addi	a5,gp,-2020 # 80000aa4 <__metal_dt_prci_10008000>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1007
}
20014870:	853e                	mv	a0,a5
20014872:	4472                	lw	s0,28(sp)
20014874:	6105                	addi	sp,sp,32
20014876:	8082                	ret

20014878 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1010
{
20014878:	1101                	addi	sp,sp,-32
2001487a:	ce22                	sw	s0,28(sp)
2001487c:	1000                	addi	s0,sp,32
2001487e:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1011
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20014882:	47b1                	li	a5,12
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1012
}
20014884:	853e                	mv	a0,a5
20014886:	4472                	lw	s0,28(sp)
20014888:	6105                	addi	sp,sp,32
2001488a:	8082                	ret

2001488c <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1015
{
2001488c:	1141                	addi	sp,sp,-16
2001488e:	c622                	sw	s0,12(sp)
20014890:	0800                	addi	s0,sp,16
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1016
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20014892:	81c18793          	addi	a5,gp,-2020 # 80000aa4 <__metal_dt_prci_10008000>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1017
}
20014896:	853e                	mv	a0,a5
20014898:	4432                	lw	s0,12(sp)
2001489a:	0141                	addi	sp,sp,16
2001489c:	8082                	ret

2001489e <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1020
{
2001489e:	1141                	addi	sp,sp,-16
200148a0:	c622                	sw	s0,12(sp)
200148a2:	0800                	addi	s0,sp,16
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1021
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
200148a4:	47a1                	li	a5,8
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1022
}
200148a6:	853e                	mv	a0,a5
200148a8:	4432                	lw	s0,12(sp)
200148aa:	0141                	addi	sp,sp,16
200148ac:	8082                	ret

200148ae <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1025
{
200148ae:	1141                	addi	sp,sp,-16
200148b0:	c622                	sw	s0,12(sp)
200148b2:	0800                	addi	s0,sp,16
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1026
		return 16000000;
200148b4:	00f427b7          	lui	a5,0xf42
200148b8:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1027
}
200148bc:	853e                	mv	a0,a5
200148be:	4432                	lw	s0,12(sp)
200148c0:	0141                	addi	sp,sp,16
200148c2:	8082                	ret

200148c4 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1033
{
200148c4:	1141                	addi	sp,sp,-16
200148c6:	c622                	sw	s0,12(sp)
200148c8:	0800                	addi	s0,sp,16
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1034
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
200148ca:	100087b7          	lui	a5,0x10008
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1035
}
200148ce:	853e                	mv	a0,a5
200148d0:	4432                	lw	s0,12(sp)
200148d2:	0141                	addi	sp,sp,16
200148d4:	8082                	ret

200148d6 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1043
{
200148d6:	1141                	addi	sp,sp,-16
200148d8:	c622                	sw	s0,12(sp)
200148da:	0800                	addi	s0,sp,16
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1044
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
200148dc:	83018793          	addi	a5,gp,-2000 # 80000ab8 <__metal_driver_vtable_sifive_fe310_g000_prci>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1045
}
200148e0:	853e                	mv	a0,a5
200148e2:	4432                	lw	s0,12(sp)
200148e4:	0141                	addi	sp,sp,16
200148e6:	8082                	ret

200148e8 <get_pll_config_freq>:
get_pll_config_freq():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:137
 *  - config the PLL configuration
 * Returns:
 *  - PLL_CONFIG_NOT_VALID if the configuration is not valid for the input frequency
 *  - the output frequency, in hertz */
static long get_pll_config_freq(unsigned long pll_input_rate, const struct pll_config_t *config)
{
200148e8:	1101                	addi	sp,sp,-32
200148ea:	ce22                	sw	s0,28(sp)
200148ec:	1000                	addi	s0,sp,32
200148ee:	fea42623          	sw	a0,-20(s0)
200148f2:	feb42423          	sw	a1,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:138
    if(pll_input_rate < config->min_input_rate || pll_input_rate > config->max_input_rate)
200148f6:	fe842783          	lw	a5,-24(s0)
200148fa:	479c                	lw	a5,8(a5)
200148fc:	fec42703          	lw	a4,-20(s0)
20014900:	00f76963          	bltu	a4,a5,20014912 <get_pll_config_freq+0x2a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:138 (discriminator 1)
20014904:	fe842783          	lw	a5,-24(s0)
20014908:	47dc                	lw	a5,12(a5)
2001490a:	fec42703          	lw	a4,-20(s0)
2001490e:	00e7f463          	bgeu	a5,a4,20014916 <get_pll_config_freq+0x2e>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:139
        return PLL_CONFIG_NOT_VALID;
20014912:	57fd                	li	a5,-1
20014914:	a829                	j	2001492e <get_pll_config_freq+0x46>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141

    return pll_input_rate * config->multiplier / config->divisor;
20014916:	fe842783          	lw	a5,-24(s0)
2001491a:	4398                	lw	a4,0(a5)
2001491c:	fec42783          	lw	a5,-20(s0)
20014920:	02f70733          	mul	a4,a4,a5
20014924:	fe842783          	lw	a5,-24(s0)
20014928:	43dc                	lw	a5,4(a5)
2001492a:	02f757b3          	divu	a5,a4,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
}
2001492e:	853e                	mv	a0,a5
20014930:	4472                	lw	s0,28(sp)
20014932:	6105                	addi	sp,sp,32
20014934:	8082                	ret

20014936 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

static void metal_sifive_fe310_g000_pll_init(void) __attribute__((constructor));
static void metal_sifive_fe310_g000_pll_init(void) {
20014936:	1101                	addi	sp,sp,-32
20014938:	ce06                	sw	ra,28(sp)
2001493a:	cc22                	sw	s0,24(sp)
2001493c:	1000                	addi	s0,sp,32
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:148
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
2001493e:	3f85                	jal	200148ae <__metal_driver_sifive_fe310_g000_pll_init_rate>
20014940:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:150
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if(init_rate != 0)
20014944:	fec42783          	lw	a5,-20(s0)
20014948:	c791                	beqz	a5,20014954 <metal_sifive_fe310_g000_pll_init+0x1e>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
        __metal_driver_sifive_fe310_g000_pll_init(__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
2001494a:	800017b7          	lui	a5,0x80001
2001494e:	a7878513          	addi	a0,a5,-1416 # 80000a78 <metal_segment_heap_target_end+0xfffff308>
20014952:	2031                	jal	2001495e <__metal_driver_sifive_fe310_g000_pll_init>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
}
20014954:	0001                	nop
20014956:	40f2                	lw	ra,28(sp)
20014958:	4462                	lw	s0,24(sp)
2001495a:	6105                	addi	sp,sp,32
2001495c:	8082                	ret

2001495e <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:156

#endif /* __METAL_DT_SIFIVE_FE310_G000__PLL_HANDLE */

void __metal_driver_sifive_fe310_g000_pll_init(struct __metal_driver_sifive_fe310_g000_pll *pll) {
2001495e:	7139                	addi	sp,sp,-64
20014960:	de06                	sw	ra,60(sp)
20014962:	dc22                	sw	s0,56(sp)
20014964:	0080                	addi	s0,sp,64
20014966:	fca42623          	sw	a0,-52(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
    struct metal_clock *pllref = __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
2001496a:	fcc42783          	lw	a5,-52(s0)
2001496e:	853e                	mv	a0,a5
20014970:	3de1                	jal	20014848 <__metal_driver_sifive_fe310_g000_pll_pllref>
20014972:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:158
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20014976:	3f25                	jal	200148ae <__metal_driver_sifive_fe310_g000_pll_init_rate>
20014978:	fea42423          	sw	a0,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:159
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
2001497c:	370d                	jal	2001489e <__metal_driver_sifive_fe310_g000_pll_config_offset>
2001497e:	fea42223          	sw	a0,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:160
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20014982:	3789                	jal	200148c4 <__metal_driver_sifive_fe310_g000_prci_base>
20014984:	fea42023          	sw	a0,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162

    __metal_io_u32 *pllcfg = (__metal_io_u32 *) (base + config_offset);
20014988:	fe042703          	lw	a4,-32(s0)
2001498c:	fe442783          	lw	a5,-28(s0)
20014990:	97ba                	add	a5,a5,a4
20014992:	fcf42e23          	sw	a5,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165

    /* If the PLL clock has had a _pre_rate_change_callback configured, call it */
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20014996:	fcc42783          	lw	a5,-52(s0)
2001499a:	43dc                	lw	a5,4(a5)
2001499c:	853e                	mv	a0,a5
2001499e:	588010ef          	jal	ra,20015f26 <_metal_clock_call_all_callbacks>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:168

    /* If we're running off of the PLL, switch off before we start configuring it*/
    if((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) == 0)
200149a2:	fdc42783          	lw	a5,-36(s0)
200149a6:	4398                	lw	a4,0(a5)
200149a8:	67c1                	lui	a5,0x10
200149aa:	8ff9                	and	a5,a5,a4
200149ac:	eb91                	bnez	a5,200149c0 <__metal_driver_sifive_fe310_g000_pll_init+0x62>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
200149ae:	fdc42783          	lw	a5,-36(s0)
200149b2:	4398                	lw	a4,0(a5)
200149b4:	77c1                	lui	a5,0xffff0
200149b6:	17fd                	addi	a5,a5,-1
200149b8:	8f7d                	and	a4,a4,a5
200149ba:	fdc42783          	lw	a5,-36(s0)
200149be:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:172

    /* Make sure we're running off of the external oscillator for stability */
    if(pllref != NULL)
200149c0:	fec42783          	lw	a5,-20(s0)
200149c4:	cb91                	beqz	a5,200149d8 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
200149c6:	fdc42783          	lw	a5,-36(s0)
200149ca:	4398                	lw	a4,0(a5)
200149cc:	000207b7          	lui	a5,0x20
200149d0:	8f5d                	or	a4,a4,a5
200149d2:	fdc42783          	lw	a5,-36(s0)
200149d6:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178

    /* Configure the PLL to run at the requested init frequency.
     * Using the vtable instead of the user API because we want to control
     * when the callbacks occur. */
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
200149d8:	fcc42783          	lw	a5,-52(s0)
200149dc:	439c                	lw	a5,0(a5)
200149de:	43d8                	lw	a4,4(a5)
200149e0:	fcc42783          	lw	a5,-52(s0)
200149e4:	fe842583          	lw	a1,-24(s0)
200149e8:	853e                	mv	a0,a5
200149ea:	9702                	jalr	a4
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181

    /* If the PLL clock has had a rate_change_callback configured, call it */
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
200149ec:	fcc42783          	lw	a5,-52(s0)
200149f0:	479c                	lw	a5,8(a5)
200149f2:	853e                	mv	a0,a5
200149f4:	532010ef          	jal	ra,20015f26 <_metal_clock_call_all_callbacks>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
}
200149f8:	0001                	nop
200149fa:	50f2                	lw	ra,60(sp)
200149fc:	5462                	lw	s0,56(sp)
200149fe:	6121                	addi	sp,sp,64
20014a00:	8082                	ret

20014a02 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:185

long __metal_driver_sifive_fe310_g000_pll_get_rate_hz(const struct metal_clock *clock)
{
20014a02:	711d                	addi	sp,sp,-96
20014a04:	ce86                	sw	ra,92(sp)
20014a06:	cca2                	sw	s0,88(sp)
20014a08:	1080                	addi	s0,sp,96
20014a0a:	faa42623          	sw	a0,-84(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:186
    struct metal_clock *pllref = __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20014a0e:	fac42503          	lw	a0,-84(s0)
20014a12:	3d1d                	jal	20014848 <__metal_driver_sifive_fe310_g000_pll_pllref>
20014a14:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    struct metal_clock *pllsel0 = __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20014a18:	fac42503          	lw	a0,-84(s0)
20014a1c:	3d09                	jal	2001482e <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20014a1e:	fea42423          	sw	a0,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:188
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20014a22:	fac42503          	lw	a0,-84(s0)
20014a26:	3da5                	jal	2001489e <__metal_driver_sifive_fe310_g000_pll_config_offset>
20014a28:	fea42223          	sw	a0,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
      __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20014a2c:	fac42503          	lw	a0,-84(s0)
20014a30:	3db1                	jal	2001488c <__metal_driver_sifive_fe310_g000_pll_config_base>
20014a32:	fea42023          	sw	a0,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
    long divider_offset = __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20014a36:	fac42503          	lw	a0,-84(s0)
20014a3a:	3d3d                	jal	20014878 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20014a3c:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:193
    struct __metal_driver_sifive_fe310_g000_prci *divider_base =
      __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20014a40:	fac42503          	lw	a0,-84(s0)
20014a44:	3d39                	jal	20014862 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20014a46:	fca42c23          	sw	a0,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:195
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
      __metal_driver_sifive_fe310_g000_prci_vtable();
20014a4a:	3571                	jal	200148d6 <__metal_driver_sifive_fe310_g000_prci_vtable>
20014a4c:	fca42a23          	sw	a0,-44(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:197

    long cfg = vtable->get_reg(config_base, config_offset);
20014a50:	fd442783          	lw	a5,-44(s0)
20014a54:	439c                	lw	a5,0(a5)
20014a56:	fe442583          	lw	a1,-28(s0)
20014a5a:	fe042503          	lw	a0,-32(s0)
20014a5e:	9782                	jalr	a5
20014a60:	fca42823          	sw	a0,-48(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
    long div = vtable->get_reg(divider_base, divider_offset);
20014a64:	fd442783          	lw	a5,-44(s0)
20014a68:	439c                	lw	a5,0(a5)
20014a6a:	fdc42583          	lw	a1,-36(s0)
20014a6e:	fd842503          	lw	a0,-40(s0)
20014a72:	9782                	jalr	a5
20014a74:	fca42623          	sw	a0,-52(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202

    /* At the end of the PLL there's one big mux: it either selects the HFROSC
     * (bypassing the PLL entirely) or uses the PLL. */
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20014a78:	fd042703          	lw	a4,-48(s0)
20014a7c:	67c1                	lui	a5,0x10
20014a7e:	8f7d                	and	a4,a4,a5
20014a80:	67c1                	lui	a5,0x10
20014a82:	00f77863          	bgeu	a4,a5,20014a92 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:203
        return metal_clock_get_rate_hz(pllsel0);
20014a86:	fe842503          	lw	a0,-24(s0)
20014a8a:	530010ef          	jal	ra,20015fba <metal_clock_get_rate_hz>
20014a8e:	87aa                	mv	a5,a0
20014a90:	a8e1                	j	20014b68 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:207

    /* There's a clock mux before the PLL that selects between the HFROSC adn
     * the HFXOSC as the PLL's input clock. */
    long ref_hz = metal_clock_get_rate_hz(__METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20014a92:	fd042703          	lw	a4,-48(s0)
20014a96:	000207b7          	lui	a5,0x20
20014a9a:	8f7d                	and	a4,a4,a5
20014a9c:	000207b7          	lui	a5,0x20
20014aa0:	00f76563          	bltu	a4,a5,20014aaa <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:207 (discriminator 1)
20014aa4:	fec42783          	lw	a5,-20(s0)
20014aa8:	a019                	j	20014aae <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:207 (discriminator 2)
20014aaa:	fe842783          	lw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:207 (discriminator 4)
20014aae:	853e                	mv	a0,a5
20014ab0:	50a010ef          	jal	ra,20015fba <metal_clock_get_rate_hz>
20014ab4:	fca42423          	sw	a0,-56(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211 (discriminator 4)

    /* It's possible to bypass the PLL, which is an internal bpyass.  This
     * still obays the PLL's input clock mu. */
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20014ab8:	fd042703          	lw	a4,-48(s0)
20014abc:	000407b7          	lui	a5,0x40
20014ac0:	8f7d                	and	a4,a4,a5
20014ac2:	000407b7          	lui	a5,0x40
20014ac6:	00f76563          	bltu	a4,a5,20014ad0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:212
        return ref_hz;
20014aca:	fc842783          	lw	a5,-56(s0)
20014ace:	a869                	j	20014b68 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215

    /* Logically the PLL is a three stage div-mul-div. */
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20014ad0:	fd042783          	lw	a5,-48(s0)
20014ad4:	8b9d                	andi	a5,a5,7
20014ad6:	0785                	addi	a5,a5,1
20014ad8:	fcf42223          	sw	a5,-60(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20014adc:	fd042783          	lw	a5,-48(s0)
20014ae0:	3f07f793          	andi	a5,a5,1008
20014ae4:	8391                	srli	a5,a5,0x4
20014ae6:	0785                	addi	a5,a5,1
20014ae8:	0786                	slli	a5,a5,0x1
20014aea:	fcf42023          	sw	a5,-64(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:217
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20014aee:	fd042703          	lw	a4,-48(s0)
20014af2:	6785                	lui	a5,0x1
20014af4:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20014af8:	8f7d                	and	a4,a4,a5
20014afa:	3ff00793          	li	a5,1023
20014afe:	00e7e463          	bltu	a5,a4,20014b06 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:218
        return -1;
20014b02:	57fd                	li	a5,-1
20014b04:	a095                	j	20014b68 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:219
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20014b06:	fd042703          	lw	a4,-48(s0)
20014b0a:	6785                	lui	a5,0x1
20014b0c:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20014b10:	8ff9                	and	a5,a5,a4
20014b12:	83a9                	srli	a5,a5,0xa
20014b14:	4705                	li	a4,1
20014b16:	00f717b3          	sll	a5,a4,a5
20014b1a:	faf42e23          	sw	a5,-68(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:224

    /* In addition to the dividers inherent in the PLL, there's an additional
     * clock divider that lives after the PLL and lets us pick a more
     * interesting range of frequencies. */
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
20014b1e:	fc842703          	lw	a4,-56(s0)
20014b22:	fc442783          	lw	a5,-60(s0)
20014b26:	02f74733          	div	a4,a4,a5
20014b2a:	fc042783          	lw	a5,-64(s0)
20014b2e:	02f70733          	mul	a4,a4,a5
20014b32:	fbc42783          	lw	a5,-68(s0)
20014b36:	02f747b3          	div	a5,a4,a5
20014b3a:	faf42c23          	sw	a5,-72(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225
    if (__METAL_GET_FIELD(div, DIV_1))
20014b3e:	fcc42783          	lw	a5,-52(s0)
20014b42:	1007f713          	andi	a4,a5,256
20014b46:	0ff00793          	li	a5,255
20014b4a:	00e7f563          	bgeu	a5,a4,20014b54 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return pllout;
20014b4e:	fb842783          	lw	a5,-72(s0)
20014b52:	a819                	j	20014b68 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:228

    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20014b54:	fb842703          	lw	a4,-72(s0)
20014b58:	fcc42783          	lw	a5,-52(s0)
20014b5c:	03f7f793          	andi	a5,a5,63
20014b60:	0785                	addi	a5,a5,1
20014b62:	0786                	slli	a5,a5,0x1
20014b64:	02f757b3          	divu	a5,a4,a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
}
20014b68:	853e                	mv	a0,a5
20014b6a:	40f6                	lw	ra,92(sp)
20014b6c:	4466                	lw	s0,88(sp)
20014b6e:	6125                	addi	sp,sp,96
20014b70:	8082                	ret

20014b72 <find_closest_config>:
find_closest_config():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
 *  - rate desired PLL output frequency
 * Returns:
 *  -1 if no valid configuration is available
 *  the index into pll_configs of a valid configuration */
static int find_closest_config(long ref_hz, long rate)
{
20014b72:	7139                	addi	sp,sp,-64
20014b74:	de06                	sw	ra,60(sp)
20014b76:	dc22                	sw	s0,56(sp)
20014b78:	0080                	addi	s0,sp,64
20014b7a:	fca42623          	sw	a0,-52(s0)
20014b7e:	fcb42423          	sw	a1,-56(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:241
    int closest_index = -1;
20014b82:	57fd                	li	a5,-1
20014b84:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    long closest_diff = LONG_MAX;
20014b88:	800007b7          	lui	a5,0x80000
20014b8c:	fff7c793          	not	a5,a5
20014b90:	fef42423          	sw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:246

    /* We're probably trying for a fast output frequency, so start from
     * the high end of the configs. */
    for(int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0; i--)
20014b94:	04300793          	li	a5,67
20014b98:	fef42223          	sw	a5,-28(s0)
20014b9c:	a0b5                	j	20014c08 <find_closest_config+0x96>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:248
    {
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20014b9e:	fcc42683          	lw	a3,-52(s0)
20014ba2:	fe442783          	lw	a5,-28(s0)
20014ba6:	00579713          	slli	a4,a5,0x5
20014baa:	200177b7          	lui	a5,0x20017
20014bae:	57c78793          	addi	a5,a5,1404 # 2001757c <pll_configs>
20014bb2:	97ba                	add	a5,a5,a4
20014bb4:	85be                	mv	a1,a5
20014bb6:	8536                	mv	a0,a3
20014bb8:	d31ff0ef          	jal	ra,200148e8 <get_pll_config_freq>
20014bbc:	fea42023          	sw	a0,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:249
        if(config_freq != PLL_CONFIG_NOT_VALID)
20014bc0:	fe042703          	lw	a4,-32(s0)
20014bc4:	57fd                	li	a5,-1
20014bc6:	02f70c63          	beq	a4,a5,20014bfe <find_closest_config+0x8c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:251
        {
            long freq_diff = abs(config_freq - rate);
20014bca:	fe042703          	lw	a4,-32(s0)
20014bce:	fc842783          	lw	a5,-56(s0)
20014bd2:	8f1d                	sub	a4,a4,a5
20014bd4:	41f75793          	srai	a5,a4,0x1f
20014bd8:	8f3d                	xor	a4,a4,a5
20014bda:	40f707b3          	sub	a5,a4,a5
20014bde:	fcf42e23          	sw	a5,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:252
            if(freq_diff < closest_diff)
20014be2:	fdc42703          	lw	a4,-36(s0)
20014be6:	fe842783          	lw	a5,-24(s0)
20014bea:	00f75a63          	bge	a4,a5,20014bfe <find_closest_config+0x8c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
            {
                closest_index = i;
20014bee:	fe442783          	lw	a5,-28(s0)
20014bf2:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
                closest_diff = freq_diff;
20014bf6:	fdc42783          	lw	a5,-36(s0)
20014bfa:	fef42423          	sw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:246 (discriminator 2)
    for(int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0; i--)
20014bfe:	fe442783          	lw	a5,-28(s0)
20014c02:	17fd                	addi	a5,a5,-1
20014c04:	fef42223          	sw	a5,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:246 (discriminator 1)
20014c08:	fe442783          	lw	a5,-28(s0)
20014c0c:	f807d9e3          	bgez	a5,20014b9e <find_closest_config+0x2c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
            }
        }
    }

    return closest_index;
20014c10:	fec42783          	lw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
}
20014c14:	853e                	mv	a0,a5
20014c16:	50f2                	lw	ra,60(sp)
20014c18:	5462                	lw	s0,56(sp)
20014c1a:	6121                	addi	sp,sp,64
20014c1c:	8082                	ret

20014c1e <configure_pll>:
configure_pll():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265

/* Configure the PLL and wait for it to lock */
static void configure_pll(__metal_io_u32 *pllcfg, __metal_io_u32 *plloutdiv, const struct pll_config_t *config)
{
20014c1e:	1101                	addi	sp,sp,-32
20014c20:	ce22                	sw	s0,28(sp)
20014c22:	1000                	addi	s0,sp,32
20014c24:	fea42623          	sw	a0,-20(s0)
20014c28:	feb42423          	sw	a1,-24(s0)
20014c2c:	fec42223          	sw	a2,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
20014c30:	fec42783          	lw	a5,-20(s0)
20014c34:	439c                	lw	a5,0(a5)
20014c36:	ff87f713          	andi	a4,a5,-8
20014c3a:	fec42783          	lw	a5,-20(s0)
20014c3e:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
20014c40:	fec42783          	lw	a5,-20(s0)
20014c44:	4398                	lw	a4,0(a5)
20014c46:	fe442783          	lw	a5,-28(s0)
20014c4a:	4b9c                	lw	a5,16(a5)
20014c4c:	8b9d                	andi	a5,a5,7
20014c4e:	8f5d                	or	a4,a4,a5
20014c50:	fec42783          	lw	a5,-20(s0)
20014c54:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:269

    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20014c56:	fec42783          	lw	a5,-20(s0)
20014c5a:	439c                	lw	a5,0(a5)
20014c5c:	c0f7f713          	andi	a4,a5,-1009
20014c60:	fec42783          	lw	a5,-20(s0)
20014c64:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:270
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20014c66:	fec42783          	lw	a5,-20(s0)
20014c6a:	4398                	lw	a4,0(a5)
20014c6c:	fe442783          	lw	a5,-28(s0)
20014c70:	4bdc                	lw	a5,20(a5)
20014c72:	0792                	slli	a5,a5,0x4
20014c74:	3f07f793          	andi	a5,a5,1008
20014c78:	8f5d                	or	a4,a4,a5
20014c7a:	fec42783          	lw	a5,-20(s0)
20014c7e:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272

    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
20014c80:	fec42783          	lw	a5,-20(s0)
20014c84:	4398                	lw	a4,0(a5)
20014c86:	77fd                	lui	a5,0xfffff
20014c88:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffdc8f>
20014c8c:	8f7d                	and	a4,a4,a5
20014c8e:	fec42783          	lw	a5,-20(s0)
20014c92:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20014c94:	fec42783          	lw	a5,-20(s0)
20014c98:	4398                	lw	a4,0(a5)
20014c9a:	fe442783          	lw	a5,-28(s0)
20014c9e:	4f9c                	lw	a5,24(a5)
20014ca0:	00a79693          	slli	a3,a5,0xa
20014ca4:	6785                	lui	a5,0x1
20014ca6:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20014caa:	8ff5                	and	a5,a5,a3
20014cac:	8f5d                	or	a4,a4,a5
20014cae:	fec42783          	lw	a5,-20(s0)
20014cb2:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:275

    if(config->d < 0)
20014cb4:	fe442783          	lw	a5,-28(s0)
20014cb8:	4fdc                	lw	a5,28(a5)
20014cba:	0207db63          	bgez	a5,20014cf0 <configure_pll+0xd2>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:278
    {
        /* disable final divider */
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20014cbe:	fe842783          	lw	a5,-24(s0)
20014cc2:	439c                	lw	a5,0(a5)
20014cc4:	1007e713          	ori	a4,a5,256
20014cc8:	fe842783          	lw	a5,-24(s0)
20014ccc:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:280

        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20014cce:	fe842783          	lw	a5,-24(s0)
20014cd2:	439c                	lw	a5,0(a5)
20014cd4:	fc07f713          	andi	a4,a5,-64
20014cd8:	fe842783          	lw	a5,-24(s0)
20014cdc:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:281
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20014cde:	fe842783          	lw	a5,-24(s0)
20014ce2:	439c                	lw	a5,0(a5)
20014ce4:	0017e713          	ori	a4,a5,1
20014ce8:	fe842783          	lw	a5,-24(s0)
20014cec:	c398                	sw	a4,0(a5)
20014cee:	a82d                	j	20014d28 <configure_pll+0x10a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:285
    }
    else
    {
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
20014cf0:	fe842783          	lw	a5,-24(s0)
20014cf4:	439c                	lw	a5,0(a5)
20014cf6:	eff7f713          	andi	a4,a5,-257
20014cfa:	fe842783          	lw	a5,-24(s0)
20014cfe:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:287

        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20014d00:	fe842783          	lw	a5,-24(s0)
20014d04:	439c                	lw	a5,0(a5)
20014d06:	fc07f713          	andi	a4,a5,-64
20014d0a:	fe842783          	lw	a5,-24(s0)
20014d0e:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:288
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
20014d10:	fe842783          	lw	a5,-24(s0)
20014d14:	4398                	lw	a4,0(a5)
20014d16:	fe442783          	lw	a5,-28(s0)
20014d1a:	4fdc                	lw	a5,28(a5)
20014d1c:	03f7f793          	andi	a5,a5,63
20014d20:	8f5d                	or	a4,a4,a5
20014d22:	fe842783          	lw	a5,-24(s0)
20014d26:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    }

    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
20014d28:	fec42783          	lw	a5,-20(s0)
20014d2c:	4398                	lw	a4,0(a5)
20014d2e:	fffc07b7          	lui	a5,0xfffc0
20014d32:	17fd                	addi	a5,a5,-1
20014d34:	8f7d                	and	a4,a4,a5
20014d36:	fec42783          	lw	a5,-20(s0)
20014d3a:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294

    /* Wait for PLL to lock */
    while((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0) ;
20014d3c:	0001                	nop
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294 (discriminator 1)
20014d3e:	fec42783          	lw	a5,-20(s0)
20014d42:	439c                	lw	a5,0(a5)
20014d44:	fe07dde3          	bgez	a5,20014d3e <configure_pll+0x120>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
}
20014d48:	0001                	nop
20014d4a:	4472                	lw	s0,28(sp)
20014d4c:	6105                	addi	sp,sp,32
20014d4e:	8082                	ret

20014d50 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298

long __metal_driver_sifive_fe310_g000_pll_set_rate_hz(struct metal_clock *clock, long rate)
{
20014d50:	715d                	addi	sp,sp,-80
20014d52:	c686                	sw	ra,76(sp)
20014d54:	c4a2                	sw	s0,72(sp)
20014d56:	0880                	addi	s0,sp,80
20014d58:	faa42e23          	sw	a0,-68(s0)
20014d5c:	fab42c23          	sw	a1,-72(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:299
    struct metal_clock *pllref = __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20014d60:	fbc42503          	lw	a0,-68(s0)
20014d64:	ae5ff0ef          	jal	ra,20014848 <__metal_driver_sifive_fe310_g000_pll_pllref>
20014d68:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    struct metal_clock *pllsel0 = __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20014d6c:	fbc42503          	lw	a0,-68(s0)
20014d70:	abfff0ef          	jal	ra,2001482e <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20014d74:	fea42423          	sw	a0,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:301
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20014d78:	fbc42503          	lw	a0,-68(s0)
20014d7c:	b23ff0ef          	jal	ra,2001489e <__metal_driver_sifive_fe310_g000_pll_config_offset>
20014d80:	fea42223          	sw	a0,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
    long divider_offset = __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20014d84:	fbc42503          	lw	a0,-68(s0)
20014d88:	af1ff0ef          	jal	ra,20014878 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20014d8c:	fea42023          	sw	a0,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:303
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20014d90:	b35ff0ef          	jal	ra,200148c4 <__metal_driver_sifive_fe310_g000_prci_base>
20014d94:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305

    __metal_io_u32 *pllcfg = (__metal_io_u32 *) (base + config_offset);
20014d98:	fdc42703          	lw	a4,-36(s0)
20014d9c:	fe442783          	lw	a5,-28(s0)
20014da0:	97ba                	add	a5,a5,a4
20014da2:	fcf42c23          	sw	a5,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:306
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *) (base + divider_offset);
20014da6:	fdc42703          	lw	a4,-36(s0)
20014daa:	fe042783          	lw	a5,-32(s0)
20014dae:	97ba                	add	a5,a5,a4
20014db0:	fcf42a23          	sw	a5,-44(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309

    /* We can't modify the PLL if coreclk is driven by it, so switch it off */
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
20014db4:	fd842783          	lw	a5,-40(s0)
20014db8:	4398                	lw	a4,0(a5)
20014dba:	67c1                	lui	a5,0x10
20014dbc:	8ff9                	and	a5,a5,a4
20014dbe:	cb91                	beqz	a5,20014dd2 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20014dc0:	fd842783          	lw	a5,-40(s0)
20014dc4:	4398                	lw	a4,0(a5)
20014dc6:	77c1                	lui	a5,0xffff0
20014dc8:	17fd                	addi	a5,a5,-1
20014dca:	8f7d                	and	a4,a4,a5
20014dcc:	fd842783          	lw	a5,-40(s0)
20014dd0:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:314

    /* There's a clock mux before the PLL that selects between the HFROSC and
     * the HFXOSC as the PLL's input clock. */
    long ref_hz = metal_clock_get_rate_hz(__METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
20014dd2:	fd842783          	lw	a5,-40(s0)
20014dd6:	4398                	lw	a4,0(a5)
20014dd8:	000207b7          	lui	a5,0x20
20014ddc:	8ff9                	and	a5,a5,a4
20014dde:	c781                	beqz	a5,20014de6 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:314 (discriminator 1)
20014de0:	fec42783          	lw	a5,-20(s0)
20014de4:	a019                	j	20014dea <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:314 (discriminator 2)
20014de6:	fe842783          	lw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:314 (discriminator 4)
20014dea:	853e                	mv	a0,a5
20014dec:	1ce010ef          	jal	ra,20015fba <metal_clock_get_rate_hz>
20014df0:	fca42823          	sw	a0,-48(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:317 (discriminator 4)

    /* if the desired rate is within 75%-125% of the input clock, bypass the PLL */
    if((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate)
20014df4:	fd042703          	lw	a4,-48(s0)
20014df8:	87ba                	mv	a5,a4
20014dfa:	0786                	slli	a5,a5,0x1
20014dfc:	97ba                	add	a5,a5,a4
20014dfe:	41f7d713          	srai	a4,a5,0x1f
20014e02:	8b0d                	andi	a4,a4,3
20014e04:	97ba                	add	a5,a5,a4
20014e06:	8789                	srai	a5,a5,0x2
20014e08:	873e                	mv	a4,a5
20014e0a:	fb842783          	lw	a5,-72(s0)
20014e0e:	02e7cb63          	blt	a5,a4,20014e44 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:317 (discriminator 1)
20014e12:	fd042703          	lw	a4,-48(s0)
20014e16:	87ba                	mv	a5,a4
20014e18:	078a                	slli	a5,a5,0x2
20014e1a:	97ba                	add	a5,a5,a4
20014e1c:	41f7d713          	srai	a4,a5,0x1f
20014e20:	8b0d                	andi	a4,a4,3
20014e22:	97ba                	add	a5,a5,a4
20014e24:	8789                	srai	a5,a5,0x2
20014e26:	873e                	mv	a4,a5
20014e28:	fb842783          	lw	a5,-72(s0)
20014e2c:	00f74c63          	blt	a4,a5,20014e44 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:319
    {
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20014e30:	fd842783          	lw	a5,-40(s0)
20014e34:	4398                	lw	a4,0(a5)
20014e36:	000407b7          	lui	a5,0x40
20014e3a:	8f5d                	or	a4,a4,a5
20014e3c:	fd842783          	lw	a5,-40(s0)
20014e40:	c398                	sw	a4,0(a5)
20014e42:	a881                	j	20014e92 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:323
    }
    else
    {
        int config_index = find_closest_config(ref_hz, rate);
20014e44:	fb842583          	lw	a1,-72(s0)
20014e48:	fd042503          	lw	a0,-48(s0)
20014e4c:	d27ff0ef          	jal	ra,20014b72 <find_closest_config>
20014e50:	fca42623          	sw	a0,-52(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:324
        if(config_index != -1)
20014e54:	fcc42703          	lw	a4,-52(s0)
20014e58:	57fd                	li	a5,-1
20014e5a:	02f70363          	beq	a4,a5,20014e80 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:326
        {
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
20014e5e:	fcc42783          	lw	a5,-52(s0)
20014e62:	00579713          	slli	a4,a5,0x5
20014e66:	200177b7          	lui	a5,0x20017
20014e6a:	57c78793          	addi	a5,a5,1404 # 2001757c <pll_configs>
20014e6e:	97ba                	add	a5,a5,a4
20014e70:	863e                	mv	a2,a5
20014e72:	fd442583          	lw	a1,-44(s0)
20014e76:	fd842503          	lw	a0,-40(s0)
20014e7a:	da5ff0ef          	jal	ra,20014c1e <configure_pll>
20014e7e:	a811                	j	20014e92 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:331
        }
        else
        {
            /* unable to find a valid configuration */
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20014e80:	fd842783          	lw	a5,-40(s0)
20014e84:	4398                	lw	a4,0(a5)
20014e86:	000407b7          	lui	a5,0x40
20014e8a:	8f5d                	or	a4,a4,a5
20014e8c:	fd842783          	lw	a5,-40(s0)
20014e90:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:336
        }
    }

    /* Enable the PLL */
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20014e92:	fd842783          	lw	a5,-40(s0)
20014e96:	4398                	lw	a4,0(a5)
20014e98:	67c1                	lui	a5,0x10
20014e9a:	8f5d                	or	a4,a4,a5
20014e9c:	fd842783          	lw	a5,-40(s0)
20014ea0:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:338

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20014ea2:	fbc42503          	lw	a0,-68(s0)
20014ea6:	b5dff0ef          	jal	ra,20014a02 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
20014eaa:	87aa                	mv	a5,a0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:339
}
20014eac:	853e                	mv	a0,a5
20014eae:	40b6                	lw	ra,76(sp)
20014eb0:	4426                	lw	s0,72(sp)
20014eb2:	6161                	addi	sp,sp,80
20014eb4:	8082                	ret

20014eb6 <use_hfxosc>:
use_hfxosc():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:344

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
static void use_hfxosc(void) __attribute__((constructor));
static void use_hfxosc(void)
{
20014eb6:	1101                	addi	sp,sp,-32
20014eb8:	ce06                	sw	ra,28(sp)
20014eba:	cc22                	sw	s0,24(sp)
20014ebc:	1000                	addi	s0,sp,32
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20014ebe:	9f1ff0ef          	jal	ra,200148ae <__metal_driver_sifive_fe310_g000_pll_init_rate>
20014ec2:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:346
    metal_clock_set_rate_hz(
20014ec6:	fec42583          	lw	a1,-20(s0)
20014eca:	800017b7          	lui	a5,0x80001
20014ece:	a7878513          	addi	a0,a5,-1416 # 80000a78 <metal_segment_heap_target_end+0xfffff308>
20014ed2:	10e010ef          	jal	ra,20015fe0 <metal_clock_set_rate_hz>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        &__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock, init_rate
    );
}
20014ed6:	0001                	nop
20014ed8:	40f2                	lw	ra,28(sp)
20014eda:	4462                	lw	s0,24(sp)
20014edc:	6105                	addi	sp,sp,32
20014ede:	8082                	ret

20014ee0 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1033
{
20014ee0:	1141                	addi	sp,sp,-16
20014ee2:	c622                	sw	s0,12(sp)
20014ee4:	0800                	addi	s0,sp,16
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1034
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20014ee6:	100087b7          	lui	a5,0x10008
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:1035
}
20014eea:	853e                	mv	a0,a5
20014eec:	4432                	lw	s0,12(sp)
20014eee:	0141                	addi	sp,sp,16
20014ef0:	8082                	ret

20014ef2 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:11
#ifdef METAL_SIFIVE_FE310_G000_PRCI

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20014ef2:	7179                	addi	sp,sp,-48
20014ef4:	d606                	sw	ra,44(sp)
20014ef6:	d422                	sw	s0,40(sp)
20014ef8:	1800                	addi	s0,sp,48
20014efa:	fca42e23          	sw	a0,-36(s0)
20014efe:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20014f02:	3ff9                	jal	20014ee0 <__metal_driver_sifive_fe310_g000_prci_base>
20014f04:	87aa                	mv	a5,a0
20014f06:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20014f0a:	fd842703          	lw	a4,-40(s0)
20014f0e:	fec42783          	lw	a5,-20(s0)
20014f12:	97ba                	add	a5,a5,a4
20014f14:	439c                	lw	a5,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
}
20014f16:	853e                	mv	a0,a5
20014f18:	50b2                	lw	ra,44(sp)
20014f1a:	5422                	lw	s0,40(sp)
20014f1c:	6145                	addi	sp,sp,48
20014f1e:	8082                	ret

20014f20 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:16

long __metal_driver_sifive_fe310_g000_prci_set_reg(const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset, long value) {
20014f20:	7179                	addi	sp,sp,-48
20014f22:	d606                	sw	ra,44(sp)
20014f24:	d422                	sw	s0,40(sp)
20014f26:	1800                	addi	s0,sp,48
20014f28:	fca42e23          	sw	a0,-36(s0)
20014f2c:	fcb42c23          	sw	a1,-40(s0)
20014f30:	fcc42a23          	sw	a2,-44(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:17
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20014f34:	3775                	jal	20014ee0 <__metal_driver_sifive_fe310_g000_prci_base>
20014f36:	87aa                	mv	a5,a0
20014f38:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:18
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20014f3c:	fd842703          	lw	a4,-40(s0)
20014f40:	fec42783          	lw	a5,-20(s0)
20014f44:	97ba                	add	a5,a5,a4
20014f46:	873e                	mv	a4,a5
20014f48:	fd442783          	lw	a5,-44(s0)
20014f4c:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19
}
20014f4e:	853e                	mv	a0,a5
20014f50:	50b2                	lw	ra,44(sp)
20014f52:	5422                	lw	s0,40(sp)
20014f54:	6145                	addi	sp,sp,48
20014f56:	8082                	ret

20014f58 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:380
{
20014f58:	1101                	addi	sp,sp,-32
20014f5a:	ce22                	sw	s0,28(sp)
20014f5c:	1000                	addi	s0,sp,32
20014f5e:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:381
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20014f62:	fec42703          	lw	a4,-20(s0)
20014f66:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
20014f6a:	00f71563          	bne	a4,a5,20014f74 <__metal_driver_sifive_gpio0_base+0x1c>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:382
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20014f6e:	100127b7          	lui	a5,0x10012
20014f72:	a011                	j	20014f76 <__metal_driver_sifive_gpio0_base+0x1e>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:385
		return 0;
20014f74:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:387
}
20014f76:	853e                	mv	a0,a5
20014f78:	4472                	lw	s0,28(sp)
20014f7a:	6105                	addi	sp,sp,32
20014f7c:	8082                	ret

20014f7e <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:410
{
20014f7e:	1101                	addi	sp,sp,-32
20014f80:	ce22                	sw	s0,28(sp)
20014f82:	1000                	addi	s0,sp,32
20014f84:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:411
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20014f88:	fec42703          	lw	a4,-20(s0)
20014f8c:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
20014f90:	00f71763          	bne	a4,a5,20014f9e <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:412
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20014f94:	800007b7          	lui	a5,0x80000
20014f98:	44878793          	addi	a5,a5,1096 # 80000448 <metal_segment_heap_target_end+0xffffecd8>
20014f9c:	a011                	j	20014fa0 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:415
		return 0;
20014f9e:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:417
}
20014fa0:	853e                	mv	a0,a5
20014fa2:	4472                	lw	s0,28(sp)
20014fa4:	6105                	addi	sp,sp,32
20014fa6:	8082                	ret

20014fa8 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:420
{
20014fa8:	1101                	addi	sp,sp,-32
20014faa:	ce22                	sw	s0,28(sp)
20014fac:	1000                	addi	s0,sp,32
20014fae:	fea42623          	sw	a0,-20(s0)
20014fb2:	feb42423          	sw	a1,-24(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:421
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20014fb6:	fec42703          	lw	a4,-20(s0)
20014fba:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
20014fbe:	00f71763          	bne	a4,a5,20014fcc <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:421 (discriminator 1)
20014fc2:	fe842783          	lw	a5,-24(s0)
20014fc6:	e399                	bnez	a5,20014fcc <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:422
		return 8;
20014fc8:	47a1                	li	a5,8
20014fca:	ae15                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:424
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20014fcc:	fec42703          	lw	a4,-20(s0)
20014fd0:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
20014fd4:	00f71963          	bne	a4,a5,20014fe6 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:424 (discriminator 1)
20014fd8:	fe842703          	lw	a4,-24(s0)
20014fdc:	4785                	li	a5,1
20014fde:	00f71463          	bne	a4,a5,20014fe6 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:425
		return 9;
20014fe2:	47a5                	li	a5,9
20014fe4:	ae29                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:427
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20014fe6:	fec42703          	lw	a4,-20(s0)
20014fea:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
20014fee:	00f71963          	bne	a4,a5,20015000 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:427 (discriminator 1)
20014ff2:	fe842703          	lw	a4,-24(s0)
20014ff6:	4789                	li	a5,2
20014ff8:	00f71463          	bne	a4,a5,20015000 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:428
		return 10;
20014ffc:	47a9                	li	a5,10
20014ffe:	a601                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:430
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20015000:	fec42703          	lw	a4,-20(s0)
20015004:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
20015008:	00f71963          	bne	a4,a5,2001501a <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:430 (discriminator 1)
2001500c:	fe842703          	lw	a4,-24(s0)
20015010:	478d                	li	a5,3
20015012:	00f71463          	bne	a4,a5,2001501a <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:431
		return 11;
20015016:	47ad                	li	a5,11
20015018:	a4dd                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:433
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
2001501a:	fec42703          	lw	a4,-20(s0)
2001501e:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
20015022:	00f71963          	bne	a4,a5,20015034 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:433 (discriminator 1)
20015026:	fe842703          	lw	a4,-24(s0)
2001502a:	4791                	li	a5,4
2001502c:	00f71463          	bne	a4,a5,20015034 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:434
		return 12;
20015030:	47b1                	li	a5,12
20015032:	a4f1                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:436
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20015034:	fec42703          	lw	a4,-20(s0)
20015038:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
2001503c:	00f71963          	bne	a4,a5,2001504e <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:436 (discriminator 1)
20015040:	fe842703          	lw	a4,-24(s0)
20015044:	4795                	li	a5,5
20015046:	00f71463          	bne	a4,a5,2001504e <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:437
		return 13;
2001504a:	47b5                	li	a5,13
2001504c:	ac4d                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:439
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
2001504e:	fec42703          	lw	a4,-20(s0)
20015052:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
20015056:	00f71963          	bne	a4,a5,20015068 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:439 (discriminator 1)
2001505a:	fe842703          	lw	a4,-24(s0)
2001505e:	4799                	li	a5,6
20015060:	00f71463          	bne	a4,a5,20015068 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:440
		return 14;
20015064:	47b9                	li	a5,14
20015066:	ac61                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:442
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
20015068:	fec42703          	lw	a4,-20(s0)
2001506c:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
20015070:	00f71963          	bne	a4,a5,20015082 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:442 (discriminator 1)
20015074:	fe842703          	lw	a4,-24(s0)
20015078:	479d                	li	a5,7
2001507a:	00f71463          	bne	a4,a5,20015082 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:443
		return 15;
2001507e:	47bd                	li	a5,15
20015080:	acbd                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:445
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
20015082:	fec42703          	lw	a4,-20(s0)
20015086:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
2001508a:	00f71963          	bne	a4,a5,2001509c <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:445 (discriminator 1)
2001508e:	fe842703          	lw	a4,-24(s0)
20015092:	47a1                	li	a5,8
20015094:	00f71463          	bne	a4,a5,2001509c <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:446
		return 16;
20015098:	47c1                	li	a5,16
2001509a:	a495                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:448
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
2001509c:	fec42703          	lw	a4,-20(s0)
200150a0:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
200150a4:	00f71963          	bne	a4,a5,200150b6 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:448 (discriminator 1)
200150a8:	fe842703          	lw	a4,-24(s0)
200150ac:	47a5                	li	a5,9
200150ae:	00f71463          	bne	a4,a5,200150b6 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:449
		return 17;
200150b2:	47c5                	li	a5,17
200150b4:	a4a9                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:451
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
200150b6:	fec42703          	lw	a4,-20(s0)
200150ba:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
200150be:	00f71963          	bne	a4,a5,200150d0 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:451 (discriminator 1)
200150c2:	fe842703          	lw	a4,-24(s0)
200150c6:	47a9                	li	a5,10
200150c8:	00f71463          	bne	a4,a5,200150d0 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:452
		return 18;
200150cc:	47c9                	li	a5,18
200150ce:	ac05                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:454
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
200150d0:	fec42703          	lw	a4,-20(s0)
200150d4:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
200150d8:	00f71963          	bne	a4,a5,200150ea <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:454 (discriminator 1)
200150dc:	fe842703          	lw	a4,-24(s0)
200150e0:	47ad                	li	a5,11
200150e2:	00f71463          	bne	a4,a5,200150ea <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:455
		return 19;
200150e6:	47cd                	li	a5,19
200150e8:	ac19                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:457
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
200150ea:	fec42703          	lw	a4,-20(s0)
200150ee:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
200150f2:	00f71963          	bne	a4,a5,20015104 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:457 (discriminator 1)
200150f6:	fe842703          	lw	a4,-24(s0)
200150fa:	47b1                	li	a5,12
200150fc:	00f71463          	bne	a4,a5,20015104 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:458
		return 20;
20015100:	47d1                	li	a5,20
20015102:	aaf5                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:460
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20015104:	fec42703          	lw	a4,-20(s0)
20015108:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
2001510c:	00f71963          	bne	a4,a5,2001511e <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:460 (discriminator 1)
20015110:	fe842703          	lw	a4,-24(s0)
20015114:	47b5                	li	a5,13
20015116:	00f71463          	bne	a4,a5,2001511e <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:461
		return 21;
2001511a:	47d5                	li	a5,21
2001511c:	a2cd                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:463
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
2001511e:	fec42703          	lw	a4,-20(s0)
20015122:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
20015126:	00f71963          	bne	a4,a5,20015138 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:463 (discriminator 1)
2001512a:	fe842703          	lw	a4,-24(s0)
2001512e:	47b9                	li	a5,14
20015130:	00f71463          	bne	a4,a5,20015138 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:464
		return 22;
20015134:	47d9                	li	a5,22
20015136:	a2e1                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:466
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20015138:	fec42703          	lw	a4,-20(s0)
2001513c:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
20015140:	00f71963          	bne	a4,a5,20015152 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:466 (discriminator 1)
20015144:	fe842703          	lw	a4,-24(s0)
20015148:	47bd                	li	a5,15
2001514a:	00f71463          	bne	a4,a5,20015152 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:467
		return 23;
2001514e:	47dd                	li	a5,23
20015150:	a27d                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:469
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 16))) {
20015152:	fec42703          	lw	a4,-20(s0)
20015156:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
2001515a:	00f71963          	bne	a4,a5,2001516c <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:469 (discriminator 1)
2001515e:	fe842703          	lw	a4,-24(s0)
20015162:	47c1                	li	a5,16
20015164:	00f71463          	bne	a4,a5,2001516c <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:470
		return 24;
20015168:	47e1                	li	a5,24
2001516a:	aa51                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:472
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 17))) {
2001516c:	fec42703          	lw	a4,-20(s0)
20015170:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
20015174:	00f71963          	bne	a4,a5,20015186 <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:472 (discriminator 1)
20015178:	fe842703          	lw	a4,-24(s0)
2001517c:	47c5                	li	a5,17
2001517e:	00f71463          	bne	a4,a5,20015186 <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:473
		return 25;
20015182:	47e5                	li	a5,25
20015184:	aaad                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:475
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 18))) {
20015186:	fec42703          	lw	a4,-20(s0)
2001518a:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
2001518e:	00f71963          	bne	a4,a5,200151a0 <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:475 (discriminator 1)
20015192:	fe842703          	lw	a4,-24(s0)
20015196:	47c9                	li	a5,18
20015198:	00f71463          	bne	a4,a5,200151a0 <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:476
		return 26;
2001519c:	47e9                	li	a5,26
2001519e:	a285                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:478
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 19))) {
200151a0:	fec42703          	lw	a4,-20(s0)
200151a4:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
200151a8:	00f71963          	bne	a4,a5,200151ba <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:478 (discriminator 1)
200151ac:	fe842703          	lw	a4,-24(s0)
200151b0:	47cd                	li	a5,19
200151b2:	00f71463          	bne	a4,a5,200151ba <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:479
		return 27;
200151b6:	47ed                	li	a5,27
200151b8:	a299                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:481
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 20))) {
200151ba:	fec42703          	lw	a4,-20(s0)
200151be:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
200151c2:	00f71963          	bne	a4,a5,200151d4 <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:481 (discriminator 1)
200151c6:	fe842703          	lw	a4,-24(s0)
200151ca:	47d1                	li	a5,20
200151cc:	00f71463          	bne	a4,a5,200151d4 <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:482
		return 28;
200151d0:	47f1                	li	a5,28
200151d2:	a235                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:484
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 21))) {
200151d4:	fec42703          	lw	a4,-20(s0)
200151d8:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
200151dc:	00f71963          	bne	a4,a5,200151ee <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:484 (discriminator 1)
200151e0:	fe842703          	lw	a4,-24(s0)
200151e4:	47d5                	li	a5,21
200151e6:	00f71463          	bne	a4,a5,200151ee <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:485
		return 29;
200151ea:	47f5                	li	a5,29
200151ec:	aa09                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:487
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 22))) {
200151ee:	fec42703          	lw	a4,-20(s0)
200151f2:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
200151f6:	00f71963          	bne	a4,a5,20015208 <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:487 (discriminator 1)
200151fa:	fe842703          	lw	a4,-24(s0)
200151fe:	47d9                	li	a5,22
20015200:	00f71463          	bne	a4,a5,20015208 <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:488
		return 30;
20015204:	47f9                	li	a5,30
20015206:	a8e5                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:490
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 23))) {
20015208:	fec42703          	lw	a4,-20(s0)
2001520c:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
20015210:	00f71963          	bne	a4,a5,20015222 <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:490 (discriminator 1)
20015214:	fe842703          	lw	a4,-24(s0)
20015218:	47dd                	li	a5,23
2001521a:	00f71463          	bne	a4,a5,20015222 <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:491
		return 31;
2001521e:	47fd                	li	a5,31
20015220:	a8f9                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:493
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 24))) {
20015222:	fec42703          	lw	a4,-20(s0)
20015226:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
2001522a:	00f71a63          	bne	a4,a5,2001523e <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:493 (discriminator 1)
2001522e:	fe842703          	lw	a4,-24(s0)
20015232:	47e1                	li	a5,24
20015234:	00f71563          	bne	a4,a5,2001523e <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:494
		return 32;
20015238:	02000793          	li	a5,32
2001523c:	a0c9                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:496
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 25))) {
2001523e:	fec42703          	lw	a4,-20(s0)
20015242:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
20015246:	00f71a63          	bne	a4,a5,2001525a <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:496 (discriminator 1)
2001524a:	fe842703          	lw	a4,-24(s0)
2001524e:	47e5                	li	a5,25
20015250:	00f71563          	bne	a4,a5,2001525a <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:497
		return 33;
20015254:	02100793          	li	a5,33
20015258:	a05d                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:499
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 26))) {
2001525a:	fec42703          	lw	a4,-20(s0)
2001525e:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
20015262:	00f71a63          	bne	a4,a5,20015276 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:499 (discriminator 1)
20015266:	fe842703          	lw	a4,-24(s0)
2001526a:	47e9                	li	a5,26
2001526c:	00f71563          	bne	a4,a5,20015276 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:500
		return 34;
20015270:	02200793          	li	a5,34
20015274:	a069                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:502
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 27))) {
20015276:	fec42703          	lw	a4,-20(s0)
2001527a:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
2001527e:	00f71a63          	bne	a4,a5,20015292 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:502 (discriminator 1)
20015282:	fe842703          	lw	a4,-24(s0)
20015286:	47ed                	li	a5,27
20015288:	00f71563          	bne	a4,a5,20015292 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:503
		return 35;
2001528c:	02300793          	li	a5,35
20015290:	a0bd                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:505
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 28))) {
20015292:	fec42703          	lw	a4,-20(s0)
20015296:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
2001529a:	00f71a63          	bne	a4,a5,200152ae <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:505 (discriminator 1)
2001529e:	fe842703          	lw	a4,-24(s0)
200152a2:	47f1                	li	a5,28
200152a4:	00f71563          	bne	a4,a5,200152ae <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:506
		return 36;
200152a8:	02400793          	li	a5,36
200152ac:	a889                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:508
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 29))) {
200152ae:	fec42703          	lw	a4,-20(s0)
200152b2:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
200152b6:	00f71963          	bne	a4,a5,200152c8 <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:508 (discriminator 1)
200152ba:	fe842703          	lw	a4,-24(s0)
200152be:	47f5                	li	a5,29
200152c0:	00f71463          	bne	a4,a5,200152c8 <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:509
		return 27;
200152c4:	47ed                	li	a5,27
200152c6:	a825                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:511
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 30))) {
200152c8:	fec42703          	lw	a4,-20(s0)
200152cc:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
200152d0:	00f71963          	bne	a4,a5,200152e2 <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:511 (discriminator 1)
200152d4:	fe842703          	lw	a4,-24(s0)
200152d8:	47f9                	li	a5,30
200152da:	00f71463          	bne	a4,a5,200152e2 <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:512
		return 28;
200152de:	47f1                	li	a5,28
200152e0:	a839                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:514
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 31))) {
200152e2:	fec42703          	lw	a4,-20(s0)
200152e6:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
200152ea:	00f71963          	bne	a4,a5,200152fc <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:514 (discriminator 1)
200152ee:	fe842703          	lw	a4,-24(s0)
200152f2:	47fd                	li	a5,31
200152f4:	00f71463          	bne	a4,a5,200152fc <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:515
		return 29;
200152f8:	47f5                	li	a5,29
200152fa:	a011                	j	200152fe <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:518
		return 0;
200152fc:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:520
}
200152fe:	853e                	mv	a0,a5
20015300:	4472                	lw	s0,28(sp)
20015302:	6105                	addi	sp,sp,32
20015304:	8082                	ret

20015306 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio, long source)
{
20015306:	7179                	addi	sp,sp,-48
20015308:	d606                	sw	ra,44(sp)
2001530a:	d422                	sw	s0,40(sp)
2001530c:	1800                	addi	s0,sp,48
2001530e:	fca42e23          	sw	a0,-36(s0)
20015312:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015316:	fdc42503          	lw	a0,-36(s0)
2001531a:	c3fff0ef          	jal	ra,20014f58 <__metal_driver_sifive_gpio0_base>
2001531e:	87aa                	mv	a5,a0
20015320:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:16

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN))  |= source;
20015324:	fec42783          	lw	a5,-20(s0)
20015328:	0791                	addi	a5,a5,4
2001532a:	4398                	lw	a4,0(a5)
2001532c:	fd842783          	lw	a5,-40(s0)
20015330:	fec42683          	lw	a3,-20(s0)
20015334:	0691                	addi	a3,a3,4
20015336:	8fd9                	or	a5,a5,a4
20015338:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:18

    return 0;
2001533a:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:19
}
2001533c:	853e                	mv	a0,a5
2001533e:	50b2                	lw	ra,44(sp)
20015340:	5422                	lw	s0,40(sp)
20015342:	6145                	addi	sp,sp,48
20015344:	8082                	ret

20015346 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:22

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio, long source)
{
20015346:	7179                	addi	sp,sp,-48
20015348:	d606                	sw	ra,44(sp)
2001534a:	d422                	sw	s0,40(sp)
2001534c:	1800                	addi	s0,sp,48
2001534e:	fca42e23          	sw	a0,-36(s0)
20015352:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:23
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015356:	fdc42503          	lw	a0,-36(s0)
2001535a:	bffff0ef          	jal	ra,20014f58 <__metal_driver_sifive_gpio0_base>
2001535e:	87aa                	mv	a5,a0
20015360:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:25

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN))  &= ~source;
20015364:	fec42783          	lw	a5,-20(s0)
20015368:	0791                	addi	a5,a5,4
2001536a:	439c                	lw	a5,0(a5)
2001536c:	fd842703          	lw	a4,-40(s0)
20015370:	fff74713          	not	a4,a4
20015374:	86ba                	mv	a3,a4
20015376:	fec42703          	lw	a4,-20(s0)
2001537a:	0711                	addi	a4,a4,4
2001537c:	8ff5                	and	a5,a5,a3
2001537e:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:27

    return 0;
20015380:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:28
}
20015382:	853e                	mv	a0,a5
20015384:	50b2                	lw	ra,44(sp)
20015386:	5422                	lw	s0,40(sp)
20015388:	6145                	addi	sp,sp,48
2001538a:	8082                	ret

2001538c <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:31

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio)
{
2001538c:	7179                	addi	sp,sp,-48
2001538e:	d606                	sw	ra,44(sp)
20015390:	d422                	sw	s0,40(sp)
20015392:	1800                	addi	s0,sp,48
20015394:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:32
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015398:	fdc42503          	lw	a0,-36(s0)
2001539c:	bbdff0ef          	jal	ra,20014f58 <__metal_driver_sifive_gpio0_base>
200153a0:	87aa                	mv	a5,a0
200153a2:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:34

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
200153a6:	fec42783          	lw	a5,-20(s0)
200153aa:	439c                	lw	a5,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:35
}
200153ac:	853e                	mv	a0,a5
200153ae:	50b2                	lw	ra,44(sp)
200153b0:	5422                	lw	s0,40(sp)
200153b2:	6145                	addi	sp,sp,48
200153b4:	8082                	ret

200153b6 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:38

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio)
{
200153b6:	7179                	addi	sp,sp,-48
200153b8:	d606                	sw	ra,44(sp)
200153ba:	d422                	sw	s0,40(sp)
200153bc:	1800                	addi	s0,sp,48
200153be:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:39
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200153c2:	fdc42503          	lw	a0,-36(s0)
200153c6:	b93ff0ef          	jal	ra,20014f58 <__metal_driver_sifive_gpio0_base>
200153ca:	87aa                	mv	a5,a0
200153cc:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:41

    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
200153d0:	fec42783          	lw	a5,-20(s0)
200153d4:	07b1                	addi	a5,a5,12
200153d6:	439c                	lw	a5,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:42
}
200153d8:	853e                	mv	a0,a5
200153da:	50b2                	lw	ra,44(sp)
200153dc:	5422                	lw	s0,40(sp)
200153de:	6145                	addi	sp,sp,48
200153e0:	8082                	ret

200153e2 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:46


int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio, long source)
{
200153e2:	7179                	addi	sp,sp,-48
200153e4:	d606                	sw	ra,44(sp)
200153e6:	d422                	sw	s0,40(sp)
200153e8:	1800                	addi	s0,sp,48
200153ea:	fca42e23          	sw	a0,-36(s0)
200153ee:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:47
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200153f2:	fdc42503          	lw	a0,-36(s0)
200153f6:	b63ff0ef          	jal	ra,20014f58 <__metal_driver_sifive_gpio0_base>
200153fa:	87aa                	mv	a5,a0
200153fc:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:49

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN))  &= ~source;
20015400:	fec42783          	lw	a5,-20(s0)
20015404:	07a1                	addi	a5,a5,8
20015406:	439c                	lw	a5,0(a5)
20015408:	fd842703          	lw	a4,-40(s0)
2001540c:	fff74713          	not	a4,a4
20015410:	86ba                	mv	a3,a4
20015412:	fec42703          	lw	a4,-20(s0)
20015416:	0721                	addi	a4,a4,8
20015418:	8ff5                	and	a5,a5,a3
2001541a:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:51

    return 0;
2001541c:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:52
}
2001541e:	853e                	mv	a0,a5
20015420:	50b2                	lw	ra,44(sp)
20015422:	5422                	lw	s0,40(sp)
20015424:	6145                	addi	sp,sp,48
20015426:	8082                	ret

20015428 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:55

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio, long source)
{
20015428:	7179                	addi	sp,sp,-48
2001542a:	d606                	sw	ra,44(sp)
2001542c:	d422                	sw	s0,40(sp)
2001542e:	1800                	addi	s0,sp,48
20015430:	fca42e23          	sw	a0,-36(s0)
20015434:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:56
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015438:	fdc42503          	lw	a0,-36(s0)
2001543c:	b1dff0ef          	jal	ra,20014f58 <__metal_driver_sifive_gpio0_base>
20015440:	87aa                	mv	a5,a0
20015442:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:58

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN))  |= source;
20015446:	fec42783          	lw	a5,-20(s0)
2001544a:	07a1                	addi	a5,a5,8
2001544c:	4398                	lw	a4,0(a5)
2001544e:	fd842783          	lw	a5,-40(s0)
20015452:	fec42683          	lw	a3,-20(s0)
20015456:	06a1                	addi	a3,a3,8
20015458:	8fd9                	or	a5,a5,a4
2001545a:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:60

    return 0;
2001545c:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:61
}
2001545e:	853e                	mv	a0,a5
20015460:	50b2                	lw	ra,44(sp)
20015462:	5422                	lw	s0,40(sp)
20015464:	6145                	addi	sp,sp,48
20015466:	8082                	ret

20015468 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:64

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio, long value)
{
20015468:	7179                	addi	sp,sp,-48
2001546a:	d606                	sw	ra,44(sp)
2001546c:	d422                	sw	s0,40(sp)
2001546e:	1800                	addi	s0,sp,48
20015470:	fca42e23          	sw	a0,-36(s0)
20015474:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:65
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015478:	fdc42503          	lw	a0,-36(s0)
2001547c:	addff0ef          	jal	ra,20014f58 <__metal_driver_sifive_gpio0_base>
20015480:	87aa                	mv	a5,a0
20015482:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:67

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |= value;
20015486:	fec42783          	lw	a5,-20(s0)
2001548a:	07b1                	addi	a5,a5,12
2001548c:	4398                	lw	a4,0(a5)
2001548e:	fd842783          	lw	a5,-40(s0)
20015492:	fec42683          	lw	a3,-20(s0)
20015496:	06b1                	addi	a3,a3,12
20015498:	8fd9                	or	a5,a5,a4
2001549a:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:69

    return 0;
2001549c:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:70
}
2001549e:	853e                	mv	a0,a5
200154a0:	50b2                	lw	ra,44(sp)
200154a2:	5422                	lw	s0,40(sp)
200154a4:	6145                	addi	sp,sp,48
200154a6:	8082                	ret

200154a8 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:73

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio, long value)
{
200154a8:	7179                	addi	sp,sp,-48
200154aa:	d606                	sw	ra,44(sp)
200154ac:	d422                	sw	s0,40(sp)
200154ae:	1800                	addi	s0,sp,48
200154b0:	fca42e23          	sw	a0,-36(s0)
200154b4:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:74
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200154b8:	fdc42503          	lw	a0,-36(s0)
200154bc:	a9dff0ef          	jal	ra,20014f58 <__metal_driver_sifive_gpio0_base>
200154c0:	87aa                	mv	a5,a0
200154c2:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:76

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &= ~value;
200154c6:	fec42783          	lw	a5,-20(s0)
200154ca:	07b1                	addi	a5,a5,12
200154cc:	439c                	lw	a5,0(a5)
200154ce:	fd842703          	lw	a4,-40(s0)
200154d2:	fff74713          	not	a4,a4
200154d6:	86ba                	mv	a3,a4
200154d8:	fec42703          	lw	a4,-20(s0)
200154dc:	0731                	addi	a4,a4,12
200154de:	8ff5                	and	a5,a5,a3
200154e0:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:78

    return 0;
200154e2:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:79
}
200154e4:	853e                	mv	a0,a5
200154e6:	50b2                	lw	ra,44(sp)
200154e8:	5422                	lw	s0,40(sp)
200154ea:	6145                	addi	sp,sp,48
200154ec:	8082                	ret

200154ee <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:82

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio, long value)
{
200154ee:	7179                	addi	sp,sp,-48
200154f0:	d606                	sw	ra,44(sp)
200154f2:	d422                	sw	s0,40(sp)
200154f4:	1800                	addi	s0,sp,48
200154f6:	fca42e23          	sw	a0,-36(s0)
200154fa:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:83
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200154fe:	fdc42503          	lw	a0,-36(s0)
20015502:	a57ff0ef          	jal	ra,20014f58 <__metal_driver_sifive_gpio0_base>
20015506:	87aa                	mv	a5,a0
20015508:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:86

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
	__METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^ value;
2001550c:	fec42783          	lw	a5,-20(s0)
20015510:	07b1                	addi	a5,a5,12
20015512:	4398                	lw	a4,0(a5)
20015514:	fd842783          	lw	a5,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:85
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20015518:	fec42683          	lw	a3,-20(s0)
2001551c:	06b1                	addi	a3,a3,12
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:86
	__METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^ value;
2001551e:	8fb9                	xor	a5,a5,a4
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:85
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20015520:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:88

    return 0;
20015522:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:89
}
20015524:	853e                	mv	a0,a5
20015526:	50b2                	lw	ra,44(sp)
20015528:	5422                	lw	s0,40(sp)
2001552a:	6145                	addi	sp,sp,48
2001552c:	8082                	ret

2001552e <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:92

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source, long dest)
{
2001552e:	7179                	addi	sp,sp,-48
20015530:	d606                	sw	ra,44(sp)
20015532:	d422                	sw	s0,40(sp)
20015534:	1800                	addi	s0,sp,48
20015536:	fca42e23          	sw	a0,-36(s0)
2001553a:	fcb42c23          	sw	a1,-40(s0)
2001553e:	fcc42a23          	sw	a2,-44(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:93
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015542:	fdc42503          	lw	a0,-36(s0)
20015546:	a13ff0ef          	jal	ra,20014f58 <__metal_driver_sifive_gpio0_base>
2001554a:	87aa                	mv	a5,a0
2001554c:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:95

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) &= ~source;
20015550:	fec42783          	lw	a5,-20(s0)
20015554:	03c78793          	addi	a5,a5,60
20015558:	439c                	lw	a5,0(a5)
2001555a:	fd842703          	lw	a4,-40(s0)
2001555e:	fff74713          	not	a4,a4
20015562:	86ba                	mv	a3,a4
20015564:	fec42703          	lw	a4,-20(s0)
20015568:	03c70713          	addi	a4,a4,60
2001556c:	8ff5                	and	a5,a5,a3
2001556e:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:96
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN))  |= dest;
20015570:	fec42783          	lw	a5,-20(s0)
20015574:	03878793          	addi	a5,a5,56
20015578:	4398                	lw	a4,0(a5)
2001557a:	fd442783          	lw	a5,-44(s0)
2001557e:	fec42683          	lw	a3,-20(s0)
20015582:	03868693          	addi	a3,a3,56
20015586:	8fd9                	or	a5,a5,a4
20015588:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:98

    return 0;
2001558a:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:99
}
2001558c:	853e                	mv	a0,a5
2001558e:	50b2                	lw	ra,44(sp)
20015590:	5422                	lw	s0,40(sp)
20015592:	6145                	addi	sp,sp,48
20015594:	8082                	ret

20015596 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:102

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio, long source)
{
20015596:	7179                	addi	sp,sp,-48
20015598:	d606                	sw	ra,44(sp)
2001559a:	d422                	sw	s0,40(sp)
2001559c:	1800                	addi	s0,sp,48
2001559e:	fca42e23          	sw	a0,-36(s0)
200155a2:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:103
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200155a6:	fdc42503          	lw	a0,-36(s0)
200155aa:	9afff0ef          	jal	ra,20014f58 <__metal_driver_sifive_gpio0_base>
200155ae:	87aa                	mv	a5,a0
200155b0:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:105

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN))  &= ~source;
200155b4:	fec42783          	lw	a5,-20(s0)
200155b8:	03878793          	addi	a5,a5,56
200155bc:	439c                	lw	a5,0(a5)
200155be:	fd842703          	lw	a4,-40(s0)
200155c2:	fff74713          	not	a4,a4
200155c6:	86ba                	mv	a3,a4
200155c8:	fec42703          	lw	a4,-20(s0)
200155cc:	03870713          	addi	a4,a4,56
200155d0:	8ff5                	and	a5,a5,a3
200155d2:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:107

    return 0;
200155d4:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:108
}
200155d6:	853e                	mv	a0,a5
200155d8:	50b2                	lw	ra,44(sp)
200155da:	5422                	lw	s0,40(sp)
200155dc:	6145                	addi	sp,sp,48
200155de:	8082                	ret

200155e0 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio, long source, int intr_type)
{
200155e0:	7179                	addi	sp,sp,-48
200155e2:	d606                	sw	ra,44(sp)
200155e4:	d422                	sw	s0,40(sp)
200155e6:	1800                	addi	s0,sp,48
200155e8:	fca42e23          	sw	a0,-36(s0)
200155ec:	fcb42c23          	sw	a1,-40(s0)
200155f0:	fcc42a23          	sw	a2,-44(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200155f4:	fdc42503          	lw	a0,-36(s0)
200155f8:	961ff0ef          	jal	ra,20014f58 <__metal_driver_sifive_gpio0_base>
200155fc:	87aa                	mv	a5,a0
200155fe:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:114

    switch (intr_type)
20015602:	fd442703          	lw	a4,-44(s0)
20015606:	479d                	li	a5,7
20015608:	1ce7e963          	bltu	a5,a4,200157da <__metal_driver_sifive_gpio0_config_int+0x1fa>
2001560c:	fd442783          	lw	a5,-44(s0)
20015610:	00279713          	slli	a4,a5,0x2
20015614:	200187b7          	lui	a5,0x20018
20015618:	e0878793          	addi	a5,a5,-504 # 20017e08 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
2001561c:	97ba                	add	a5,a5,a4
2001561e:	439c                	lw	a5,0(a5)
20015620:	8782                	jr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:117
    {
        case METAL_GPIO_INT_DISABLE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  &= ~source;
20015622:	fec42783          	lw	a5,-20(s0)
20015626:	07e1                	addi	a5,a5,24
20015628:	439c                	lw	a5,0(a5)
2001562a:	fd842703          	lw	a4,-40(s0)
2001562e:	fff74713          	not	a4,a4
20015632:	86ba                	mv	a3,a4
20015634:	fec42703          	lw	a4,-20(s0)
20015638:	0761                	addi	a4,a4,24
2001563a:	8ff5                	and	a5,a5,a3
2001563c:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:118
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  &= ~source;
2001563e:	fec42783          	lw	a5,-20(s0)
20015642:	02078793          	addi	a5,a5,32
20015646:	439c                	lw	a5,0(a5)
20015648:	fd842703          	lw	a4,-40(s0)
2001564c:	fff74713          	not	a4,a4
20015650:	86ba                	mv	a3,a4
20015652:	fec42703          	lw	a4,-20(s0)
20015656:	02070713          	addi	a4,a4,32
2001565a:	8ff5                	and	a5,a5,a3
2001565c:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:119
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  &= ~source;
2001565e:	fec42783          	lw	a5,-20(s0)
20015662:	02878793          	addi	a5,a5,40
20015666:	439c                	lw	a5,0(a5)
20015668:	fd842703          	lw	a4,-40(s0)
2001566c:	fff74713          	not	a4,a4
20015670:	86ba                	mv	a3,a4
20015672:	fec42703          	lw	a4,-20(s0)
20015676:	02870713          	addi	a4,a4,40
2001567a:	8ff5                	and	a5,a5,a3
2001567c:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:120
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  &= ~source;
2001567e:	fec42783          	lw	a5,-20(s0)
20015682:	03078793          	addi	a5,a5,48
20015686:	439c                	lw	a5,0(a5)
20015688:	fd842703          	lw	a4,-40(s0)
2001568c:	fff74713          	not	a4,a4
20015690:	86ba                	mv	a3,a4
20015692:	fec42703          	lw	a4,-20(s0)
20015696:	03070713          	addi	a4,a4,48
2001569a:	8ff5                	and	a5,a5,a3
2001569c:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:121
            break;
2001569e:	aa35                	j	200157da <__metal_driver_sifive_gpio0_config_int+0x1fa>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:123
        case METAL_GPIO_INT_RISING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
200156a0:	fec42783          	lw	a5,-20(s0)
200156a4:	07e1                	addi	a5,a5,24
200156a6:	4398                	lw	a4,0(a5)
200156a8:	fd842783          	lw	a5,-40(s0)
200156ac:	fec42683          	lw	a3,-20(s0)
200156b0:	06e1                	addi	a3,a3,24
200156b2:	8fd9                	or	a5,a5,a4
200156b4:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:124
            break;
200156b6:	a215                	j	200157da <__metal_driver_sifive_gpio0_config_int+0x1fa>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:126
        case METAL_GPIO_INT_FALLING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
200156b8:	fec42783          	lw	a5,-20(s0)
200156bc:	02078793          	addi	a5,a5,32
200156c0:	4398                	lw	a4,0(a5)
200156c2:	fd842783          	lw	a5,-40(s0)
200156c6:	fec42683          	lw	a3,-20(s0)
200156ca:	02068693          	addi	a3,a3,32
200156ce:	8fd9                	or	a5,a5,a4
200156d0:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:127
            break;
200156d2:	a221                	j	200157da <__metal_driver_sifive_gpio0_config_int+0x1fa>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:129
        case METAL_GPIO_INT_BOTH_EDGE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
200156d4:	fec42783          	lw	a5,-20(s0)
200156d8:	07e1                	addi	a5,a5,24
200156da:	4398                	lw	a4,0(a5)
200156dc:	fd842783          	lw	a5,-40(s0)
200156e0:	fec42683          	lw	a3,-20(s0)
200156e4:	06e1                	addi	a3,a3,24
200156e6:	8fd9                	or	a5,a5,a4
200156e8:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:130
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
200156ea:	fec42783          	lw	a5,-20(s0)
200156ee:	02078793          	addi	a5,a5,32
200156f2:	4398                	lw	a4,0(a5)
200156f4:	fd842783          	lw	a5,-40(s0)
200156f8:	fec42683          	lw	a3,-20(s0)
200156fc:	02068693          	addi	a3,a3,32
20015700:	8fd9                	or	a5,a5,a4
20015702:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:131
            break;
20015704:	a8d9                	j	200157da <__metal_driver_sifive_gpio0_config_int+0x1fa>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:133
        case METAL_GPIO_INT_HIGH:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
20015706:	fec42783          	lw	a5,-20(s0)
2001570a:	02878793          	addi	a5,a5,40
2001570e:	4398                	lw	a4,0(a5)
20015710:	fd842783          	lw	a5,-40(s0)
20015714:	fec42683          	lw	a3,-20(s0)
20015718:	02868693          	addi	a3,a3,40
2001571c:	8fd9                	or	a5,a5,a4
2001571e:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:134
            break;
20015720:	a86d                	j	200157da <__metal_driver_sifive_gpio0_config_int+0x1fa>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:136
        case METAL_GPIO_INT_LOW:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
20015722:	fec42783          	lw	a5,-20(s0)
20015726:	03078793          	addi	a5,a5,48
2001572a:	4398                	lw	a4,0(a5)
2001572c:	fd842783          	lw	a5,-40(s0)
20015730:	fec42683          	lw	a3,-20(s0)
20015734:	03068693          	addi	a3,a3,48
20015738:	8fd9                	or	a5,a5,a4
2001573a:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:137
            break;
2001573c:	a879                	j	200157da <__metal_driver_sifive_gpio0_config_int+0x1fa>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:139
        case METAL_GPIO_INT_BOTH_LEVEL:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
2001573e:	fec42783          	lw	a5,-20(s0)
20015742:	02878793          	addi	a5,a5,40
20015746:	4398                	lw	a4,0(a5)
20015748:	fd842783          	lw	a5,-40(s0)
2001574c:	fec42683          	lw	a3,-20(s0)
20015750:	02868693          	addi	a3,a3,40
20015754:	8fd9                	or	a5,a5,a4
20015756:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:140
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
20015758:	fec42783          	lw	a5,-20(s0)
2001575c:	03078793          	addi	a5,a5,48
20015760:	4398                	lw	a4,0(a5)
20015762:	fd842783          	lw	a5,-40(s0)
20015766:	fec42683          	lw	a3,-20(s0)
2001576a:	03068693          	addi	a3,a3,48
2001576e:	8fd9                	or	a5,a5,a4
20015770:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:141
            break;
20015772:	a0a5                	j	200157da <__metal_driver_sifive_gpio0_config_int+0x1fa>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:143
        case METAL_GPIO_INT_MAX:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE))  |= source;
20015774:	fec42783          	lw	a5,-20(s0)
20015778:	07e1                	addi	a5,a5,24
2001577a:	4398                	lw	a4,0(a5)
2001577c:	fd842783          	lw	a5,-40(s0)
20015780:	fec42683          	lw	a3,-20(s0)
20015784:	06e1                	addi	a3,a3,24
20015786:	8fd9                	or	a5,a5,a4
20015788:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:144
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE))  |= source;
2001578a:	fec42783          	lw	a5,-20(s0)
2001578e:	02078793          	addi	a5,a5,32
20015792:	4398                	lw	a4,0(a5)
20015794:	fd842783          	lw	a5,-40(s0)
20015798:	fec42683          	lw	a3,-20(s0)
2001579c:	02068693          	addi	a3,a3,32
200157a0:	8fd9                	or	a5,a5,a4
200157a2:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:145
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE))  |= source;
200157a4:	fec42783          	lw	a5,-20(s0)
200157a8:	02878793          	addi	a5,a5,40
200157ac:	4398                	lw	a4,0(a5)
200157ae:	fd842783          	lw	a5,-40(s0)
200157b2:	fec42683          	lw	a3,-20(s0)
200157b6:	02868693          	addi	a3,a3,40
200157ba:	8fd9                	or	a5,a5,a4
200157bc:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:146
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE))  |= source;
200157be:	fec42783          	lw	a5,-20(s0)
200157c2:	03078793          	addi	a5,a5,48
200157c6:	4398                	lw	a4,0(a5)
200157c8:	fd842783          	lw	a5,-40(s0)
200157cc:	fec42683          	lw	a3,-20(s0)
200157d0:	03068693          	addi	a3,a3,48
200157d4:	8fd9                	or	a5,a5,a4
200157d6:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:147
            break;
200157d8:	0001                	nop
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:149
    }
    return 0;
200157da:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:150
}
200157dc:	853e                	mv	a0,a5
200157de:	50b2                	lw	ra,44(sp)
200157e0:	5422                	lw	s0,40(sp)
200157e2:	6145                	addi	sp,sp,48
200157e4:	8082                	ret

200157e6 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:153

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source, int intr_type)
{
200157e6:	7179                	addi	sp,sp,-48
200157e8:	d606                	sw	ra,44(sp)
200157ea:	d422                	sw	s0,40(sp)
200157ec:	1800                	addi	s0,sp,48
200157ee:	fca42e23          	sw	a0,-36(s0)
200157f2:	fcb42c23          	sw	a1,-40(s0)
200157f6:	fcc42a23          	sw	a2,-44(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:154
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200157fa:	fdc42503          	lw	a0,-36(s0)
200157fe:	f5aff0ef          	jal	ra,20014f58 <__metal_driver_sifive_gpio0_base>
20015802:	87aa                	mv	a5,a0
20015804:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:156

    switch (intr_type)
20015808:	fd442703          	lw	a4,-44(s0)
2001580c:	479d                	li	a5,7
2001580e:	14e7ea63          	bltu	a5,a4,20015962 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20015812:	fd442783          	lw	a5,-44(s0)
20015816:	00279713          	slli	a4,a5,0x2
2001581a:	200187b7          	lui	a5,0x20018
2001581e:	e2878793          	addi	a5,a5,-472 # 20017e28 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20015822:	97ba                	add	a5,a5,a4
20015824:	439c                	lw	a5,0(a5)
20015826:	8782                	jr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:159
    {
        case METAL_GPIO_INT_RISING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
20015828:	fec42783          	lw	a5,-20(s0)
2001582c:	07f1                	addi	a5,a5,28
2001582e:	4398                	lw	a4,0(a5)
20015830:	fd842783          	lw	a5,-40(s0)
20015834:	fec42683          	lw	a3,-20(s0)
20015838:	06f1                	addi	a3,a3,28
2001583a:	8fd9                	or	a5,a5,a4
2001583c:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:160
            break;
2001583e:	a215                	j	20015962 <__metal_driver_sifive_gpio0_clear_int+0x17c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:162
        case METAL_GPIO_INT_FALLING:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
20015840:	fec42783          	lw	a5,-20(s0)
20015844:	02478793          	addi	a5,a5,36
20015848:	4398                	lw	a4,0(a5)
2001584a:	fd842783          	lw	a5,-40(s0)
2001584e:	fec42683          	lw	a3,-20(s0)
20015852:	02468693          	addi	a3,a3,36
20015856:	8fd9                	or	a5,a5,a4
20015858:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:163
            break;
2001585a:	a221                	j	20015962 <__metal_driver_sifive_gpio0_clear_int+0x17c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:165
        case METAL_GPIO_INT_BOTH_EDGE:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
2001585c:	fec42783          	lw	a5,-20(s0)
20015860:	07f1                	addi	a5,a5,28
20015862:	4398                	lw	a4,0(a5)
20015864:	fd842783          	lw	a5,-40(s0)
20015868:	fec42683          	lw	a3,-20(s0)
2001586c:	06f1                	addi	a3,a3,28
2001586e:	8fd9                	or	a5,a5,a4
20015870:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:166
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
20015872:	fec42783          	lw	a5,-20(s0)
20015876:	02478793          	addi	a5,a5,36
2001587a:	4398                	lw	a4,0(a5)
2001587c:	fd842783          	lw	a5,-40(s0)
20015880:	fec42683          	lw	a3,-20(s0)
20015884:	02468693          	addi	a3,a3,36
20015888:	8fd9                	or	a5,a5,a4
2001588a:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:167
            break;
2001588c:	a8d9                	j	20015962 <__metal_driver_sifive_gpio0_clear_int+0x17c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:169
        case METAL_GPIO_INT_HIGH:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
2001588e:	fec42783          	lw	a5,-20(s0)
20015892:	02c78793          	addi	a5,a5,44
20015896:	4398                	lw	a4,0(a5)
20015898:	fd842783          	lw	a5,-40(s0)
2001589c:	fec42683          	lw	a3,-20(s0)
200158a0:	02c68693          	addi	a3,a3,44
200158a4:	8fd9                	or	a5,a5,a4
200158a6:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:170
            break;
200158a8:	a86d                	j	20015962 <__metal_driver_sifive_gpio0_clear_int+0x17c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:172
        case METAL_GPIO_INT_LOW:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
200158aa:	fec42783          	lw	a5,-20(s0)
200158ae:	03478793          	addi	a5,a5,52
200158b2:	4398                	lw	a4,0(a5)
200158b4:	fd842783          	lw	a5,-40(s0)
200158b8:	fec42683          	lw	a3,-20(s0)
200158bc:	03468693          	addi	a3,a3,52
200158c0:	8fd9                	or	a5,a5,a4
200158c2:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:173
            break;
200158c4:	a879                	j	20015962 <__metal_driver_sifive_gpio0_clear_int+0x17c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:175
        case METAL_GPIO_INT_BOTH_LEVEL:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
200158c6:	fec42783          	lw	a5,-20(s0)
200158ca:	02c78793          	addi	a5,a5,44
200158ce:	4398                	lw	a4,0(a5)
200158d0:	fd842783          	lw	a5,-40(s0)
200158d4:	fec42683          	lw	a3,-20(s0)
200158d8:	02c68693          	addi	a3,a3,44
200158dc:	8fd9                	or	a5,a5,a4
200158de:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:176
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
200158e0:	fec42783          	lw	a5,-20(s0)
200158e4:	03478793          	addi	a5,a5,52
200158e8:	4398                	lw	a4,0(a5)
200158ea:	fd842783          	lw	a5,-40(s0)
200158ee:	fec42683          	lw	a3,-20(s0)
200158f2:	03468693          	addi	a3,a3,52
200158f6:	8fd9                	or	a5,a5,a4
200158f8:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:177
            break;
200158fa:	a0a5                	j	20015962 <__metal_driver_sifive_gpio0_clear_int+0x17c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:179
        case METAL_GPIO_INT_MAX:
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP))  |= source;
200158fc:	fec42783          	lw	a5,-20(s0)
20015900:	07f1                	addi	a5,a5,28
20015902:	4398                	lw	a4,0(a5)
20015904:	fd842783          	lw	a5,-40(s0)
20015908:	fec42683          	lw	a3,-20(s0)
2001590c:	06f1                	addi	a3,a3,28
2001590e:	8fd9                	or	a5,a5,a4
20015910:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:180
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP))  |= source;
20015912:	fec42783          	lw	a5,-20(s0)
20015916:	02478793          	addi	a5,a5,36
2001591a:	4398                	lw	a4,0(a5)
2001591c:	fd842783          	lw	a5,-40(s0)
20015920:	fec42683          	lw	a3,-20(s0)
20015924:	02468693          	addi	a3,a3,36
20015928:	8fd9                	or	a5,a5,a4
2001592a:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:181
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP))  |= source;
2001592c:	fec42783          	lw	a5,-20(s0)
20015930:	02c78793          	addi	a5,a5,44
20015934:	4398                	lw	a4,0(a5)
20015936:	fd842783          	lw	a5,-40(s0)
2001593a:	fec42683          	lw	a3,-20(s0)
2001593e:	02c68693          	addi	a3,a3,44
20015942:	8fd9                	or	a5,a5,a4
20015944:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:182
            __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP))  |= source;
20015946:	fec42783          	lw	a5,-20(s0)
2001594a:	03478793          	addi	a5,a5,52
2001594e:	4398                	lw	a4,0(a5)
20015950:	fd842783          	lw	a5,-40(s0)
20015954:	fec42683          	lw	a3,-20(s0)
20015958:	03468693          	addi	a3,a3,52
2001595c:	8fd9                	or	a5,a5,a4
2001595e:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:183
            break;
20015960:	0001                	nop
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:185
    }
    return 0;
20015962:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:186
}
20015964:	853e                	mv	a0,a5
20015966:	50b2                	lw	ra,44(sp)
20015968:	5422                	lw	s0,40(sp)
2001596a:	6145                	addi	sp,sp,48
2001596c:	8082                	ret

2001596e <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:190

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio)
{
2001596e:	1101                	addi	sp,sp,-32
20015970:	ce06                	sw	ra,28(sp)
20015972:	cc22                	sw	s0,24(sp)
20015974:	1000                	addi	s0,sp,32
20015976:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:191
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
2001597a:	fec42503          	lw	a0,-20(s0)
2001597e:	e00ff0ef          	jal	ra,20014f7e <__metal_driver_sifive_gpio0_interrupt_parent>
20015982:	87aa                	mv	a5,a0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:192
}
20015984:	853e                	mv	a0,a5
20015986:	40f2                	lw	ra,28(sp)
20015988:	4462                	lw	s0,24(sp)
2001598a:	6105                	addi	sp,sp,32
2001598c:	8082                	ret

2001598e <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:195

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin)
{
2001598e:	7179                	addi	sp,sp,-48
20015990:	d606                	sw	ra,44(sp)
20015992:	d422                	sw	s0,40(sp)
20015994:	1800                	addi	s0,sp,48
20015996:	fca42e23          	sw	a0,-36(s0)
2001599a:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:197
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
2001599e:	fd842583          	lw	a1,-40(s0)
200159a2:	fdc42503          	lw	a0,-36(s0)
200159a6:	e02ff0ef          	jal	ra,20014fa8 <__metal_driver_sifive_gpio0_interrupt_lines>
200159aa:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:198
    return irq;
200159ae:	fec42783          	lw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_gpio0.c:199
}
200159b2:	853e                	mv	a0,a5
200159b4:	50b2                	lw	ra,44(sp)
200159b6:	5422                	lw	s0,40(sp)
200159b8:	6145                	addi	sp,sp,48
200159ba:	8082                	ret

200159bc <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:738
{
200159bc:	1101                	addi	sp,sp,-32
200159be:	ce22                	sw	s0,28(sp)
200159c0:	1000                	addi	s0,sp,32
200159c2:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:739
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
200159c6:	fec42703          	lw	a4,-20(s0)
200159ca:	800017b7          	lui	a5,0x80001
200159ce:	a2078793          	addi	a5,a5,-1504 # 80000a20 <metal_segment_heap_target_end+0xfffff2b0>
200159d2:	00f71563          	bne	a4,a5,200159dc <__metal_driver_sifive_uart0_control_base+0x20>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:740
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
200159d6:	100137b7          	lui	a5,0x10013
200159da:	a829                	j	200159f4 <__metal_driver_sifive_uart0_control_base+0x38>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:742
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
200159dc:	fec42703          	lw	a4,-20(s0)
200159e0:	800017b7          	lui	a5,0x80001
200159e4:	a4078793          	addi	a5,a5,-1472 # 80000a40 <metal_segment_heap_target_end+0xfffff2d0>
200159e8:	00f71563          	bne	a4,a5,200159f2 <__metal_driver_sifive_uart0_control_base+0x36>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:743
		return METAL_SIFIVE_UART0_10023000_BASE_ADDRESS;
200159ec:	100237b7          	lui	a5,0x10023
200159f0:	a011                	j	200159f4 <__metal_driver_sifive_uart0_control_base+0x38>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:746
		return 0;
200159f2:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:748
}
200159f4:	853e                	mv	a0,a5
200159f6:	4472                	lw	s0,28(sp)
200159f8:	6105                	addi	sp,sp,32
200159fa:	8082                	ret

200159fc <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:777
{
200159fc:	1101                	addi	sp,sp,-32
200159fe:	ce22                	sw	s0,28(sp)
20015a00:	1000                	addi	s0,sp,32
20015a02:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:778
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20015a06:	fec42703          	lw	a4,-20(s0)
20015a0a:	800017b7          	lui	a5,0x80001
20015a0e:	a2078793          	addi	a5,a5,-1504 # 80000a20 <metal_segment_heap_target_end+0xfffff2b0>
20015a12:	00f71763          	bne	a4,a5,20015a20 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:779
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20015a16:	800007b7          	lui	a5,0x80000
20015a1a:	44878793          	addi	a5,a5,1096 # 80000448 <metal_segment_heap_target_end+0xffffecd8>
20015a1e:	a821                	j	20015a36 <__metal_driver_sifive_uart0_interrupt_parent+0x3a>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:781
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20015a20:	fec42703          	lw	a4,-20(s0)
20015a24:	800017b7          	lui	a5,0x80001
20015a28:	a4078793          	addi	a5,a5,-1472 # 80000a40 <metal_segment_heap_target_end+0xfffff2d0>
20015a2c:	00f71463          	bne	a4,a5,20015a34 <__metal_driver_sifive_uart0_interrupt_parent+0x38>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:782
		return NULL;
20015a30:	4781                	li	a5,0
20015a32:	a011                	j	20015a36 <__metal_driver_sifive_uart0_interrupt_parent+0x3a>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:785
		return 0;
20015a34:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:787
}
20015a36:	853e                	mv	a0,a5
20015a38:	4472                	lw	s0,28(sp)
20015a3a:	6105                	addi	sp,sp,32
20015a3c:	8082                	ret

20015a3e <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:790
{
20015a3e:	1101                	addi	sp,sp,-32
20015a40:	ce22                	sw	s0,28(sp)
20015a42:	1000                	addi	s0,sp,32
20015a44:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:791
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20015a48:	fec42703          	lw	a4,-20(s0)
20015a4c:	800017b7          	lui	a5,0x80001
20015a50:	a2078793          	addi	a5,a5,-1504 # 80000a20 <metal_segment_heap_target_end+0xfffff2b0>
20015a54:	00f71463          	bne	a4,a5,20015a5c <__metal_driver_sifive_uart0_interrupt_line+0x1e>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:792
		return 3;
20015a58:	478d                	li	a5,3
20015a5a:	a821                	j	20015a72 <__metal_driver_sifive_uart0_interrupt_line+0x34>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:794
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20015a5c:	fec42703          	lw	a4,-20(s0)
20015a60:	800017b7          	lui	a5,0x80001
20015a64:	a4078793          	addi	a5,a5,-1472 # 80000a40 <metal_segment_heap_target_end+0xfffff2d0>
20015a68:	00f71463          	bne	a4,a5,20015a70 <__metal_driver_sifive_uart0_interrupt_line+0x32>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:795
		return 4;
20015a6c:	4791                	li	a5,4
20015a6e:	a011                	j	20015a72 <__metal_driver_sifive_uart0_interrupt_line+0x34>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:798
		return 0;
20015a70:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:800
}
20015a72:	853e                	mv	a0,a5
20015a74:	4472                	lw	s0,28(sp)
20015a76:	6105                	addi	sp,sp,32
20015a78:	8082                	ret

20015a7a <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:803
{
20015a7a:	1101                	addi	sp,sp,-32
20015a7c:	ce22                	sw	s0,28(sp)
20015a7e:	1000                	addi	s0,sp,32
20015a80:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:804
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20015a84:	fec42703          	lw	a4,-20(s0)
20015a88:	800017b7          	lui	a5,0x80001
20015a8c:	a2078793          	addi	a5,a5,-1504 # 80000a20 <metal_segment_heap_target_end+0xfffff2b0>
20015a90:	00f71763          	bne	a4,a5,20015a9e <__metal_driver_sifive_uart0_clock+0x24>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:805
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20015a94:	800017b7          	lui	a5,0x80001
20015a98:	a7878793          	addi	a5,a5,-1416 # 80000a78 <metal_segment_heap_target_end+0xfffff308>
20015a9c:	a839                	j	20015aba <__metal_driver_sifive_uart0_clock+0x40>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:807
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20015a9e:	fec42703          	lw	a4,-20(s0)
20015aa2:	800017b7          	lui	a5,0x80001
20015aa6:	a4078793          	addi	a5,a5,-1472 # 80000a40 <metal_segment_heap_target_end+0xfffff2d0>
20015aaa:	00f71763          	bne	a4,a5,20015ab8 <__metal_driver_sifive_uart0_clock+0x3e>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:808
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20015aae:	800017b7          	lui	a5,0x80001
20015ab2:	a7878793          	addi	a5,a5,-1416 # 80000a78 <metal_segment_heap_target_end+0xfffff308>
20015ab6:	a011                	j	20015aba <__metal_driver_sifive_uart0_clock+0x40>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:811
		return 0;
20015ab8:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:813
}
20015aba:	853e                	mv	a0,a5
20015abc:	4472                	lw	s0,28(sp)
20015abe:	6105                	addi	sp,sp,32
20015ac0:	8082                	ret

20015ac2 <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:816
{
20015ac2:	1101                	addi	sp,sp,-32
20015ac4:	ce22                	sw	s0,28(sp)
20015ac6:	1000                	addi	s0,sp,32
20015ac8:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:817
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20015acc:	fec42703          	lw	a4,-20(s0)
20015ad0:	800017b7          	lui	a5,0x80001
20015ad4:	a2078793          	addi	a5,a5,-1504 # 80000a20 <metal_segment_heap_target_end+0xfffff2b0>
20015ad8:	00f71563          	bne	a4,a5,20015ae2 <__metal_driver_sifive_uart0_pinmux+0x20>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:818
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20015adc:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
20015ae0:	a829                	j	20015afa <__metal_driver_sifive_uart0_pinmux+0x38>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:820
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20015ae2:	fec42703          	lw	a4,-20(s0)
20015ae6:	800017b7          	lui	a5,0x80001
20015aea:	a4078793          	addi	a5,a5,-1472 # 80000a40 <metal_segment_heap_target_end+0xfffff2d0>
20015aee:	00f71563          	bne	a4,a5,20015af8 <__metal_driver_sifive_uart0_pinmux+0x36>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:821
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20015af2:	81818793          	addi	a5,gp,-2024 # 80000aa0 <__metal_dt_gpio_10012000>
20015af6:	a011                	j	20015afa <__metal_driver_sifive_uart0_pinmux+0x38>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:824
		return 0;
20015af8:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:826
}
20015afa:	853e                	mv	a0,a5
20015afc:	4472                	lw	s0,28(sp)
20015afe:	6105                	addi	sp,sp,32
20015b00:	8082                	ret

20015b02 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:829
{
20015b02:	1101                	addi	sp,sp,-32
20015b04:	ce22                	sw	s0,28(sp)
20015b06:	1000                	addi	s0,sp,32
20015b08:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:830
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20015b0c:	fec42703          	lw	a4,-20(s0)
20015b10:	800017b7          	lui	a5,0x80001
20015b14:	a2078793          	addi	a5,a5,-1504 # 80000a20 <metal_segment_heap_target_end+0xfffff2b0>
20015b18:	00f71563          	bne	a4,a5,20015b22 <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:831
		return 196608;
20015b1c:	000307b7          	lui	a5,0x30
20015b20:	a829                	j	20015b3a <__metal_driver_sifive_uart0_pinmux_output_selector+0x38>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:833
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20015b22:	fec42703          	lw	a4,-20(s0)
20015b26:	800017b7          	lui	a5,0x80001
20015b2a:	a4078793          	addi	a5,a5,-1472 # 80000a40 <metal_segment_heap_target_end+0xfffff2d0>
20015b2e:	00f71563          	bne	a4,a5,20015b38 <__metal_driver_sifive_uart0_pinmux_output_selector+0x36>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:834
		return 8650752;
20015b32:	008407b7          	lui	a5,0x840
20015b36:	a011                	j	20015b3a <__metal_driver_sifive_uart0_pinmux_output_selector+0x38>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:837
		return 0;
20015b38:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:839
}
20015b3a:	853e                	mv	a0,a5
20015b3c:	4472                	lw	s0,28(sp)
20015b3e:	6105                	addi	sp,sp,32
20015b40:	8082                	ret

20015b42 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:842
{
20015b42:	1101                	addi	sp,sp,-32
20015b44:	ce22                	sw	s0,28(sp)
20015b46:	1000                	addi	s0,sp,32
20015b48:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:843
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20015b4c:	fec42703          	lw	a4,-20(s0)
20015b50:	800017b7          	lui	a5,0x80001
20015b54:	a2078793          	addi	a5,a5,-1504 # 80000a20 <metal_segment_heap_target_end+0xfffff2b0>
20015b58:	00f71563          	bne	a4,a5,20015b62 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:844
		return 196608;
20015b5c:	000307b7          	lui	a5,0x30
20015b60:	a829                	j	20015b7a <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:846
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20015b62:	fec42703          	lw	a4,-20(s0)
20015b66:	800017b7          	lui	a5,0x80001
20015b6a:	a4078793          	addi	a5,a5,-1472 # 80000a40 <metal_segment_heap_target_end+0xfffff2d0>
20015b6e:	00f71563          	bne	a4,a5,20015b78 <__metal_driver_sifive_uart0_pinmux_source_selector+0x36>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:847
		return 8650752;
20015b72:	008407b7          	lui	a5,0x840
20015b76:	a011                	j	20015b7a <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:850
		return 0;
20015b78:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:852
}
20015b7a:	853e                	mv	a0,a5
20015b7c:	4472                	lw	s0,28(sp)
20015b7e:	6105                	addi	sp,sp,32
20015b80:	8082                	ret

20015b82 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:32
#define UART_REGB(offset)  (__METAL_ACCESS_ONCE((__metal_io_u8  *)UART_REG(offset)))
#define UART_REGW(offset)  (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart)
{
20015b82:	1101                	addi	sp,sp,-32
20015b84:	ce06                	sw	ra,28(sp)
20015b86:	cc22                	sw	s0,24(sp)
20015b88:	1000                	addi	s0,sp,32
20015b8a:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:33
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20015b8e:	fec42503          	lw	a0,-20(s0)
20015b92:	e6bff0ef          	jal	ra,200159fc <__metal_driver_sifive_uart0_interrupt_parent>
20015b96:	87aa                	mv	a5,a0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:34
}
20015b98:	853e                	mv	a0,a5
20015b9a:	40f2                	lw	ra,28(sp)
20015b9c:	4462                	lw	s0,24(sp)
20015b9e:	6105                	addi	sp,sp,32
20015ba0:	8082                	ret

20015ba2 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:37

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart)
{
20015ba2:	1101                	addi	sp,sp,-32
20015ba4:	ce06                	sw	ra,28(sp)
20015ba6:	cc22                	sw	s0,24(sp)
20015ba8:	1000                	addi	s0,sp,32
20015baa:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:38
    return (__metal_driver_sifive_uart0_interrupt_line(uart) + METAL_INTERRUPT_ID_GL0);
20015bae:	fec42503          	lw	a0,-20(s0)
20015bb2:	e8dff0ef          	jal	ra,20015a3e <__metal_driver_sifive_uart0_interrupt_line>
20015bb6:	87aa                	mv	a5,a0
20015bb8:	02078793          	addi	a5,a5,32 # 840020 <__heap_size+0x83f820>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:39
}
20015bbc:	853e                	mv	a0,a5
20015bbe:	40f2                	lw	ra,28(sp)
20015bc0:	4462                	lw	s0,24(sp)
20015bc2:	6105                	addi	sp,sp,32
20015bc4:	8082                	ret

20015bc6 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:43


int __metal_driver_sifive_uart0_txready(struct metal_uart *uart)
{
20015bc6:	7179                	addi	sp,sp,-48
20015bc8:	d606                	sw	ra,44(sp)
20015bca:	d422                	sw	s0,40(sp)
20015bcc:	1800                	addi	s0,sp,48
20015bce:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:44
  long control_base = __metal_driver_sifive_uart0_control_base(uart);
20015bd2:	fdc42503          	lw	a0,-36(s0)
20015bd6:	de7ff0ef          	jal	ra,200159bc <__metal_driver_sifive_uart0_control_base>
20015bda:	87aa                	mv	a5,a0
20015bdc:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:46

  return !((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20015be0:	fec42783          	lw	a5,-20(s0)
20015be4:	439c                	lw	a5,0(a5)
20015be6:	fff7c793          	not	a5,a5
20015bea:	83fd                	srli	a5,a5,0x1f
20015bec:	0ff7f793          	andi	a5,a5,255
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:47
}
20015bf0:	853e                	mv	a0,a5
20015bf2:	50b2                	lw	ra,44(sp)
20015bf4:	5422                	lw	s0,40(sp)
20015bf6:	6145                	addi	sp,sp,48
20015bf8:	8082                	ret

20015bfa <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:51


int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c)
{
20015bfa:	7179                	addi	sp,sp,-48
20015bfc:	d606                	sw	ra,44(sp)
20015bfe:	d422                	sw	s0,40(sp)
20015c00:	1800                	addi	s0,sp,48
20015c02:	fca42e23          	sw	a0,-36(s0)
20015c06:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:52
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20015c0a:	fdc42503          	lw	a0,-36(s0)
20015c0e:	dafff0ef          	jal	ra,200159bc <__metal_driver_sifive_uart0_control_base>
20015c12:	87aa                	mv	a5,a0
20015c14:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:54

    while (!__metal_driver_sifive_uart0_txready(uart)) {
20015c18:	0001                	nop
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:54 (discriminator 1)
20015c1a:	fdc42503          	lw	a0,-36(s0)
20015c1e:	3765                	jal	20015bc6 <__metal_driver_sifive_uart0_txready>
20015c20:	87aa                	mv	a5,a0
20015c22:	dfe5                	beqz	a5,20015c1a <__metal_driver_sifive_uart0_putc+0x20>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:57
		/* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20015c24:	fec42783          	lw	a5,-20(s0)
20015c28:	fd842703          	lw	a4,-40(s0)
20015c2c:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:58
    return 0;
20015c2e:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:59
}
20015c30:	853e                	mv	a0,a5
20015c32:	50b2                	lw	ra,44(sp)
20015c34:	5422                	lw	s0,40(sp)
20015c36:	6145                	addi	sp,sp,48
20015c38:	8082                	ret

20015c3a <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:63


int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c)
{
20015c3a:	7179                	addi	sp,sp,-48
20015c3c:	d606                	sw	ra,44(sp)
20015c3e:	d422                	sw	s0,40(sp)
20015c40:	1800                	addi	s0,sp,48
20015c42:	fca42e23          	sw	a0,-36(s0)
20015c46:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:65
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20015c4a:	fdc42503          	lw	a0,-36(s0)
20015c4e:	d6fff0ef          	jal	ra,200159bc <__metal_driver_sifive_uart0_control_base>
20015c52:	87aa                	mv	a5,a0
20015c54:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:67
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);;
20015c58:	fec42783          	lw	a5,-20(s0)
20015c5c:	0791                	addi	a5,a5,4
20015c5e:	439c                	lw	a5,0(a5)
20015c60:	fef42423          	sw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:68
    if( ch & UART_RXEMPTY ){
20015c64:	fe842783          	lw	a5,-24(s0)
20015c68:	0007d763          	bgez	a5,20015c76 <__metal_driver_sifive_uart0_getc+0x3c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:69
      *c = -1; /* aka: EOF in most of the world */
20015c6c:	fd842783          	lw	a5,-40(s0)
20015c70:	577d                	li	a4,-1
20015c72:	c398                	sw	a4,0(a5)
20015c74:	a801                	j	20015c84 <__metal_driver_sifive_uart0_getc+0x4a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:71
    } else {
      *c = ch & 0x0ff;
20015c76:	fe842783          	lw	a5,-24(s0)
20015c7a:	0ff7f713          	andi	a4,a5,255
20015c7e:	fd842783          	lw	a5,-40(s0)
20015c82:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:73
    }
    return 0;
20015c84:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:74
}
20015c86:	853e                	mv	a0,a5
20015c88:	50b2                	lw	ra,44(sp)
20015c8a:	5422                	lw	s0,40(sp)
20015c8c:	6145                	addi	sp,sp,48
20015c8e:	8082                	ret

20015c90 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:78


int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart)
{
20015c90:	7179                	addi	sp,sp,-48
20015c92:	d622                	sw	s0,44(sp)
20015c94:	1800                	addi	s0,sp,48
20015c96:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:79
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20015c9a:	fdc42783          	lw	a5,-36(s0)
20015c9e:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:80
    return uart->baud_rate;
20015ca2:	fec42783          	lw	a5,-20(s0)
20015ca6:	43dc                	lw	a5,4(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:81
}
20015ca8:	853e                	mv	a0,a5
20015caa:	5432                	lw	s0,44(sp)
20015cac:	6145                	addi	sp,sp,48
20015cae:	8082                	ret

20015cb0 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:84

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart, int baud_rate)
{
20015cb0:	7179                	addi	sp,sp,-48
20015cb2:	d606                	sw	ra,44(sp)
20015cb4:	d422                	sw	s0,40(sp)
20015cb6:	1800                	addi	s0,sp,48
20015cb8:	fca42e23          	sw	a0,-36(s0)
20015cbc:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:85
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20015cc0:	fdc42783          	lw	a5,-36(s0)
20015cc4:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:86
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20015cc8:	fdc42503          	lw	a0,-36(s0)
20015ccc:	cf1ff0ef          	jal	ra,200159bc <__metal_driver_sifive_uart0_control_base>
20015cd0:	87aa                	mv	a5,a0
20015cd2:	fef42423          	sw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:87
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20015cd6:	fdc42503          	lw	a0,-36(s0)
20015cda:	da1ff0ef          	jal	ra,20015a7a <__metal_driver_sifive_uart0_clock>
20015cde:	fea42223          	sw	a0,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:89

    uart->baud_rate = baud_rate;
20015ce2:	fd842703          	lw	a4,-40(s0)
20015ce6:	fec42783          	lw	a5,-20(s0)
20015cea:	c3d8                	sw	a4,4(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:91

    if (clock != NULL) {
20015cec:	fe442783          	lw	a5,-28(s0)
20015cf0:	cbb1                	beqz	a5,20015d44 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:92
        long clock_rate = clock->vtable->get_rate_hz(clock);
20015cf2:	fe442783          	lw	a5,-28(s0)
20015cf6:	439c                	lw	a5,0(a5)
20015cf8:	439c                	lw	a5,0(a5)
20015cfa:	fe442503          	lw	a0,-28(s0)
20015cfe:	9782                	jalr	a5
20015d00:	fea42023          	sw	a0,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:93
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
20015d04:	fe042703          	lw	a4,-32(s0)
20015d08:	fd842783          	lw	a5,-40(s0)
20015d0c:	02f747b3          	div	a5,a4,a5
20015d10:	fff78713          	addi	a4,a5,-1
20015d14:	fe842783          	lw	a5,-24(s0)
20015d18:	07e1                	addi	a5,a5,24
20015d1a:	c398                	sw	a4,0(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:94
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
20015d1c:	fe842783          	lw	a5,-24(s0)
20015d20:	07a1                	addi	a5,a5,8
20015d22:	439c                	lw	a5,0(a5)
20015d24:	fe842703          	lw	a4,-24(s0)
20015d28:	0721                	addi	a4,a4,8
20015d2a:	0017e793          	ori	a5,a5,1
20015d2e:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:95
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
20015d30:	fe842783          	lw	a5,-24(s0)
20015d34:	07b1                	addi	a5,a5,12
20015d36:	439c                	lw	a5,0(a5)
20015d38:	fe842703          	lw	a4,-24(s0)
20015d3c:	0731                	addi	a4,a4,12
20015d3e:	0017e793          	ori	a5,a5,1
20015d42:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:97
    }
    return 0;
20015d44:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:98
}
20015d46:	853e                	mv	a0,a5
20015d48:	50b2                	lw	ra,44(sp)
20015d4a:	5422                	lw	s0,40(sp)
20015d4c:	6145                	addi	sp,sp,48
20015d4e:	8082                	ret

20015d50 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:101

static void pre_rate_change_callback_func(void *priv)
{
20015d50:	7139                	addi	sp,sp,-64
20015d52:	de06                	sw	ra,60(sp)
20015d54:	dc22                	sw	s0,56(sp)
20015d56:	0080                	addi	s0,sp,64
20015d58:	fca42623          	sw	a0,-52(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:102
    struct __metal_driver_sifive_uart0 *uart = priv;
20015d5c:	fcc42783          	lw	a5,-52(s0)
20015d60:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:103
    long control_base = __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
20015d64:	fcc42503          	lw	a0,-52(s0)
20015d68:	c55ff0ef          	jal	ra,200159bc <__metal_driver_sifive_uart0_control_base>
20015d6c:	87aa                	mv	a5,a0
20015d6e:	fef42423          	sw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:104
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
20015d72:	fcc42503          	lw	a0,-52(s0)
20015d76:	d05ff0ef          	jal	ra,20015a7a <__metal_driver_sifive_uart0_clock>
20015d7a:	fea42223          	sw	a0,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:109

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
20015d7e:	fe842783          	lw	a5,-24(s0)
20015d82:	07a1                	addi	a5,a5,8
20015d84:	4398                	lw	a4,0(a5)
20015d86:	fe842783          	lw	a5,-24(s0)
20015d8a:	07a1                	addi	a5,a5,8
20015d8c:	86be                	mv	a3,a5
20015d8e:	fff907b7          	lui	a5,0xfff90
20015d92:	17fd                	addi	a5,a5,-1
20015d94:	8ff9                	and	a5,a5,a4
20015d96:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:110
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
20015d98:	fe842783          	lw	a5,-24(s0)
20015d9c:	07a1                	addi	a5,a5,8
20015d9e:	4398                	lw	a4,0(a5)
20015da0:	fe842783          	lw	a5,-24(s0)
20015da4:	07a1                	addi	a5,a5,8
20015da6:	86be                	mv	a3,a5
20015da8:	67c1                	lui	a5,0x10
20015daa:	8fd9                	or	a5,a5,a4
20015dac:	c29c                	sw	a5,0(a3)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:112

    while((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0) ;
20015dae:	0001                	nop
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:112 (discriminator 1)
20015db0:	fe842783          	lw	a5,-24(s0)
20015db4:	07d1                	addi	a5,a5,20
20015db6:	439c                	lw	a5,0(a5)
20015db8:	8b85                	andi	a5,a5,1
20015dba:	dbfd                	beqz	a5,20015db0 <pre_rate_change_callback_func+0x60>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:118

    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol = (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
20015dbc:	fe842783          	lw	a5,-24(s0)
20015dc0:	07a1                	addi	a5,a5,8
20015dc2:	439c                	lw	a5,0(a5)
20015dc4:	8b89                	andi	a5,a5,2
20015dc6:	c399                	beqz	a5,20015dcc <pre_rate_change_callback_func+0x7c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 1)
20015dc8:	47a5                	li	a5,9
20015dca:	a011                	j	20015dce <pre_rate_change_callback_func+0x7e>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 2)
20015dcc:	47a9                	li	a5,10
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:118 (discriminator 4)
20015dce:	fef42023          	sw	a5,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:119 (discriminator 4)
    long clk_freq = clock->vtable->get_rate_hz(clock);
20015dd2:	fe442783          	lw	a5,-28(s0)
20015dd6:	439c                	lw	a5,0(a5)
20015dd8:	439c                	lw	a5,0(a5)
20015dda:	fe442503          	lw	a0,-28(s0)
20015dde:	9782                	jalr	a5
20015de0:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:120 (discriminator 4)
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
20015de4:	fe042703          	lw	a4,-32(s0)
20015de8:	fdc42783          	lw	a5,-36(s0)
20015dec:	02f707b3          	mul	a5,a4,a5
20015df0:	873e                	mv	a4,a5
20015df2:	fec42783          	lw	a5,-20(s0)
20015df6:	43dc                	lw	a5,4(a5)
20015df8:	02f757b3          	divu	a5,a4,a5
20015dfc:	fcf42c23          	sw	a5,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 4)

    for(volatile long x = 0; x < cycles_to_wait; x++)
20015e00:	fc042a23          	sw	zero,-44(s0)
20015e04:	a039                	j	20015e12 <pre_rate_change_callback_func+0xc2>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:123 (discriminator 3)
        __asm__("nop");
20015e06:	0001                	nop
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 3)
    for(volatile long x = 0; x < cycles_to_wait; x++)
20015e08:	fd442783          	lw	a5,-44(s0)
20015e0c:	0785                	addi	a5,a5,1
20015e0e:	fcf42a23          	sw	a5,-44(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:122 (discriminator 1)
20015e12:	fd442783          	lw	a5,-44(s0)
20015e16:	fd842703          	lw	a4,-40(s0)
20015e1a:	fee7c6e3          	blt	a5,a4,20015e06 <pre_rate_change_callback_func+0xb6>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:124
}
20015e1e:	0001                	nop
20015e20:	50f2                	lw	ra,60(sp)
20015e22:	5462                	lw	s0,56(sp)
20015e24:	6121                	addi	sp,sp,64
20015e26:	8082                	ret

20015e28 <post_rate_change_callback_func>:
post_rate_change_callback_func():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:127

static void post_rate_change_callback_func(void *priv)
{
20015e28:	7179                	addi	sp,sp,-48
20015e2a:	d606                	sw	ra,44(sp)
20015e2c:	d422                	sw	s0,40(sp)
20015e2e:	1800                	addi	s0,sp,48
20015e30:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:128
    struct __metal_driver_sifive_uart0 *uart = priv;
20015e34:	fdc42783          	lw	a5,-36(s0)
20015e38:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:129
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
20015e3c:	fec42703          	lw	a4,-20(s0)
20015e40:	fec42783          	lw	a5,-20(s0)
20015e44:	43dc                	lw	a5,4(a5)
20015e46:	85be                	mv	a1,a5
20015e48:	853a                	mv	a0,a4
20015e4a:	2949                	jal	200162dc <metal_uart_set_baud_rate>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:130
}
20015e4c:	0001                	nop
20015e4e:	50b2                	lw	ra,44(sp)
20015e50:	5422                	lw	s0,40(sp)
20015e52:	6145                	addi	sp,sp,48
20015e54:	8082                	ret

20015e56 <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:133

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate)
{
20015e56:	7139                	addi	sp,sp,-64
20015e58:	de06                	sw	ra,60(sp)
20015e5a:	dc22                	sw	s0,56(sp)
20015e5c:	0080                	addi	s0,sp,64
20015e5e:	fca42623          	sw	a0,-52(s0)
20015e62:	fcb42423          	sw	a1,-56(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:134
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
20015e66:	fcc42783          	lw	a5,-52(s0)
20015e6a:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:135
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20015e6e:	fcc42503          	lw	a0,-52(s0)
20015e72:	c09ff0ef          	jal	ra,20015a7a <__metal_driver_sifive_uart0_clock>
20015e76:	fea42423          	sw	a0,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:136
    struct __metal_driver_sifive_gpio0 *pinmux = __metal_driver_sifive_uart0_pinmux(guart);
20015e7a:	fcc42503          	lw	a0,-52(s0)
20015e7e:	c45ff0ef          	jal	ra,20015ac2 <__metal_driver_sifive_uart0_pinmux>
20015e82:	fea42223          	sw	a0,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:138

    if(clock != NULL) {
20015e86:	fe842783          	lw	a5,-24(s0)
20015e8a:	c7b9                	beqz	a5,20015ed8 <__metal_driver_sifive_uart0_init+0x82>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:139
        uart->pre_rate_change_callback.callback = &pre_rate_change_callback_func;
20015e8c:	fec42783          	lw	a5,-20(s0)
20015e90:	20016737          	lui	a4,0x20016
20015e94:	d5070713          	addi	a4,a4,-688 # 20015d50 <pre_rate_change_callback_func>
20015e98:	c798                	sw	a4,8(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:140
        uart->pre_rate_change_callback.priv = guart;
20015e9a:	fec42783          	lw	a5,-20(s0)
20015e9e:	fcc42703          	lw	a4,-52(s0)
20015ea2:	c7d8                	sw	a4,12(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:141
        metal_clock_register_pre_rate_change_callback(clock, &(uart->pre_rate_change_callback));
20015ea4:	fec42783          	lw	a5,-20(s0)
20015ea8:	07a1                	addi	a5,a5,8
20015eaa:	85be                	mv	a1,a5
20015eac:	fe842503          	lw	a0,-24(s0)
20015eb0:	2aad                	jal	2001602a <metal_clock_register_pre_rate_change_callback>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:143

        uart->post_rate_change_callback.callback = &post_rate_change_callback_func;
20015eb2:	fec42783          	lw	a5,-20(s0)
20015eb6:	20016737          	lui	a4,0x20016
20015eba:	e2870713          	addi	a4,a4,-472 # 20015e28 <post_rate_change_callback_func>
20015ebe:	cbd8                	sw	a4,20(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:144
        uart->post_rate_change_callback.priv = guart;
20015ec0:	fec42783          	lw	a5,-20(s0)
20015ec4:	fcc42703          	lw	a4,-52(s0)
20015ec8:	cf98                	sw	a4,24(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:145
        metal_clock_register_post_rate_change_callback(clock, &(uart->post_rate_change_callback));
20015eca:	fec42783          	lw	a5,-20(s0)
20015ece:	07d1                	addi	a5,a5,20
20015ed0:	85be                	mv	a1,a5
20015ed2:	fe842503          	lw	a0,-24(s0)
20015ed6:	2259                	jal	2001605c <metal_clock_register_post_rate_change_callback>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:148
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
20015ed8:	fec42783          	lw	a5,-20(s0)
20015edc:	fc842583          	lw	a1,-56(s0)
20015ee0:	853e                	mv	a0,a5
20015ee2:	2eed                	jal	200162dc <metal_uart_set_baud_rate>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:150

    if (pinmux != NULL) {
20015ee4:	fe442783          	lw	a5,-28(s0)
20015ee8:	cb95                	beqz	a5,20015f1c <__metal_driver_sifive_uart0_init+0xc6>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:151
        long pinmux_output_selector = __metal_driver_sifive_uart0_pinmux_output_selector(guart);
20015eea:	fcc42503          	lw	a0,-52(s0)
20015eee:	c15ff0ef          	jal	ra,20015b02 <__metal_driver_sifive_uart0_pinmux_output_selector>
20015ef2:	87aa                	mv	a5,a0
20015ef4:	fef42023          	sw	a5,-32(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:152
        long pinmux_source_selector = __metal_driver_sifive_uart0_pinmux_source_selector(guart);
20015ef8:	fcc42503          	lw	a0,-52(s0)
20015efc:	c47ff0ef          	jal	ra,20015b42 <__metal_driver_sifive_uart0_pinmux_source_selector>
20015f00:	87aa                	mv	a5,a0
20015f02:	fcf42e23          	sw	a5,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:153
        pinmux->gpio.vtable->enable_io(
20015f06:	fe442783          	lw	a5,-28(s0)
20015f0a:	439c                	lw	a5,0(a5)
20015f0c:	53dc                	lw	a5,36(a5)
20015f0e:	fdc42603          	lw	a2,-36(s0)
20015f12:	fe042583          	lw	a1,-32(s0)
20015f16:	fe442503          	lw	a0,-28(s0)
20015f1a:	9782                	jalr	a5
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/sifive_uart0.c:159
            (struct metal_gpio *) pinmux,
            pinmux_output_selector,
            pinmux_source_selector
        );
    }
}
20015f1c:	0001                	nop
20015f1e:	50f2                	lw	ra,60(sp)
20015f20:	5462                	lw	s0,56(sp)
20015f22:	6121                	addi	sp,sp,64
20015f24:	8082                	ret

20015f26 <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:48
typedef struct _metal_clock_callback_t metal_clock_callback;

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void _metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
20015f26:	7179                	addi	sp,sp,-48
20015f28:	d606                	sw	ra,44(sp)
20015f2a:	d422                	sw	s0,40(sp)
20015f2c:	1800                	addi	s0,sp,48
20015f2e:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:49
    const metal_clock_callback *current = list;
20015f32:	fdc42783          	lw	a5,-36(s0)
20015f36:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:50
    while (current) {
20015f3a:	a831                	j	20015f56 <_metal_clock_call_all_callbacks+0x30>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:51
        current->callback(current->priv);
20015f3c:	fec42783          	lw	a5,-20(s0)
20015f40:	4398                	lw	a4,0(a5)
20015f42:	fec42783          	lw	a5,-20(s0)
20015f46:	43dc                	lw	a5,4(a5)
20015f48:	853e                	mv	a0,a5
20015f4a:	9702                	jalr	a4
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:52
        current = current->_next;
20015f4c:	fec42783          	lw	a5,-20(s0)
20015f50:	479c                	lw	a5,8(a5)
20015f52:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:50
    while (current) {
20015f56:	fec42783          	lw	a5,-20(s0)
20015f5a:	f3ed                	bnez	a5,20015f3c <_metal_clock_call_all_callbacks+0x16>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:54
    }
}
20015f5c:	0001                	nop
20015f5e:	50b2                	lw	ra,44(sp)
20015f60:	5422                	lw	s0,40(sp)
20015f62:	6145                	addi	sp,sp,48
20015f64:	8082                	ret

20015f66 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:59

/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *_metal_clock_append_to_callbacks(metal_clock_callback *list, metal_clock_callback *const cb) {
20015f66:	7179                	addi	sp,sp,-48
20015f68:	d622                	sw	s0,44(sp)
20015f6a:	1800                	addi	s0,sp,48
20015f6c:	fca42e23          	sw	a0,-36(s0)
20015f70:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:60
    cb->_next = NULL;
20015f74:	fd842783          	lw	a5,-40(s0)
20015f78:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:62

    if (!list) {
20015f7c:	fdc42783          	lw	a5,-36(s0)
20015f80:	e781                	bnez	a5,20015f88 <_metal_clock_append_to_callbacks+0x22>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:63
        return cb;
20015f82:	fd842783          	lw	a5,-40(s0)
20015f86:	a035                	j	20015fb2 <_metal_clock_append_to_callbacks+0x4c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:66
    }

    metal_clock_callback *current = list;
20015f88:	fdc42783          	lw	a5,-36(s0)
20015f8c:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:68

    while ((current->_next) != NULL) {
20015f90:	a031                	j	20015f9c <_metal_clock_append_to_callbacks+0x36>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:69
        current = current->_next;
20015f92:	fec42783          	lw	a5,-20(s0)
20015f96:	479c                	lw	a5,8(a5)
20015f98:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:68
    while ((current->_next) != NULL) {
20015f9c:	fec42783          	lw	a5,-20(s0)
20015fa0:	479c                	lw	a5,8(a5)
20015fa2:	fbe5                	bnez	a5,20015f92 <_metal_clock_append_to_callbacks+0x2c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:72
    }

    current->_next = cb;
20015fa4:	fec42783          	lw	a5,-20(s0)
20015fa8:	fd842703          	lw	a4,-40(s0)
20015fac:	c798                	sw	a4,8(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:74

    return list;
20015fae:	fdc42783          	lw	a5,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:75
}
20015fb2:	853e                	mv	a0,a5
20015fb4:	5432                	lw	s0,44(sp)
20015fb6:	6145                	addi	sp,sp,48
20015fb8:	8082                	ret

20015fba <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:105
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) { return clk->vtable->get_rate_hz(clk); }
20015fba:	1101                	addi	sp,sp,-32
20015fbc:	ce06                	sw	ra,28(sp)
20015fbe:	cc22                	sw	s0,24(sp)
20015fc0:	1000                	addi	s0,sp,32
20015fc2:	fea42623          	sw	a0,-20(s0)
20015fc6:	fec42783          	lw	a5,-20(s0)
20015fca:	439c                	lw	a5,0(a5)
20015fcc:	439c                	lw	a5,0(a5)
20015fce:	fec42503          	lw	a0,-20(s0)
20015fd2:	9782                	jalr	a5
20015fd4:	87aa                	mv	a5,a0
20015fd6:	853e                	mv	a0,a5
20015fd8:	40f2                	lw	ra,28(sp)
20015fda:	4462                	lw	s0,24(sp)
20015fdc:	6105                	addi	sp,sp,32
20015fde:	8082                	ret

20015fe0 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:122
 *
 * Prior to and after the rate change of the clock, this will call the registered
 * pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz)
{
20015fe0:	7179                	addi	sp,sp,-48
20015fe2:	d606                	sw	ra,44(sp)
20015fe4:	d422                	sw	s0,40(sp)
20015fe6:	1800                	addi	s0,sp,48
20015fe8:	fca42e23          	sw	a0,-36(s0)
20015fec:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:123
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20015ff0:	fdc42783          	lw	a5,-36(s0)
20015ff4:	43dc                	lw	a5,4(a5)
20015ff6:	853e                	mv	a0,a5
20015ff8:	373d                	jal	20015f26 <_metal_clock_call_all_callbacks>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:125

    long out = clk->vtable->set_rate_hz(clk, hz);
20015ffa:	fdc42783          	lw	a5,-36(s0)
20015ffe:	439c                	lw	a5,0(a5)
20016000:	43dc                	lw	a5,4(a5)
20016002:	fd842583          	lw	a1,-40(s0)
20016006:	fdc42503          	lw	a0,-36(s0)
2001600a:	9782                	jalr	a5
2001600c:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:127

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20016010:	fdc42783          	lw	a5,-36(s0)
20016014:	479c                	lw	a5,8(a5)
20016016:	853e                	mv	a0,a5
20016018:	f0fff0ef          	jal	ra,20015f26 <_metal_clock_call_all_callbacks>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:129

    return out;
2001601c:	fec42783          	lw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:130
}
20016020:	853e                	mv	a0,a5
20016022:	50b2                	lw	ra,44(sp)
20016024:	5422                	lw	s0,40(sp)
20016026:	6145                	addi	sp,sp,48
20016028:	8082                	ret

2001602a <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:139
 *
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void metal_clock_register_pre_rate_change_callback(struct metal_clock *clk, metal_clock_callback *cb)
{
2001602a:	1101                	addi	sp,sp,-32
2001602c:	ce06                	sw	ra,28(sp)
2001602e:	cc22                	sw	s0,24(sp)
20016030:	1000                	addi	s0,sp,32
20016032:	fea42623          	sw	a0,-20(s0)
20016036:	feb42423          	sw	a1,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:140
    clk->_pre_rate_change_callback = _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
2001603a:	fec42783          	lw	a5,-20(s0)
2001603e:	43dc                	lw	a5,4(a5)
20016040:	fe842583          	lw	a1,-24(s0)
20016044:	853e                	mv	a0,a5
20016046:	f21ff0ef          	jal	ra,20015f66 <_metal_clock_append_to_callbacks>
2001604a:	872a                	mv	a4,a0
2001604c:	fec42783          	lw	a5,-20(s0)
20016050:	c3d8                	sw	a4,4(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:141
}
20016052:	0001                	nop
20016054:	40f2                	lw	ra,28(sp)
20016056:	4462                	lw	s0,24(sp)
20016058:	6105                	addi	sp,sp,32
2001605a:	8082                	ret

2001605c <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:150
 *
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void metal_clock_register_post_rate_change_callback(struct metal_clock *clk, metal_clock_callback *cb)
{
2001605c:	1101                	addi	sp,sp,-32
2001605e:	ce06                	sw	ra,28(sp)
20016060:	cc22                	sw	s0,24(sp)
20016062:	1000                	addi	s0,sp,32
20016064:	fea42623          	sw	a0,-20(s0)
20016068:	feb42423          	sw	a1,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:151
    clk->_post_rate_change_callback = _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
2001606c:	fec42783          	lw	a5,-20(s0)
20016070:	479c                	lw	a5,8(a5)
20016072:	fe842583          	lw	a1,-24(s0)
20016076:	853e                	mv	a0,a5
20016078:	eefff0ef          	jal	ra,20015f66 <_metal_clock_append_to_callbacks>
2001607c:	872a                	mv	a4,a0
2001607e:	fec42783          	lw	a5,-20(s0)
20016082:	c798                	sw	a4,8(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/clock.h:152
}
20016084:	0001                	nop
20016086:	40f2                	lw	ra,28(sp)
20016088:	4462                	lw	s0,24(sp)
2001608a:	6105                	addi	sp,sp,32
2001608c:	8082                	ret

2001608e <metal_cpu_get_timer>:
metal_cpu_get_timer():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/cpu.h:72
 *
 * @param cpu The CPU device handle
 * @return The value of the CPU cycle count timer
 */
__inline__ unsigned long long metal_cpu_get_timer(struct metal_cpu *cpu)
{ return cpu->vtable->mcycle_get(cpu); }
2001608e:	1101                	addi	sp,sp,-32
20016090:	ce06                	sw	ra,28(sp)
20016092:	cc22                	sw	s0,24(sp)
20016094:	1000                	addi	s0,sp,32
20016096:	fea42623          	sw	a0,-20(s0)
2001609a:	fec42783          	lw	a5,-20(s0)
2001609e:	439c                	lw	a5,0(a5)
200160a0:	439c                	lw	a5,0(a5)
200160a2:	fec42503          	lw	a0,-20(s0)
200160a6:	9782                	jalr	a5
200160a8:	87aa                	mv	a5,a0
200160aa:	882e                	mv	a6,a1
200160ac:	853e                	mv	a0,a5
200160ae:	85c2                	mv	a1,a6
200160b0:	40f2                	lw	ra,28(sp)
200160b2:	4462                	lw	s0,24(sp)
200160b4:	6105                	addi	sp,sp,32
200160b6:	8082                	ret

200160b8 <metal_cpu_get_timebase>:
metal_cpu_get_timebase():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/cpu.h:82
 *
 * @param cpu The CPU device handle
 * @return The value of the cycle count timer timebase
 */
__inline__ unsigned long long metal_cpu_get_timebase(struct metal_cpu *cpu)
{ return cpu->vtable->timebase_get(cpu); }
200160b8:	1101                	addi	sp,sp,-32
200160ba:	ce06                	sw	ra,28(sp)
200160bc:	cc22                	sw	s0,24(sp)
200160be:	1000                	addi	s0,sp,32
200160c0:	fea42623          	sw	a0,-20(s0)
200160c4:	fec42783          	lw	a5,-20(s0)
200160c8:	439c                	lw	a5,0(a5)
200160ca:	43dc                	lw	a5,4(a5)
200160cc:	fec42503          	lw	a0,-20(s0)
200160d0:	9782                	jalr	a5
200160d2:	87aa                	mv	a5,a0
200160d4:	882e                	mv	a6,a1
200160d6:	853e                	mv	a0,a5
200160d8:	85c2                	mv	a1,a6
200160da:	40f2                	lw	ra,28(sp)
200160dc:	4462                	lw	s0,24(sp)
200160de:	6105                	addi	sp,sp,32
200160e0:	8082                	ret

200160e2 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/cpu.h:208
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt* metal_cpu_interrupt_controller(struct metal_cpu *cpu)
{ return cpu->vtable->controller_interrupt(cpu); }
200160e2:	1101                	addi	sp,sp,-32
200160e4:	ce06                	sw	ra,28(sp)
200160e6:	cc22                	sw	s0,24(sp)
200160e8:	1000                	addi	s0,sp,32
200160ea:	fea42623          	sw	a0,-20(s0)
200160ee:	fec42783          	lw	a5,-20(s0)
200160f2:	439c                	lw	a5,0(a5)
200160f4:	57dc                	lw	a5,44(a5)
200160f6:	fec42503          	lw	a0,-20(s0)
200160fa:	9782                	jalr	a5
200160fc:	87aa                	mv	a5,a0
200160fe:	853e                	mv	a0,a5
20016100:	40f2                	lw	ra,28(sp)
20016102:	4462                	lw	s0,24(sp)
20016104:	6105                	addi	sp,sp,32
20016106:	8082                	ret

20016108 <metal_cpu_get>:
metal_cpu_get():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/cpu.c:8

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu* metal_cpu_get(unsigned int hartid)
{
20016108:	1101                	addi	sp,sp,-32
2001610a:	ce22                	sw	s0,28(sp)
2001610c:	1000                	addi	s0,sp,32
2001610e:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/cpu.c:9
    if (hartid < __METAL_DT_MAX_HARTS) {
20016112:	fec42783          	lw	a5,-20(s0)
20016116:	eb99                	bnez	a5,2001612c <metal_cpu_get+0x24>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/cpu.c:10
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20016118:	800017b7          	lui	a5,0x80001
2001611c:	fec42703          	lw	a4,-20(s0)
20016120:	070a                	slli	a4,a4,0x2
20016122:	a8878793          	addi	a5,a5,-1400 # 80000a88 <metal_segment_heap_target_end+0xfffff318>
20016126:	97ba                	add	a5,a5,a4
20016128:	439c                	lw	a5,0(a5)
2001612a:	a011                	j	2001612e <metal_cpu_get+0x26>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/cpu.c:12
    }   
    return NULL;
2001612c:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/cpu.c:13
}
2001612e:	853e                	mv	a0,a5
20016130:	4472                	lw	s0,28(sp)
20016132:	6105                	addi	sp,sp,32
20016134:	8082                	ret

20016136 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/cpu.c:16

int metal_cpu_get_current_hartid()
{
20016136:	1101                	addi	sp,sp,-32
20016138:	ce22                	sw	s0,28(sp)
2001613a:	1000                	addi	s0,sp,32
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/cpu.c:19
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r" (mhartid));
2001613c:	f14027f3          	csrr	a5,mhartid
20016140:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/cpu.c:20
    return mhartid;
20016144:	fec42783          	lw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/cpu.c:22
#endif
}
20016148:	853e                	mv	a0,a5
2001614a:	4472                	lw	s0,28(sp)
2001614c:	6105                	addi	sp,sp,32
2001614e:	8082                	ret

20016150 <metal_shutdown>:
metal_shutdown():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message("There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code)
{
20016150:	1101                	addi	sp,sp,-32
20016152:	ce22                	sw	s0,28(sp)
20016154:	1000                	addi	s0,sp,32
20016156:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
      __asm__ volatile ("nop");
2001615a:	0001                	nop
2001615c:	bffd                	j	2001615a <metal_shutdown+0xa>

2001615e <metal_gettimeofday>:
metal_gettimeofday():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/time.c:8

#include <metal/time.h>
#include <metal/timer.h>

int metal_gettimeofday(struct timeval *tp, void *tzp)
{
2001615e:	7139                	addi	sp,sp,-64
20016160:	de06                	sw	ra,60(sp)
20016162:	dc22                	sw	s0,56(sp)
20016164:	da4a                	sw	s2,52(sp)
20016166:	d84e                	sw	s3,48(sp)
20016168:	0080                	addi	s0,sp,64
2001616a:	fca42623          	sw	a0,-52(s0)
2001616e:	fcb42423          	sw	a1,-56(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/time.c:11
    int rv;
    unsigned long long mcc, timebase;
    if (rv = metal_timer_get_cyclecount(0, &mcc)) {
20016172:	fe040793          	addi	a5,s0,-32
20016176:	85be                	mv	a1,a5
20016178:	4501                	li	a0,0
2001617a:	2e1d                	jal	200164b0 <metal_timer_get_cyclecount>
2001617c:	fea42623          	sw	a0,-20(s0)
20016180:	fec42783          	lw	a5,-20(s0)
20016184:	c399                	beqz	a5,2001618a <metal_gettimeofday+0x2c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/time.c:12
        return -1;
20016186:	57fd                	li	a5,-1
20016188:	a84d                	j	2001623a <metal_gettimeofday+0xdc>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/time.c:14
    }
    if (rv = metal_timer_get_timebase_frequency(0, &timebase)) {
2001618a:	fd840793          	addi	a5,s0,-40
2001618e:	85be                	mv	a1,a5
20016190:	4501                	li	a0,0
20016192:	26a5                	jal	200164fa <metal_timer_get_timebase_frequency>
20016194:	fea42623          	sw	a0,-20(s0)
20016198:	fec42783          	lw	a5,-20(s0)
2001619c:	c399                	beqz	a5,200161a2 <metal_gettimeofday+0x44>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/time.c:15
        return -1;
2001619e:	57fd                	li	a5,-1
200161a0:	a869                	j	2001623a <metal_gettimeofday+0xdc>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/time.c:17
    }
    tp->tv_sec = mcc / timebase;
200161a2:	fe042783          	lw	a5,-32(s0)
200161a6:	fe442803          	lw	a6,-28(s0)
200161aa:	fd842683          	lw	a3,-40(s0)
200161ae:	fdc42703          	lw	a4,-36(s0)
200161b2:	8636                	mv	a2,a3
200161b4:	86ba                	mv	a3,a4
200161b6:	853e                	mv	a0,a5
200161b8:	85c2                	mv	a1,a6
200161ba:	02b000ef          	jal	ra,200169e4 <__udivdi3>
200161be:	87aa                	mv	a5,a0
200161c0:	882e                	mv	a6,a1
200161c2:	fcc42703          	lw	a4,-52(s0)
200161c6:	c31c                	sw	a5,0(a4)
200161c8:	01072223          	sw	a6,4(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/time.c:18
    tp->tv_usec = mcc % timebase * 1000000 / timebase;
200161cc:	fe042783          	lw	a5,-32(s0)
200161d0:	fe442803          	lw	a6,-28(s0)
200161d4:	fd842683          	lw	a3,-40(s0)
200161d8:	fdc42703          	lw	a4,-36(s0)
200161dc:	8636                	mv	a2,a3
200161de:	86ba                	mv	a3,a4
200161e0:	853e                	mv	a0,a5
200161e2:	85c2                	mv	a1,a6
200161e4:	35f000ef          	jal	ra,20016d42 <__umoddi3>
200161e8:	87aa                	mv	a5,a0
200161ea:	882e                	mv	a6,a1
200161ec:	000f4737          	lui	a4,0xf4
200161f0:	24070713          	addi	a4,a4,576 # f4240 <__heap_size+0xf3a40>
200161f4:	02e806b3          	mul	a3,a6,a4
200161f8:	4701                	li	a4,0
200161fa:	02e78733          	mul	a4,a5,a4
200161fe:	96ba                	add	a3,a3,a4
20016200:	000f4737          	lui	a4,0xf4
20016204:	24070713          	addi	a4,a4,576 # f4240 <__heap_size+0xf3a40>
20016208:	02e78633          	mul	a2,a5,a4
2001620c:	02e7b9b3          	mulhu	s3,a5,a4
20016210:	8932                	mv	s2,a2
20016212:	013687b3          	add	a5,a3,s3
20016216:	89be                	mv	s3,a5
20016218:	fd842783          	lw	a5,-40(s0)
2001621c:	fdc42803          	lw	a6,-36(s0)
20016220:	863e                	mv	a2,a5
20016222:	86c2                	mv	a3,a6
20016224:	854a                	mv	a0,s2
20016226:	85ce                	mv	a1,s3
20016228:	7bc000ef          	jal	ra,200169e4 <__udivdi3>
2001622c:	87aa                	mv	a5,a0
2001622e:	882e                	mv	a6,a1
20016230:	873e                	mv	a4,a5
20016232:	fcc42783          	lw	a5,-52(s0)
20016236:	c798                	sw	a4,8(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/time.c:19
    return 0;
20016238:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/time.c:20 (discriminator 1)
}
2001623a:	853e                	mv	a0,a5
2001623c:	50f2                	lw	ra,60(sp)
2001623e:	5462                	lw	s0,56(sp)
20016240:	5952                	lw	s2,52(sp)
20016242:	59c2                	lw	s3,48(sp)
20016244:	6121                	addi	sp,sp,64
20016246:	8082                	ret

20016248 <metal_time>:
metal_time():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/time.c:23

time_t metal_time (void)
{
20016248:	1101                	addi	sp,sp,-32
2001624a:	ce06                	sw	ra,28(sp)
2001624c:	cc22                	sw	s0,24(sp)
2001624e:	1000                	addi	s0,sp,32
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/time.c:26
    struct timeval now;

    if (metal_gettimeofday(&now, NULL) < 0)
20016250:	fe040793          	addi	a5,s0,-32
20016254:	4581                	li	a1,0
20016256:	853e                	mv	a0,a5
20016258:	f07ff0ef          	jal	ra,2001615e <metal_gettimeofday>
2001625c:	87aa                	mv	a5,a0
2001625e:	0007d863          	bgez	a5,2001626e <metal_time+0x26>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/time.c:27
      now.tv_sec = (time_t) -1;
20016262:	57fd                	li	a5,-1
20016264:	587d                	li	a6,-1
20016266:	fef42023          	sw	a5,-32(s0)
2001626a:	ff042223          	sw	a6,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/time.c:29

  return now.tv_sec;
2001626e:	fe042783          	lw	a5,-32(s0)
20016272:	fe442803          	lw	a6,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/time.c:30
}
20016276:	853e                	mv	a0,a5
20016278:	85c2                	mv	a1,a6
2001627a:	40f2                	lw	ra,28(sp)
2001627c:	4462                	lw	s0,24(sp)
2001627e:	6105                	addi	sp,sp,32
20016280:	8082                	ret

20016282 <metal_uart_init>:
metal_uart_init():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/uart.h:44
 * other method on the UART can be invoked. It is invalid to initialize a UART more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) { uart->vtable->init(uart, baud_rate); }
20016282:	1101                	addi	sp,sp,-32
20016284:	ce06                	sw	ra,28(sp)
20016286:	cc22                	sw	s0,24(sp)
20016288:	1000                	addi	s0,sp,32
2001628a:	fea42623          	sw	a0,-20(s0)
2001628e:	feb42423          	sw	a1,-24(s0)
20016292:	fec42783          	lw	a5,-20(s0)
20016296:	439c                	lw	a5,0(a5)
20016298:	439c                	lw	a5,0(a5)
2001629a:	fe842583          	lw	a1,-24(s0)
2001629e:	fec42503          	lw	a0,-20(s0)
200162a2:	9782                	jalr	a5
200162a4:	0001                	nop
200162a6:	40f2                	lw	ra,28(sp)
200162a8:	4462                	lw	s0,24(sp)
200162aa:	6105                	addi	sp,sp,32
200162ac:	8082                	ret

200162ae <metal_uart_putc>:
metal_uart_putc():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/uart.h:52
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) { return uart->vtable->putc(uart, c); }
200162ae:	1101                	addi	sp,sp,-32
200162b0:	ce06                	sw	ra,28(sp)
200162b2:	cc22                	sw	s0,24(sp)
200162b4:	1000                	addi	s0,sp,32
200162b6:	fea42623          	sw	a0,-20(s0)
200162ba:	feb42423          	sw	a1,-24(s0)
200162be:	fec42783          	lw	a5,-20(s0)
200162c2:	439c                	lw	a5,0(a5)
200162c4:	43dc                	lw	a5,4(a5)
200162c6:	fe842583          	lw	a1,-24(s0)
200162ca:	fec42503          	lw	a0,-20(s0)
200162ce:	9782                	jalr	a5
200162d0:	87aa                	mv	a5,a0
200162d2:	853e                	mv	a0,a5
200162d4:	40f2                	lw	ra,28(sp)
200162d6:	4462                	lw	s0,24(sp)
200162d8:	6105                	addi	sp,sp,32
200162da:	8082                	ret

200162dc <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/metal/uart.h:85
 * @brief Set the baud rate of the UART peripheral
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart, int baud_rate) { return uart->vtable->set_baud_rate(uart, baud_rate); }
200162dc:	1101                	addi	sp,sp,-32
200162de:	ce06                	sw	ra,28(sp)
200162e0:	cc22                	sw	s0,24(sp)
200162e2:	1000                	addi	s0,sp,32
200162e4:	fea42623          	sw	a0,-20(s0)
200162e8:	feb42423          	sw	a1,-24(s0)
200162ec:	fec42783          	lw	a5,-20(s0)
200162f0:	439c                	lw	a5,0(a5)
200162f2:	4bdc                	lw	a5,20(a5)
200162f4:	fe842583          	lw	a1,-24(s0)
200162f8:	fec42503          	lw	a0,-20(s0)
200162fc:	9782                	jalr	a5
200162fe:	87aa                	mv	a5,a0
20016300:	853e                	mv	a0,a5
20016302:	40f2                	lw	ra,28(sp)
20016304:	4462                	lw	s0,24(sp)
20016306:	6105                	addi	sp,sp,32
20016308:	8082                	ret
	...

20016380 <__metal_vector_table>:
IRQ_0():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20016380:	dfafc06f          	j	2001297a <metal_interrupt_vector_handler>

20016384 <IRQ_1>:
IRQ_1():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20016384:	df6fc06f          	j	2001297a <metal_interrupt_vector_handler>

20016388 <IRQ_2>:
IRQ_2():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20016388:	df2fc06f          	j	2001297a <metal_interrupt_vector_handler>

2001638c <IRQ_3>:
IRQ_3():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2001638c:	e1cfc06f          	j	200129a8 <metal_software_interrupt_vector_handler>

20016390 <IRQ_4>:
IRQ_4():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20016390:	deafc06f          	j	2001297a <metal_interrupt_vector_handler>

20016394 <IRQ_5>:
IRQ_5():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20016394:	de6fc06f          	j	2001297a <metal_interrupt_vector_handler>

20016398 <IRQ_6>:
IRQ_6():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20016398:	de2fc06f          	j	2001297a <metal_interrupt_vector_handler>

2001639c <IRQ_7>:
IRQ_7():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2001639c:	f06fc06f          	j	20012aa2 <metal_timer_interrupt_vector_handler>

200163a0 <IRQ_8>:
IRQ_8():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
200163a0:	ddafc06f          	j	2001297a <metal_interrupt_vector_handler>

200163a4 <IRQ_9>:
IRQ_9():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
200163a4:	dd6fc06f          	j	2001297a <metal_interrupt_vector_handler>

200163a8 <IRQ_10>:
IRQ_10():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
200163a8:	dd2fc06f          	j	2001297a <metal_interrupt_vector_handler>

200163ac <IRQ_11>:
IRQ_11():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
200163ac:	dcefc06f          	j	2001297a <metal_interrupt_vector_handler>

200163b0 <IRQ_12>:
IRQ_12():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
200163b0:	dcafc06f          	j	2001297a <metal_interrupt_vector_handler>

200163b4 <IRQ_13>:
IRQ_13():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
200163b4:	dc6fc06f          	j	2001297a <metal_interrupt_vector_handler>

200163b8 <IRQ_14>:
IRQ_14():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
200163b8:	dc2fc06f          	j	2001297a <metal_interrupt_vector_handler>

200163bc <IRQ_15>:
IRQ_15():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
200163bc:	dbefc06f          	j	2001297a <metal_interrupt_vector_handler>

200163c0 <IRQ_LC0>:
IRQ_LC0():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
200163c0:	9b9fc06f          	j	20012d78 <metal_lc0_interrupt_vector_handler>

200163c4 <IRQ_LC1>:
IRQ_LC1():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
200163c4:	a4bfc06f          	j	20012e0e <metal_lc1_interrupt_vector_handler>

200163c8 <IRQ_LC2>:
IRQ_LC2():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
200163c8:	addfc06f          	j	20012ea4 <metal_lc2_interrupt_vector_handler>

200163cc <IRQ_LC3>:
IRQ_LC3():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
200163cc:	b6ffc06f          	j	20012f3a <metal_lc3_interrupt_vector_handler>

200163d0 <IRQ_LC4>:
IRQ_LC4():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
200163d0:	c01fc06f          	j	20012fd0 <metal_lc4_interrupt_vector_handler>

200163d4 <IRQ_LC5>:
IRQ_LC5():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
200163d4:	c93fc06f          	j	20013066 <metal_lc5_interrupt_vector_handler>

200163d8 <IRQ_LC6>:
IRQ_LC6():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
200163d8:	d25fc06f          	j	200130fc <metal_lc6_interrupt_vector_handler>

200163dc <IRQ_LC7>:
IRQ_LC7():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
200163dc:	db7fc06f          	j	20013192 <metal_lc7_interrupt_vector_handler>

200163e0 <IRQ_LC8>:
IRQ_LC8():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
200163e0:	e49fc06f          	j	20013228 <metal_lc8_interrupt_vector_handler>

200163e4 <IRQ_LC9>:
IRQ_LC9():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
200163e4:	edbfc06f          	j	200132be <metal_lc9_interrupt_vector_handler>

200163e8 <IRQ_LC10>:
IRQ_LC10():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
200163e8:	f6dfc06f          	j	20013354 <metal_lc10_interrupt_vector_handler>

200163ec <IRQ_LC11>:
IRQ_LC11():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
200163ec:	ffffc06f          	j	200133ea <metal_lc11_interrupt_vector_handler>

200163f0 <IRQ_LC12>:
IRQ_LC12():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
200163f0:	890fd06f          	j	20013480 <metal_lc12_interrupt_vector_handler>

200163f4 <IRQ_LC13>:
IRQ_LC13():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
200163f4:	922fd06f          	j	20013516 <metal_lc13_interrupt_vector_handler>

200163f8 <IRQ_LC14>:
IRQ_LC14():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
200163f8:	9b4fd06f          	j	200135ac <metal_lc14_interrupt_vector_handler>

200163fc <IRQ_LC15>:
IRQ_LC15():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
200163fc:	a46fd06f          	j	20013642 <metal_lc15_interrupt_vector_handler>

20016400 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:178
{
20016400:	1101                	addi	sp,sp,-32
20016402:	ce22                	sw	s0,28(sp)
20016404:	1000                	addi	s0,sp,32
20016406:	fea42623          	sw	a0,-20(s0)
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:179
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2001640a:	fec42703          	lw	a4,-20(s0)
2001640e:	800007b7          	lui	a5,0x80000
20016412:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8f0>
20016416:	00f71763          	bne	a4,a5,20016424 <__metal_driver_fixed_clock_rate+0x24>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:180
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2001641a:	00f427b7          	lui	a5,0xf42
2001641e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20016422:	a099                	j	20016468 <__metal_driver_fixed_clock_rate+0x68>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:182
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20016424:	fec42703          	lw	a4,-20(s0)
20016428:	800007b7          	lui	a5,0x80000
2001642c:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8fc>
20016430:	00f71763          	bne	a4,a5,2001643e <__metal_driver_fixed_clock_rate+0x3e>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:183
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
20016434:	044aa7b7          	lui	a5,0x44aa
20016438:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
2001643c:	a035                	j	20016468 <__metal_driver_fixed_clock_rate+0x68>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:185
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
2001643e:	fec42703          	lw	a4,-20(s0)
20016442:	800007b7          	lui	a5,0x80000
20016446:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffe908>
2001644a:	00f71463          	bne	a4,a5,20016452 <__metal_driver_fixed_clock_rate+0x52>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:186
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
2001644e:	67a1                	lui	a5,0x8
20016450:	a821                	j	20016468 <__metal_driver_fixed_clock_rate+0x68>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:188
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_6) {
20016452:	fec42703          	lw	a4,-20(s0)
20016456:	800007b7          	lui	a5,0x80000
2001645a:	08478793          	addi	a5,a5,132 # 80000084 <metal_segment_heap_target_end+0xffffe914>
2001645e:	00f71463          	bne	a4,a5,20016466 <__metal_driver_fixed_clock_rate+0x66>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:189
		return METAL_FIXED_CLOCK_6_CLOCK_FREQUENCY;
20016462:	67a1                	lui	a5,0x8
20016464:	a011                	j	20016468 <__metal_driver_fixed_clock_rate+0x68>
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:192
		return 0;
20016466:	4781                	li	a5,0
D:\hifive1-revb\hifive1-revb-test-i2c-with-arduino\SiFive\sifive-hifive1-revb-i2c\bsp\build\debug/./metal/machine.h:194
}
20016468:	853e                	mv	a0,a5
2001646a:	4472                	lw	s0,28(sp)
2001646c:	6105                	addi	sp,sp,32
2001646e:	8082                	ret

20016470 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/fixed-clock.c:13
#include <metal/drivers/fixed-clock.h>
#include <stddef.h>
#include <metal/machine.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk)
{
20016470:	1101                	addi	sp,sp,-32
20016472:	ce06                	sw	ra,28(sp)
20016474:	cc22                	sw	s0,24(sp)
20016476:	1000                	addi	s0,sp,32
20016478:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/fixed-clock.c:14
    return __metal_driver_fixed_clock_rate(gclk);
2001647c:	fec42503          	lw	a0,-20(s0)
20016480:	3741                	jal	20016400 <__metal_driver_fixed_clock_rate>
20016482:	87aa                	mv	a5,a0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/fixed-clock.c:15
}
20016484:	853e                	mv	a0,a5
20016486:	40f2                	lw	ra,28(sp)
20016488:	4462                	lw	s0,24(sp)
2001648a:	6105                	addi	sp,sp,32
2001648c:	8082                	ret

2001648e <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/fixed-clock.c:18

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk, long target_hz)
{
2001648e:	1101                	addi	sp,sp,-32
20016490:	ce06                	sw	ra,28(sp)
20016492:	cc22                	sw	s0,24(sp)
20016494:	1000                	addi	s0,sp,32
20016496:	fea42623          	sw	a0,-20(s0)
2001649a:	feb42423          	sw	a1,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/fixed-clock.c:19
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
2001649e:	fec42503          	lw	a0,-20(s0)
200164a2:	37f9                	jal	20016470 <__metal_driver_fixed_clock_get_rate_hz>
200164a4:	87aa                	mv	a5,a0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/drivers/fixed-clock.c:20
}
200164a6:	853e                	mv	a0,a5
200164a8:	40f2                	lw	ra,28(sp)
200164aa:	4462                	lw	s0,24(sp)
200164ac:	6105                	addi	sp,sp,32
200164ae:	8082                	ret

200164b0 <metal_timer_get_cyclecount>:
metal_timer_get_cyclecount():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/timer.c:14

#if defined(__METAL_DT_MAX_HARTS)
/* This implementation serves as a small shim that interfaces with the first
 * timer on a system. */
int metal_timer_get_cyclecount(int hartid, unsigned long long *mcc)
{
200164b0:	7179                	addi	sp,sp,-48
200164b2:	d606                	sw	ra,44(sp)
200164b4:	d422                	sw	s0,40(sp)
200164b6:	1800                	addi	s0,sp,48
200164b8:	fca42e23          	sw	a0,-36(s0)
200164bc:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/timer.c:15
    struct metal_cpu *cpu = metal_cpu_get(hartid);
200164c0:	fdc42783          	lw	a5,-36(s0)
200164c4:	853e                	mv	a0,a5
200164c6:	c43ff0ef          	jal	ra,20016108 <metal_cpu_get>
200164ca:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/timer.c:17

    if ( cpu ) {
200164ce:	fec42783          	lw	a5,-20(s0)
200164d2:	cf91                	beqz	a5,200164ee <metal_timer_get_cyclecount+0x3e>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/timer.c:18
        *mcc = metal_cpu_get_timer(cpu);
200164d4:	fec42503          	lw	a0,-20(s0)
200164d8:	bb7ff0ef          	jal	ra,2001608e <metal_cpu_get_timer>
200164dc:	87aa                	mv	a5,a0
200164de:	882e                	mv	a6,a1
200164e0:	fd842703          	lw	a4,-40(s0)
200164e4:	c31c                	sw	a5,0(a4)
200164e6:	01072223          	sw	a6,4(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/timer.c:19
        return 0;
200164ea:	4781                	li	a5,0
200164ec:	a011                	j	200164f0 <metal_timer_get_cyclecount+0x40>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/timer.c:21
    }	
    return -1;
200164ee:	57fd                	li	a5,-1
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/timer.c:22
}
200164f0:	853e                	mv	a0,a5
200164f2:	50b2                	lw	ra,44(sp)
200164f4:	5422                	lw	s0,40(sp)
200164f6:	6145                	addi	sp,sp,48
200164f8:	8082                	ret

200164fa <metal_timer_get_timebase_frequency>:
metal_timer_get_timebase_frequency():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/timer.c:25

int metal_timer_get_timebase_frequency(int hartid, unsigned long long *timebase)
{
200164fa:	7179                	addi	sp,sp,-48
200164fc:	d606                	sw	ra,44(sp)
200164fe:	d422                	sw	s0,40(sp)
20016500:	1800                	addi	s0,sp,48
20016502:	fca42e23          	sw	a0,-36(s0)
20016506:	fcb42c23          	sw	a1,-40(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/timer.c:26
    struct metal_cpu *cpu = metal_cpu_get(hartid);
2001650a:	fdc42783          	lw	a5,-36(s0)
2001650e:	853e                	mv	a0,a5
20016510:	bf9ff0ef          	jal	ra,20016108 <metal_cpu_get>
20016514:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/timer.c:28

    if ( cpu ) {
20016518:	fec42783          	lw	a5,-20(s0)
2001651c:	cf91                	beqz	a5,20016538 <metal_timer_get_timebase_frequency+0x3e>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/timer.c:29
        *timebase = metal_cpu_get_timebase(cpu);
2001651e:	fec42503          	lw	a0,-20(s0)
20016522:	b97ff0ef          	jal	ra,200160b8 <metal_cpu_get_timebase>
20016526:	87aa                	mv	a5,a0
20016528:	882e                	mv	a6,a1
2001652a:	fd842703          	lw	a4,-40(s0)
2001652e:	c31c                	sw	a5,0(a4)
20016530:	01072223          	sw	a6,4(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/timer.c:30
        return 0;
20016534:	4781                	li	a5,0
20016536:	a011                	j	2001653a <metal_timer_get_timebase_frequency+0x40>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/timer.c:32
    } 
    return -1;
20016538:	57fd                	li	a5,-1
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/timer.c:33
}
2001653a:	853e                	mv	a0,a5
2001653c:	50b2                	lw	ra,44(sp)
2001653e:	5422                	lw	s0,40(sp)
20016540:	6145                	addi	sp,sp,48
20016542:	8082                	ret

20016544 <_close>:
_close():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_close.c:5
#include <errno.h>

int
_close(int file)
{
20016544:	1101                	addi	sp,sp,-32
20016546:	ce06                	sw	ra,28(sp)
20016548:	cc22                	sw	s0,24(sp)
2001654a:	1000                	addi	s0,sp,32
2001654c:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_close.c:6
  errno = ENOSYS;
20016550:	24ad                	jal	200167ba <__errno>
20016552:	872a                	mv	a4,a0
20016554:	05800793          	li	a5,88
20016558:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_close.c:7
  return -1;
2001655a:	57fd                	li	a5,-1
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_close.c:8
}
2001655c:	853e                	mv	a0,a5
2001655e:	40f2                	lw	ra,28(sp)
20016560:	4462                	lw	s0,24(sp)
20016562:	6105                	addi	sp,sp,32
20016564:	8082                	ret

20016566 <_fstat>:
_fstat():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_fstat.c:6
#include <errno.h>
#include <sys/stat.h>

int
_fstat(int file, struct stat *st)
{
20016566:	1101                	addi	sp,sp,-32
20016568:	ce06                	sw	ra,28(sp)
2001656a:	cc22                	sw	s0,24(sp)
2001656c:	1000                	addi	s0,sp,32
2001656e:	fea42623          	sw	a0,-20(s0)
20016572:	feb42423          	sw	a1,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_fstat.c:7
  errno = -ENOSYS;
20016576:	2491                	jal	200167ba <__errno>
20016578:	872a                	mv	a4,a0
2001657a:	fa800793          	li	a5,-88
2001657e:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_fstat.c:8
  return -1;
20016580:	57fd                	li	a5,-1
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_fstat.c:9
}
20016582:	853e                	mv	a0,a5
20016584:	40f2                	lw	ra,28(sp)
20016586:	4462                	lw	s0,24(sp)
20016588:	6105                	addi	sp,sp,32
2001658a:	8082                	ret

2001658c <_gettimeofday>:
_gettimeofday():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_gettimeofday.c:7
#include <metal/timer.h>
#include <sys/time.h>

int
_gettimeofday(struct timeval *tp, void *tzp)
{
2001658c:	7139                	addi	sp,sp,-64
2001658e:	de06                	sw	ra,60(sp)
20016590:	dc22                	sw	s0,56(sp)
20016592:	da4a                	sw	s2,52(sp)
20016594:	d84e                	sw	s3,48(sp)
20016596:	0080                	addi	s0,sp,64
20016598:	fca42623          	sw	a0,-52(s0)
2001659c:	fcb42423          	sw	a1,-56(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_gettimeofday.c:10
    int rv;
    unsigned long long mcc, timebase;
    rv = metal_timer_get_cyclecount(0, &mcc);
200165a0:	fe040793          	addi	a5,s0,-32
200165a4:	85be                	mv	a1,a5
200165a6:	4501                	li	a0,0
200165a8:	f09ff0ef          	jal	ra,200164b0 <metal_timer_get_cyclecount>
200165ac:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_gettimeofday.c:11
    if (rv != 0) {
200165b0:	fec42783          	lw	a5,-20(s0)
200165b4:	c399                	beqz	a5,200165ba <_gettimeofday+0x2e>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_gettimeofday.c:12
        return -1;
200165b6:	57fd                	li	a5,-1
200165b8:	a075                	j	20016664 <_gettimeofday+0xd8>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_gettimeofday.c:14
    }
    rv = metal_timer_get_timebase_frequency(0, &timebase);
200165ba:	fd840793          	addi	a5,s0,-40
200165be:	85be                	mv	a1,a5
200165c0:	4501                	li	a0,0
200165c2:	3f25                	jal	200164fa <metal_timer_get_timebase_frequency>
200165c4:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_gettimeofday.c:15
    if (rv != 0) {
200165c8:	fec42783          	lw	a5,-20(s0)
200165cc:	c399                	beqz	a5,200165d2 <_gettimeofday+0x46>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_gettimeofday.c:16
        return -1;
200165ce:	57fd                	li	a5,-1
200165d0:	a851                	j	20016664 <_gettimeofday+0xd8>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_gettimeofday.c:18
    }
    tp->tv_sec = mcc / timebase;
200165d2:	fe042783          	lw	a5,-32(s0)
200165d6:	fe442803          	lw	a6,-28(s0)
200165da:	fd842683          	lw	a3,-40(s0)
200165de:	fdc42703          	lw	a4,-36(s0)
200165e2:	8636                	mv	a2,a3
200165e4:	86ba                	mv	a3,a4
200165e6:	853e                	mv	a0,a5
200165e8:	85c2                	mv	a1,a6
200165ea:	2eed                	jal	200169e4 <__udivdi3>
200165ec:	87aa                	mv	a5,a0
200165ee:	882e                	mv	a6,a1
200165f0:	fcc42703          	lw	a4,-52(s0)
200165f4:	c31c                	sw	a5,0(a4)
200165f6:	01072223          	sw	a6,4(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_gettimeofday.c:19
    tp->tv_usec = mcc % timebase * 1000000 / timebase;
200165fa:	fe042783          	lw	a5,-32(s0)
200165fe:	fe442803          	lw	a6,-28(s0)
20016602:	fd842683          	lw	a3,-40(s0)
20016606:	fdc42703          	lw	a4,-36(s0)
2001660a:	8636                	mv	a2,a3
2001660c:	86ba                	mv	a3,a4
2001660e:	853e                	mv	a0,a5
20016610:	85c2                	mv	a1,a6
20016612:	2f05                	jal	20016d42 <__umoddi3>
20016614:	87aa                	mv	a5,a0
20016616:	882e                	mv	a6,a1
20016618:	000f4737          	lui	a4,0xf4
2001661c:	24070713          	addi	a4,a4,576 # f4240 <__heap_size+0xf3a40>
20016620:	02e806b3          	mul	a3,a6,a4
20016624:	4701                	li	a4,0
20016626:	02e78733          	mul	a4,a5,a4
2001662a:	96ba                	add	a3,a3,a4
2001662c:	000f4737          	lui	a4,0xf4
20016630:	24070713          	addi	a4,a4,576 # f4240 <__heap_size+0xf3a40>
20016634:	02e78633          	mul	a2,a5,a4
20016638:	02e7b9b3          	mulhu	s3,a5,a4
2001663c:	8932                	mv	s2,a2
2001663e:	013687b3          	add	a5,a3,s3
20016642:	89be                	mv	s3,a5
20016644:	fd842783          	lw	a5,-40(s0)
20016648:	fdc42803          	lw	a6,-36(s0)
2001664c:	863e                	mv	a2,a5
2001664e:	86c2                	mv	a3,a6
20016650:	854a                	mv	a0,s2
20016652:	85ce                	mv	a1,s3
20016654:	2e41                	jal	200169e4 <__udivdi3>
20016656:	87aa                	mv	a5,a0
20016658:	882e                	mv	a6,a1
2001665a:	873e                	mv	a4,a5
2001665c:	fcc42783          	lw	a5,-52(s0)
20016660:	c798                	sw	a4,8(a5)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_gettimeofday.c:20
    return 0;
20016662:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_gettimeofday.c:21 (discriminator 1)
}
20016664:	853e                	mv	a0,a5
20016666:	50f2                	lw	ra,60(sp)
20016668:	5462                	lw	s0,56(sp)
2001666a:	5952                	lw	s2,52(sp)
2001666c:	59c2                	lw	s3,48(sp)
2001666e:	6121                	addi	sp,sp,64
20016670:	8082                	ret

20016672 <_isatty>:
_isatty():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_isatty.c:5
#include <unistd.h>

int
_isatty(int file)
{
20016672:	1101                	addi	sp,sp,-32
20016674:	ce22                	sw	s0,28(sp)
20016676:	1000                	addi	s0,sp,32
20016678:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_isatty.c:6
  return (file == STDOUT_FILENO);
2001667c:	fec42783          	lw	a5,-20(s0)
20016680:	17fd                	addi	a5,a5,-1
20016682:	0017b793          	seqz	a5,a5
20016686:	0ff7f793          	andi	a5,a5,255
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_isatty.c:7
}
2001668a:	853e                	mv	a0,a5
2001668c:	4472                	lw	s0,28(sp)
2001668e:	6105                	addi	sp,sp,32
20016690:	8082                	ret

20016692 <_lseek>:
_lseek():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_lseek.c:6
#include <sys/types.h>
#include <errno.h>

off_t
_lseek(int file, off_t ptr, int dir)
{
20016692:	1101                	addi	sp,sp,-32
20016694:	ce06                	sw	ra,28(sp)
20016696:	cc22                	sw	s0,24(sp)
20016698:	1000                	addi	s0,sp,32
2001669a:	fea42623          	sw	a0,-20(s0)
2001669e:	feb42423          	sw	a1,-24(s0)
200166a2:	fec42223          	sw	a2,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_lseek.c:7
  errno = ENOSYS;
200166a6:	2a11                	jal	200167ba <__errno>
200166a8:	872a                	mv	a4,a0
200166aa:	05800793          	li	a5,88
200166ae:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_lseek.c:8
  return -1;
200166b0:	57fd                	li	a5,-1
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_lseek.c:9
}
200166b2:	853e                	mv	a0,a5
200166b4:	40f2                	lw	ra,28(sp)
200166b6:	4462                	lw	s0,24(sp)
200166b8:	6105                	addi	sp,sp,32
200166ba:	8082                	ret

200166bc <_read>:
_read():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_read.c:6
#include <sys/types.h>
#include <errno.h>

ssize_t
_read(int file, void *ptr, size_t len)
{
200166bc:	1101                	addi	sp,sp,-32
200166be:	ce06                	sw	ra,28(sp)
200166c0:	cc22                	sw	s0,24(sp)
200166c2:	1000                	addi	s0,sp,32
200166c4:	fea42623          	sw	a0,-20(s0)
200166c8:	feb42423          	sw	a1,-24(s0)
200166cc:	fec42223          	sw	a2,-28(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_read.c:7
  errno = ENOSYS;
200166d0:	20ed                	jal	200167ba <__errno>
200166d2:	872a                	mv	a4,a0
200166d4:	05800793          	li	a5,88
200166d8:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_read.c:8
  return -1;
200166da:	57fd                	li	a5,-1
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_read.c:9
}
200166dc:	853e                	mv	a0,a5
200166de:	40f2                	lw	ra,28(sp)
200166e0:	4462                	lw	s0,24(sp)
200166e2:	6105                	addi	sp,sp,32
200166e4:	8082                	ret

200166e6 <_sbrk>:
_sbrk():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_sbrk.c:22
  return 0;
}

char *
_sbrk(ptrdiff_t incr)
{
200166e6:	7179                	addi	sp,sp,-48
200166e8:	d622                	sw	s0,44(sp)
200166ea:	1800                	addi	s0,sp,48
200166ec:	fca42e23          	sw	a0,-36(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_sbrk.c:23
  char *old = brk;
200166f0:	8401a783          	lw	a5,-1984(gp) # 80000ac8 <brk>
200166f4:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_sbrk.c:26

  /* If __heap_size == 0, we can't allocate memory on the heap */
  if(&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
200166f8:	ce818713          	addi	a4,gp,-792 # 80000f70 <_sp>
200166fc:	4e818793          	addi	a5,gp,1256 # 80001770 <metal_segment_heap_target_end>
20016700:	00f71463          	bne	a4,a5,20016708 <_sbrk+0x22>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_sbrk.c:27
    return (void *)-1;
20016704:	57fd                	li	a5,-1
20016706:	a80d                	j	20016738 <_sbrk+0x52>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_sbrk.c:31
  }

  /* Don't move the break past the end of the heap */
  if ((brk + incr) < &metal_segment_heap_target_end) {
20016708:	8401a703          	lw	a4,-1984(gp) # 80000ac8 <brk>
2001670c:	fdc42783          	lw	a5,-36(s0)
20016710:	973e                	add	a4,a4,a5
20016712:	4e818793          	addi	a5,gp,1256 # 80001770 <metal_segment_heap_target_end>
20016716:	00f77c63          	bgeu	a4,a5,2001672e <_sbrk+0x48>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_sbrk.c:32
    brk += incr;
2001671a:	8401a703          	lw	a4,-1984(gp) # 80000ac8 <brk>
2001671e:	fdc42783          	lw	a5,-36(s0)
20016722:	973e                	add	a4,a4,a5
20016724:	84e1a023          	sw	a4,-1984(gp) # 80000ac8 <brk>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_sbrk.c:38
  } else {
    brk = &metal_segment_heap_target_end;
    return (void *)-1;
  }

  return old;
20016728:	fec42783          	lw	a5,-20(s0)
2001672c:	a031                	j	20016738 <_sbrk+0x52>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_sbrk.c:34
    brk = &metal_segment_heap_target_end;
2001672e:	4e818713          	addi	a4,gp,1256 # 80001770 <metal_segment_heap_target_end>
20016732:	84e1a023          	sw	a4,-1984(gp) # 80000ac8 <brk>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_sbrk.c:35
    return (void *)-1;
20016736:	57fd                	li	a5,-1
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_sbrk.c:39
}
20016738:	853e                	mv	a0,a5
2001673a:	5432                	lw	s0,44(sp)
2001673c:	6145                	addi	sp,sp,48
2001673e:	8082                	ret

20016740 <_write>:
_write():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_write.c:9
#include <unistd.h>

/* Write to a file.  */
ssize_t
_write(int file, const void *ptr, size_t len)
{
20016740:	7179                	addi	sp,sp,-48
20016742:	d606                	sw	ra,44(sp)
20016744:	d422                	sw	s0,40(sp)
20016746:	1800                	addi	s0,sp,48
20016748:	fca42e23          	sw	a0,-36(s0)
2001674c:	fcb42c23          	sw	a1,-40(s0)
20016750:	fcc42a23          	sw	a2,-44(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_write.c:10
  if (file != STDOUT_FILENO) {
20016754:	fdc42703          	lw	a4,-36(s0)
20016758:	4785                	li	a5,1
2001675a:	00f70963          	beq	a4,a5,2001676c <_write+0x2c>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_write.c:11
    errno = ENOSYS;
2001675e:	28b1                	jal	200167ba <__errno>
20016760:	872a                	mv	a4,a0
20016762:	05800793          	li	a5,88
20016766:	c31c                	sw	a5,0(a4)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_write.c:12
    return -1;
20016768:	57fd                	li	a5,-1
2001676a:	a835                	j	200167a6 <_write+0x66>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_write.c:15
  }

  const char *bptr = ptr;
2001676c:	fd842783          	lw	a5,-40(s0)
20016770:	fef42423          	sw	a5,-24(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_write.c:16
  for (size_t i = 0; i < len; ++i)
20016774:	fe042623          	sw	zero,-20(s0)
20016778:	a005                	j	20016798 <_write+0x58>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_write.c:17 (discriminator 3)
    metal_tty_putc(bptr[i]);
2001677a:	fe842703          	lw	a4,-24(s0)
2001677e:	fec42783          	lw	a5,-20(s0)
20016782:	97ba                	add	a5,a5,a4
20016784:	0007c783          	lbu	a5,0(a5) # 8000 <__heap_size+0x7800>
20016788:	853e                	mv	a0,a5
2001678a:	10b000ef          	jal	ra,20017094 <metal_tty_putc>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_write.c:16 (discriminator 3)
  for (size_t i = 0; i < len; ++i)
2001678e:	fec42783          	lw	a5,-20(s0)
20016792:	0785                	addi	a5,a5,1
20016794:	fef42623          	sw	a5,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_write.c:16 (discriminator 1)
20016798:	fec42703          	lw	a4,-20(s0)
2001679c:	fd442783          	lw	a5,-44(s0)
200167a0:	fcf76de3          	bltu	a4,a5,2001677a <_write+0x3a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_write.c:18
  return 0;
200167a4:	4781                	li	a5,0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_write.c:19
}
200167a6:	853e                	mv	a0,a5
200167a8:	50b2                	lw	ra,44(sp)
200167aa:	5422                	lw	s0,40(sp)
200167ac:	6145                	addi	sp,sp,48
200167ae:	8082                	ret

200167b0 <atexit>:
atexit():
200167b0:	85aa                	mv	a1,a0
200167b2:	4681                	li	a3,0
200167b4:	4601                	li	a2,0
200167b6:	4501                	li	a0,0
200167b8:	a8f1                	j	20016894 <__register_exitproc>

200167ba <__errno>:
__errno():
200167ba:	5ffea797          	auipc	a5,0x5ffea
200167be:	2d278793          	addi	a5,a5,722 # 80000a8c <_impure_ptr>
200167c2:	4388                	lw	a0,0(a5)
200167c4:	8082                	ret

200167c6 <exit>:
exit():
200167c6:	1141                	addi	sp,sp,-16
200167c8:	c422                	sw	s0,8(sp)
200167ca:	c606                	sw	ra,12(sp)
200167cc:	00000797          	auipc	a5,0x0
200167d0:	15078793          	addi	a5,a5,336 # 2001691c <__call_exitprocs>
200167d4:	842a                	mv	s0,a0
200167d6:	c399                	beqz	a5,200167dc <exit+0x16>
200167d8:	4581                	li	a1,0
200167da:	2289                	jal	2001691c <__call_exitprocs>
200167dc:	5ffea797          	auipc	a5,0x5ffea
200167e0:	2b478793          	addi	a5,a5,692 # 80000a90 <_global_impure_ptr>
200167e4:	4388                	lw	a0,0(a5)
200167e6:	551c                	lw	a5,40(a0)
200167e8:	c391                	beqz	a5,200167ec <exit+0x26>
200167ea:	9782                	jalr	a5
200167ec:	8522                	mv	a0,s0
200167ee:	11f000ef          	jal	ra,2001710c <_exit>

200167f2 <__libc_fini_array>:
__libc_fini_array():
200167f2:	1141                	addi	sp,sp,-16
200167f4:	00001797          	auipc	a5,0x1
200167f8:	7d078793          	addi	a5,a5,2000 # 20017fc4 <__fini_array_end>
200167fc:	c422                	sw	s0,8(sp)
200167fe:	00001417          	auipc	s0,0x1
20016802:	7c640413          	addi	s0,s0,1990 # 20017fc4 <__fini_array_end>
20016806:	8c1d                	sub	s0,s0,a5
20016808:	c226                	sw	s1,4(sp)
2001680a:	c606                	sw	ra,12(sp)
2001680c:	8409                	srai	s0,s0,0x2
2001680e:	84be                	mv	s1,a5
20016810:	e411                	bnez	s0,2001681c <__libc_fini_array+0x2a>
20016812:	40b2                	lw	ra,12(sp)
20016814:	4422                	lw	s0,8(sp)
20016816:	4492                	lw	s1,4(sp)
20016818:	0141                	addi	sp,sp,16
2001681a:	8082                	ret
2001681c:	147d                	addi	s0,s0,-1
2001681e:	00241793          	slli	a5,s0,0x2
20016822:	97a6                	add	a5,a5,s1
20016824:	439c                	lw	a5,0(a5)
20016826:	9782                	jalr	a5
20016828:	b7e5                	j	20016810 <__libc_fini_array+0x1e>

2001682a <__libc_init_array>:
__libc_init_array():
2001682a:	1141                	addi	sp,sp,-16
2001682c:	00001797          	auipc	a5,0x1
20016830:	78c78793          	addi	a5,a5,1932 # 20017fb8 <__init_array_start>
20016834:	c422                	sw	s0,8(sp)
20016836:	00001417          	auipc	s0,0x1
2001683a:	78240413          	addi	s0,s0,1922 # 20017fb8 <__init_array_start>
2001683e:	8c1d                	sub	s0,s0,a5
20016840:	c226                	sw	s1,4(sp)
20016842:	c04a                	sw	s2,0(sp)
20016844:	c606                	sw	ra,12(sp)
20016846:	8409                	srai	s0,s0,0x2
20016848:	4481                	li	s1,0
2001684a:	893e                	mv	s2,a5
2001684c:	02849663          	bne	s1,s0,20016878 <__libc_init_array+0x4e>
20016850:	00001797          	auipc	a5,0x1
20016854:	76878793          	addi	a5,a5,1896 # 20017fb8 <__init_array_start>
20016858:	00001417          	auipc	s0,0x1
2001685c:	76c40413          	addi	s0,s0,1900 # 20017fc4 <__fini_array_end>
20016860:	8c1d                	sub	s0,s0,a5
20016862:	8409                	srai	s0,s0,0x2
20016864:	4481                	li	s1,0
20016866:	893e                	mv	s2,a5
20016868:	00849f63          	bne	s1,s0,20016886 <__libc_init_array+0x5c>
2001686c:	40b2                	lw	ra,12(sp)
2001686e:	4422                	lw	s0,8(sp)
20016870:	4492                	lw	s1,4(sp)
20016872:	4902                	lw	s2,0(sp)
20016874:	0141                	addi	sp,sp,16
20016876:	8082                	ret
20016878:	00249793          	slli	a5,s1,0x2
2001687c:	97ca                	add	a5,a5,s2
2001687e:	439c                	lw	a5,0(a5)
20016880:	0485                	addi	s1,s1,1
20016882:	9782                	jalr	a5
20016884:	b7e1                	j	2001684c <__libc_init_array+0x22>
20016886:	00249793          	slli	a5,s1,0x2
2001688a:	97ca                	add	a5,a5,s2
2001688c:	439c                	lw	a5,0(a5)
2001688e:	0485                	addi	s1,s1,1
20016890:	9782                	jalr	a5
20016892:	bfd9                	j	20016868 <__libc_init_array+0x3e>

20016894 <__register_exitproc>:
__register_exitproc():
20016894:	5ffea797          	auipc	a5,0x5ffea
20016898:	24878793          	addi	a5,a5,584 # 80000adc <_global_atexit>
2001689c:	439c                	lw	a5,0(a5)
2001689e:	8e2a                	mv	t3,a0
200168a0:	e39d                	bnez	a5,200168c6 <__register_exitproc+0x32>
200168a2:	5ffea717          	auipc	a4,0x5ffea
200168a6:	23e70713          	addi	a4,a4,574 # 80000ae0 <_global_atexit0>
200168aa:	5ffea797          	auipc	a5,0x5ffea
200168ae:	22e7a923          	sw	a4,562(a5) # 80000adc <_global_atexit>
200168b2:	dffe9517          	auipc	a0,0xdffe9
200168b6:	74e50513          	addi	a0,a0,1870 # 0 <__metal_boot_hart>
200168ba:	87ba                	mv	a5,a4
200168bc:	c509                	beqz	a0,200168c6 <__register_exitproc+0x32>
200168be:	411c                	lw	a5,0(a0)
200168c0:	8ef1a023          	sw	a5,-1824(gp) # 80000b68 <_global_atexit0+0x88>
200168c4:	87ba                	mv	a5,a4
200168c6:	43d8                	lw	a4,4(a5)
200168c8:	487d                	li	a6,31
200168ca:	557d                	li	a0,-1
200168cc:	04e84763          	blt	a6,a4,2001691a <__register_exitproc+0x86>
200168d0:	020e0e63          	beqz	t3,2001690c <__register_exitproc+0x78>
200168d4:	0887a803          	lw	a6,136(a5)
200168d8:	04080163          	beqz	a6,2001691a <__register_exitproc+0x86>
200168dc:	00271893          	slli	a7,a4,0x2
200168e0:	98c2                	add	a7,a7,a6
200168e2:	00c8a023          	sw	a2,0(a7)
200168e6:	10082303          	lw	t1,256(a6)
200168ea:	4605                	li	a2,1
200168ec:	00e61633          	sll	a2,a2,a4
200168f0:	00c36333          	or	t1,t1,a2
200168f4:	10682023          	sw	t1,256(a6)
200168f8:	08d8a023          	sw	a3,128(a7)
200168fc:	4689                	li	a3,2
200168fe:	00de1763          	bne	t3,a3,2001690c <__register_exitproc+0x78>
20016902:	10482683          	lw	a3,260(a6)
20016906:	8e55                	or	a2,a2,a3
20016908:	10c82223          	sw	a2,260(a6)
2001690c:	00170693          	addi	a3,a4,1
20016910:	070a                	slli	a4,a4,0x2
20016912:	c3d4                	sw	a3,4(a5)
20016914:	97ba                	add	a5,a5,a4
20016916:	c78c                	sw	a1,8(a5)
20016918:	4501                	li	a0,0
2001691a:	8082                	ret

2001691c <__call_exitprocs>:
__call_exitprocs():
2001691c:	7179                	addi	sp,sp,-48
2001691e:	cc52                	sw	s4,24(sp)
20016920:	ca56                	sw	s5,20(sp)
20016922:	c85a                	sw	s6,16(sp)
20016924:	c65e                	sw	s7,12(sp)
20016926:	d606                	sw	ra,44(sp)
20016928:	d422                	sw	s0,40(sp)
2001692a:	d226                	sw	s1,36(sp)
2001692c:	d04a                	sw	s2,32(sp)
2001692e:	ce4e                	sw	s3,28(sp)
20016930:	c462                	sw	s8,8(sp)
20016932:	8b2a                	mv	s6,a0
20016934:	8a2e                	mv	s4,a1
20016936:	5ffeaa97          	auipc	s5,0x5ffea
2001693a:	1a6a8a93          	addi	s5,s5,422 # 80000adc <_global_atexit>
2001693e:	4b85                	li	s7,1
20016940:	000aa403          	lw	s0,0(s5)
20016944:	c811                	beqz	s0,20016958 <__call_exitprocs+0x3c>
20016946:	4044                	lw	s1,4(s0)
20016948:	08842983          	lw	s3,136(s0)
2001694c:	fff48913          	addi	s2,s1,-1
20016950:	048a                	slli	s1,s1,0x2
20016952:	94a2                	add	s1,s1,s0
20016954:	00095e63          	bgez	s2,20016970 <__call_exitprocs+0x54>
20016958:	50b2                	lw	ra,44(sp)
2001695a:	5422                	lw	s0,40(sp)
2001695c:	5492                	lw	s1,36(sp)
2001695e:	5902                	lw	s2,32(sp)
20016960:	49f2                	lw	s3,28(sp)
20016962:	4a62                	lw	s4,24(sp)
20016964:	4ad2                	lw	s5,20(sp)
20016966:	4b42                	lw	s6,16(sp)
20016968:	4bb2                	lw	s7,12(sp)
2001696a:	4c22                	lw	s8,8(sp)
2001696c:	6145                	addi	sp,sp,48
2001696e:	8082                	ret
20016970:	000a0e63          	beqz	s4,2001698c <__call_exitprocs+0x70>
20016974:	00099563          	bnez	s3,2001697e <__call_exitprocs+0x62>
20016978:	197d                	addi	s2,s2,-1
2001697a:	14f1                	addi	s1,s1,-4
2001697c:	bfe1                	j	20016954 <__call_exitprocs+0x38>
2001697e:	00291793          	slli	a5,s2,0x2
20016982:	97ce                	add	a5,a5,s3
20016984:	0807a783          	lw	a5,128(a5)
20016988:	ff4798e3          	bne	a5,s4,20016978 <__call_exitprocs+0x5c>
2001698c:	4058                	lw	a4,4(s0)
2001698e:	40dc                	lw	a5,4(s1)
20016990:	177d                	addi	a4,a4,-1
20016992:	03271863          	bne	a4,s2,200169c2 <__call_exitprocs+0xa6>
20016996:	01242223          	sw	s2,4(s0)
2001699a:	dff9                	beqz	a5,20016978 <__call_exitprocs+0x5c>
2001699c:	00442c03          	lw	s8,4(s0)
200169a0:	00098863          	beqz	s3,200169b0 <__call_exitprocs+0x94>
200169a4:	1009a683          	lw	a3,256(s3)
200169a8:	012b9733          	sll	a4,s7,s2
200169ac:	8ef9                	and	a3,a3,a4
200169ae:	ee89                	bnez	a3,200169c8 <__call_exitprocs+0xac>
200169b0:	9782                	jalr	a5
200169b2:	4058                	lw	a4,4(s0)
200169b4:	000aa783          	lw	a5,0(s5)
200169b8:	f98714e3          	bne	a4,s8,20016940 <__call_exitprocs+0x24>
200169bc:	faf40ee3          	beq	s0,a5,20016978 <__call_exitprocs+0x5c>
200169c0:	b741                	j	20016940 <__call_exitprocs+0x24>
200169c2:	0004a223          	sw	zero,4(s1)
200169c6:	bfd1                	j	2001699a <__call_exitprocs+0x7e>
200169c8:	00291693          	slli	a3,s2,0x2
200169cc:	96ce                	add	a3,a3,s3
200169ce:	428c                	lw	a1,0(a3)
200169d0:	1049a683          	lw	a3,260(s3)
200169d4:	8f75                	and	a4,a4,a3
200169d6:	e701                	bnez	a4,200169de <__call_exitprocs+0xc2>
200169d8:	855a                	mv	a0,s6
200169da:	9782                	jalr	a5
200169dc:	bfd9                	j	200169b2 <__call_exitprocs+0x96>
200169de:	852e                	mv	a0,a1
200169e0:	9782                	jalr	a5
200169e2:	bfc1                	j	200169b2 <__call_exitprocs+0x96>

200169e4 <__udivdi3>:
__udivdi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1319
200169e4:	87ae                	mv	a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
200169e6:	8832                	mv	a6,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
200169e8:	8736                	mv	a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
200169ea:	832a                	mv	t1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
200169ec:	20069663          	bnez	a3,20016bf8 <__udivdi3+0x214>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
200169f0:	00001897          	auipc	a7,0x1
200169f4:	4c888893          	addi	a7,a7,1224 # 20017eb8 <__clz_tab>
200169f8:	0ac5fe63          	bgeu	a1,a2,20016ab4 <__udivdi3+0xd0>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
200169fc:	6741                	lui	a4,0x10
200169fe:	0ae67463          	bgeu	a2,a4,20016aa6 <__udivdi3+0xc2>
20016a02:	0ff00713          	li	a4,255
20016a06:	00c73733          	sltu	a4,a4,a2
20016a0a:	070e                	slli	a4,a4,0x3
20016a0c:	00e656b3          	srl	a3,a2,a4
20016a10:	98b6                	add	a7,a7,a3
20016a12:	0008c683          	lbu	a3,0(a7)
20016a16:	9736                	add	a4,a4,a3
20016a18:	02000693          	li	a3,32
20016a1c:	8e99                	sub	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
20016a1e:	ca99                	beqz	a3,20016a34 <__udivdi3+0x50>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20016a20:	00d797b3          	sll	a5,a5,a3
20016a24:	00e55733          	srl	a4,a0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20016a28:	00d61833          	sll	a6,a2,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20016a2c:	00f765b3          	or	a1,a4,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
20016a30:	00d51333          	sll	t1,a0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
20016a34:	01085513          	srli	a0,a6,0x10
20016a38:	02a5f733          	remu	a4,a1,a0
20016a3c:	01081613          	slli	a2,a6,0x10
20016a40:	8241                	srli	a2,a2,0x10
20016a42:	01035693          	srli	a3,t1,0x10
20016a46:	02a5d5b3          	divu	a1,a1,a0
20016a4a:	0742                	slli	a4,a4,0x10
20016a4c:	8ed9                	or	a3,a3,a4
20016a4e:	02b607b3          	mul	a5,a2,a1
20016a52:	872e                	mv	a4,a1
20016a54:	00f6fc63          	bgeu	a3,a5,20016a6c <__udivdi3+0x88>
20016a58:	96c2                	add	a3,a3,a6
20016a5a:	fff58713          	addi	a4,a1,-1
20016a5e:	0106e763          	bltu	a3,a6,20016a6c <__udivdi3+0x88>
20016a62:	00f6f563          	bgeu	a3,a5,20016a6c <__udivdi3+0x88>
20016a66:	ffe58713          	addi	a4,a1,-2
20016a6a:	96c2                	add	a3,a3,a6
20016a6c:	8e9d                	sub	a3,a3,a5
20016a6e:	02a6f7b3          	remu	a5,a3,a0
20016a72:	0342                	slli	t1,t1,0x10
20016a74:	01035313          	srli	t1,t1,0x10
20016a78:	02a6d6b3          	divu	a3,a3,a0
20016a7c:	07c2                	slli	a5,a5,0x10
20016a7e:	0067e333          	or	t1,a5,t1
20016a82:	02d605b3          	mul	a1,a2,a3
20016a86:	8536                	mv	a0,a3
20016a88:	00b37b63          	bgeu	t1,a1,20016a9e <__udivdi3+0xba>
20016a8c:	9342                	add	t1,t1,a6
20016a8e:	fff68513          	addi	a0,a3,-1
20016a92:	01036663          	bltu	t1,a6,20016a9e <__udivdi3+0xba>
20016a96:	00b37463          	bgeu	t1,a1,20016a9e <__udivdi3+0xba>
20016a9a:	ffe68513          	addi	a0,a3,-2
20016a9e:	0742                	slli	a4,a4,0x10
20016aa0:	8f49                	or	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
20016aa2:	4581                	li	a1,0
20016aa4:	a84d                	j	20016b56 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20016aa6:	010006b7          	lui	a3,0x1000
20016aaa:	4741                	li	a4,16
20016aac:	f6d660e3          	bltu	a2,a3,20016a0c <__udivdi3+0x28>
20016ab0:	4761                	li	a4,24
20016ab2:	bfa9                	j	20016a0c <__udivdi3+0x28>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
20016ab4:	e601                	bnez	a2,20016abc <__udivdi3+0xd8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
20016ab6:	4685                	li	a3,1
20016ab8:	02c6d833          	divu	a6,a3,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20016abc:	66c1                	lui	a3,0x10
20016abe:	08d87e63          	bgeu	a6,a3,20016b5a <__udivdi3+0x176>
20016ac2:	0ff00693          	li	a3,255
20016ac6:	0106f363          	bgeu	a3,a6,20016acc <__udivdi3+0xe8>
20016aca:	4721                	li	a4,8
20016acc:	00e856b3          	srl	a3,a6,a4
20016ad0:	98b6                	add	a7,a7,a3
20016ad2:	0008c683          	lbu	a3,0(a7)
20016ad6:	96ba                	add	a3,a3,a4
20016ad8:	02000713          	li	a4,32
20016adc:	8f15                	sub	a4,a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
20016ade:	e749                	bnez	a4,20016b68 <__udivdi3+0x184>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
20016ae0:	410787b3          	sub	a5,a5,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1106
20016ae4:	4585                	li	a1,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
20016ae6:	01085613          	srli	a2,a6,0x10
20016aea:	01081893          	slli	a7,a6,0x10
20016aee:	0108d893          	srli	a7,a7,0x10
20016af2:	01035693          	srli	a3,t1,0x10
20016af6:	02c7f733          	remu	a4,a5,a2
20016afa:	02c7d7b3          	divu	a5,a5,a2
20016afe:	0742                	slli	a4,a4,0x10
20016b00:	8ed9                	or	a3,a3,a4
20016b02:	02f88533          	mul	a0,a7,a5
20016b06:	873e                	mv	a4,a5
20016b08:	00a6fc63          	bgeu	a3,a0,20016b20 <__udivdi3+0x13c>
20016b0c:	96c2                	add	a3,a3,a6
20016b0e:	fff78713          	addi	a4,a5,-1
20016b12:	0106e763          	bltu	a3,a6,20016b20 <__udivdi3+0x13c>
20016b16:	00a6f563          	bgeu	a3,a0,20016b20 <__udivdi3+0x13c>
20016b1a:	ffe78713          	addi	a4,a5,-2
20016b1e:	96c2                	add	a3,a3,a6
20016b20:	8e89                	sub	a3,a3,a0
20016b22:	02c6f7b3          	remu	a5,a3,a2
20016b26:	0342                	slli	t1,t1,0x10
20016b28:	01035313          	srli	t1,t1,0x10
20016b2c:	02c6d6b3          	divu	a3,a3,a2
20016b30:	07c2                	slli	a5,a5,0x10
20016b32:	0067e333          	or	t1,a5,t1
20016b36:	02d888b3          	mul	a7,a7,a3
20016b3a:	8536                	mv	a0,a3
20016b3c:	01137b63          	bgeu	t1,a7,20016b52 <__udivdi3+0x16e>
20016b40:	9342                	add	t1,t1,a6
20016b42:	fff68513          	addi	a0,a3,-1 # ffff <__heap_size+0xf7ff>
20016b46:	01036663          	bltu	t1,a6,20016b52 <__udivdi3+0x16e>
20016b4a:	01137463          	bgeu	t1,a7,20016b52 <__udivdi3+0x16e>
20016b4e:	ffe68513          	addi	a0,a3,-2
20016b52:	0742                	slli	a4,a4,0x10
20016b54:	8f49                	or	a4,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1321
20016b56:	853a                	mv	a0,a4
20016b58:	8082                	ret
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20016b5a:	010006b7          	lui	a3,0x1000
20016b5e:	4741                	li	a4,16
20016b60:	f6d866e3          	bltu	a6,a3,20016acc <__udivdi3+0xe8>
20016b64:	4761                	li	a4,24
20016b66:	b79d                	j	20016acc <__udivdi3+0xe8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
20016b68:	00e81833          	sll	a6,a6,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20016b6c:	00d7d5b3          	srl	a1,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
20016b70:	00e51333          	sll	t1,a0,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20016b74:	00d556b3          	srl	a3,a0,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20016b78:	01085513          	srli	a0,a6,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20016b7c:	00e797b3          	sll	a5,a5,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20016b80:	02a5f733          	remu	a4,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20016b84:	00f6e8b3          	or	a7,a3,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20016b88:	01081793          	slli	a5,a6,0x10
20016b8c:	83c1                	srli	a5,a5,0x10
20016b8e:	0108d613          	srli	a2,a7,0x10
20016b92:	02a5d5b3          	divu	a1,a1,a0
20016b96:	0742                	slli	a4,a4,0x10
20016b98:	8f51                	or	a4,a4,a2
20016b9a:	02b786b3          	mul	a3,a5,a1
20016b9e:	862e                	mv	a2,a1
20016ba0:	00d77c63          	bgeu	a4,a3,20016bb8 <__udivdi3+0x1d4>
20016ba4:	9742                	add	a4,a4,a6
20016ba6:	fff58613          	addi	a2,a1,-1
20016baa:	01076763          	bltu	a4,a6,20016bb8 <__udivdi3+0x1d4>
20016bae:	00d77563          	bgeu	a4,a3,20016bb8 <__udivdi3+0x1d4>
20016bb2:	ffe58613          	addi	a2,a1,-2
20016bb6:	9742                	add	a4,a4,a6
20016bb8:	40d706b3          	sub	a3,a4,a3
20016bbc:	02a6f733          	remu	a4,a3,a0
20016bc0:	08c2                	slli	a7,a7,0x10
20016bc2:	0108d893          	srli	a7,a7,0x10
20016bc6:	02a6d6b3          	divu	a3,a3,a0
20016bca:	0742                	slli	a4,a4,0x10
20016bcc:	02d785b3          	mul	a1,a5,a3
20016bd0:	011767b3          	or	a5,a4,a7
20016bd4:	8736                	mv	a4,a3
20016bd6:	00b7fc63          	bgeu	a5,a1,20016bee <__udivdi3+0x20a>
20016bda:	97c2                	add	a5,a5,a6
20016bdc:	fff68713          	addi	a4,a3,-1 # ffffff <__heap_size+0xfff7ff>
20016be0:	0107e763          	bltu	a5,a6,20016bee <__udivdi3+0x20a>
20016be4:	00b7f563          	bgeu	a5,a1,20016bee <__udivdi3+0x20a>
20016be8:	ffe68713          	addi	a4,a3,-2
20016bec:	97c2                	add	a5,a5,a6
20016bee:	8f8d                	sub	a5,a5,a1
20016bf0:	01061593          	slli	a1,a2,0x10
20016bf4:	8dd9                	or	a1,a1,a4
20016bf6:	bdc5                	j	20016ae6 <__udivdi3+0x102>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
20016bf8:	14d5e263          	bltu	a1,a3,20016d3c <__udivdi3+0x358>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20016bfc:	6741                	lui	a4,0x10
20016bfe:	02e6fe63          	bgeu	a3,a4,20016c3a <__udivdi3+0x256>
20016c02:	0ff00813          	li	a6,255
20016c06:	00d83733          	sltu	a4,a6,a3
20016c0a:	070e                	slli	a4,a4,0x3
20016c0c:	00e6d833          	srl	a6,a3,a4
20016c10:	00001597          	auipc	a1,0x1
20016c14:	2a858593          	addi	a1,a1,680 # 20017eb8 <__clz_tab>
20016c18:	95c2                	add	a1,a1,a6
20016c1a:	0005c803          	lbu	a6,0(a1)
20016c1e:	02000593          	li	a1,32
20016c22:	983a                	add	a6,a6,a4
20016c24:	410585b3          	sub	a1,a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
20016c28:	e185                	bnez	a1,20016c48 <__udivdi3+0x264>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1172
20016c2a:	4705                	li	a4,1
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
20016c2c:	f2f6e5e3          	bltu	a3,a5,20016b56 <__udivdi3+0x172>
20016c30:	00c53533          	sltu	a0,a0,a2
20016c34:	00154713          	xori	a4,a0,1
20016c38:	bf39                	j	20016b56 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20016c3a:	010005b7          	lui	a1,0x1000
20016c3e:	4741                	li	a4,16
20016c40:	fcb6e6e3          	bltu	a3,a1,20016c0c <__udivdi3+0x228>
20016c44:	4761                	li	a4,24
20016c46:	b7d9                	j	20016c0c <__udivdi3+0x228>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
20016c48:	01065733          	srl	a4,a2,a6
20016c4c:	00b696b3          	sll	a3,a3,a1
20016c50:	8ed9                	or	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20016c52:	0106de93          	srli	t4,a3,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
20016c56:	0107d733          	srl	a4,a5,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20016c5a:	03d778b3          	remu	a7,a4,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
20016c5e:	00b797b3          	sll	a5,a5,a1
20016c62:	01055833          	srl	a6,a0,a6
20016c66:	00f86333          	or	t1,a6,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20016c6a:	01069793          	slli	a5,a3,0x10
20016c6e:	83c1                	srli	a5,a5,0x10
20016c70:	01035813          	srli	a6,t1,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
20016c74:	00b61633          	sll	a2,a2,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20016c78:	03d75733          	divu	a4,a4,t4
20016c7c:	08c2                	slli	a7,a7,0x10
20016c7e:	0108e833          	or	a6,a7,a6
20016c82:	02e78f33          	mul	t5,a5,a4
20016c86:	8e3a                	mv	t3,a4
20016c88:	01e87c63          	bgeu	a6,t5,20016ca0 <__udivdi3+0x2bc>
20016c8c:	9836                	add	a6,a6,a3
20016c8e:	fff70e13          	addi	t3,a4,-1 # ffff <__heap_size+0xf7ff>
20016c92:	00d86763          	bltu	a6,a3,20016ca0 <__udivdi3+0x2bc>
20016c96:	01e87563          	bgeu	a6,t5,20016ca0 <__udivdi3+0x2bc>
20016c9a:	ffe70e13          	addi	t3,a4,-2
20016c9e:	9836                	add	a6,a6,a3
20016ca0:	41e80833          	sub	a6,a6,t5
20016ca4:	03d878b3          	remu	a7,a6,t4
20016ca8:	03d85833          	divu	a6,a6,t4
20016cac:	08c2                	slli	a7,a7,0x10
20016cae:	03078eb3          	mul	t4,a5,a6
20016cb2:	01031793          	slli	a5,t1,0x10
20016cb6:	83c1                	srli	a5,a5,0x10
20016cb8:	00f8e7b3          	or	a5,a7,a5
20016cbc:	8742                	mv	a4,a6
20016cbe:	01d7fc63          	bgeu	a5,t4,20016cd6 <__udivdi3+0x2f2>
20016cc2:	97b6                	add	a5,a5,a3
20016cc4:	fff80713          	addi	a4,a6,-1
20016cc8:	00d7e763          	bltu	a5,a3,20016cd6 <__udivdi3+0x2f2>
20016ccc:	01d7f563          	bgeu	a5,t4,20016cd6 <__udivdi3+0x2f2>
20016cd0:	ffe80713          	addi	a4,a6,-2
20016cd4:	97b6                	add	a5,a5,a3
20016cd6:	0e42                	slli	t3,t3,0x10
20016cd8:	41d787b3          	sub	a5,a5,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20016cdc:	6ec1                	lui	t4,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20016cde:	00ee6733          	or	a4,t3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20016ce2:	fffe8813          	addi	a6,t4,-1 # ffff <__heap_size+0xf7ff>
20016ce6:	01077333          	and	t1,a4,a6
20016cea:	01075893          	srli	a7,a4,0x10
20016cee:	01067833          	and	a6,a2,a6
20016cf2:	8241                	srli	a2,a2,0x10
20016cf4:	03030e33          	mul	t3,t1,a6
20016cf8:	03088833          	mul	a6,a7,a6
20016cfc:	010e5693          	srli	a3,t3,0x10
20016d00:	02c30333          	mul	t1,t1,a2
20016d04:	9342                	add	t1,t1,a6
20016d06:	969a                	add	a3,a3,t1
20016d08:	02c888b3          	mul	a7,a7,a2
20016d0c:	0106f363          	bgeu	a3,a6,20016d12 <__udivdi3+0x32e>
20016d10:	98f6                	add	a7,a7,t4
20016d12:	0106d613          	srli	a2,a3,0x10
20016d16:	98b2                	add	a7,a7,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20016d18:	0317e063          	bltu	a5,a7,20016d38 <__udivdi3+0x354>
20016d1c:	d91793e3          	bne	a5,a7,20016aa2 <__udivdi3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20016d20:	67c1                	lui	a5,0x10
20016d22:	17fd                	addi	a5,a5,-1
20016d24:	8efd                	and	a3,a3,a5
20016d26:	06c2                	slli	a3,a3,0x10
20016d28:	00fe7e33          	and	t3,t3,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
20016d2c:	00b51533          	sll	a0,a0,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20016d30:	96f2                	add	a3,a3,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
20016d32:	4581                	li	a1,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20016d34:	e2d571e3          	bgeu	a0,a3,20016b56 <__udivdi3+0x172>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1205
20016d38:	177d                	addi	a4,a4,-1
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
20016d3a:	b3a5                	j	20016aa2 <__udivdi3+0xbe>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1145
20016d3c:	4581                	li	a1,0
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1144
20016d3e:	4701                	li	a4,0
20016d40:	bd19                	j	20016b56 <__udivdi3+0x172>

20016d42 <__umoddi3>:
__udivmoddi4():
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
20016d42:	88b2                	mv	a7,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
20016d44:	8736                	mv	a4,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
20016d46:	87aa                	mv	a5,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1027
20016d48:	882e                	mv	a6,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
20016d4a:	1c069863          	bnez	a3,20016f1a <__umoddi3+0x1d8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
20016d4e:	00001697          	auipc	a3,0x1
20016d52:	16a68693          	addi	a3,a3,362 # 20017eb8 <__clz_tab>
20016d56:	0ac5f863          	bgeu	a1,a2,20016e06 <__umoddi3+0xc4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20016d5a:	6341                	lui	t1,0x10
20016d5c:	08667e63          	bgeu	a2,t1,20016df8 <__umoddi3+0xb6>
20016d60:	0ff00313          	li	t1,255
20016d64:	00c37363          	bgeu	t1,a2,20016d6a <__umoddi3+0x28>
20016d68:	4721                	li	a4,8
20016d6a:	00e65333          	srl	t1,a2,a4
20016d6e:	969a                	add	a3,a3,t1
20016d70:	0006ce03          	lbu	t3,0(a3)
20016d74:	02000313          	li	t1,32
20016d78:	9e3a                	add	t3,t3,a4
20016d7a:	41c30333          	sub	t1,t1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
20016d7e:	00030c63          	beqz	t1,20016d96 <__umoddi3+0x54>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20016d82:	006595b3          	sll	a1,a1,t1
20016d86:	01c55e33          	srl	t3,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20016d8a:	006618b3          	sll	a7,a2,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20016d8e:	00be6833          	or	a6,t3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
20016d92:	006517b3          	sll	a5,a0,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
20016d96:	0108d613          	srli	a2,a7,0x10
20016d9a:	02c87733          	remu	a4,a6,a2
20016d9e:	01089513          	slli	a0,a7,0x10
20016da2:	8141                	srli	a0,a0,0x10
20016da4:	0107d693          	srli	a3,a5,0x10
20016da8:	02c85833          	divu	a6,a6,a2
20016dac:	0742                	slli	a4,a4,0x10
20016dae:	8ed9                	or	a3,a3,a4
20016db0:	03050833          	mul	a6,a0,a6
20016db4:	0106f863          	bgeu	a3,a6,20016dc4 <__umoddi3+0x82>
20016db8:	96c6                	add	a3,a3,a7
20016dba:	0116e563          	bltu	a3,a7,20016dc4 <__umoddi3+0x82>
20016dbe:	0106f363          	bgeu	a3,a6,20016dc4 <__umoddi3+0x82>
20016dc2:	96c6                	add	a3,a3,a7
20016dc4:	410686b3          	sub	a3,a3,a6
20016dc8:	02c6f733          	remu	a4,a3,a2
20016dcc:	07c2                	slli	a5,a5,0x10
20016dce:	83c1                	srli	a5,a5,0x10
20016dd0:	02c6d6b3          	divu	a3,a3,a2
20016dd4:	02d506b3          	mul	a3,a0,a3
20016dd8:	01071513          	slli	a0,a4,0x10
20016ddc:	8fc9                	or	a5,a5,a0
20016dde:	00d7f863          	bgeu	a5,a3,20016dee <__umoddi3+0xac>
20016de2:	97c6                	add	a5,a5,a7
20016de4:	0117e563          	bltu	a5,a7,20016dee <__umoddi3+0xac>
20016de8:	00d7f363          	bgeu	a5,a3,20016dee <__umoddi3+0xac>
20016dec:	97c6                	add	a5,a5,a7
20016dee:	8f95                	sub	a5,a5,a3
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1131
20016df0:	0067d533          	srl	a0,a5,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1133
20016df4:	4581                	li	a1,0
__umoddi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1313
20016df6:	8082                	ret
__udivmoddi4():
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20016df8:	01000337          	lui	t1,0x1000
20016dfc:	4741                	li	a4,16
20016dfe:	f66666e3          	bltu	a2,t1,20016d6a <__umoddi3+0x28>
20016e02:	4761                	li	a4,24
20016e04:	b79d                	j	20016d6a <__umoddi3+0x28>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
20016e06:	e601                	bnez	a2,20016e0e <__umoddi3+0xcc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
20016e08:	4605                	li	a2,1
20016e0a:	031658b3          	divu	a7,a2,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20016e0e:	6641                	lui	a2,0x10
20016e10:	08c8f363          	bgeu	a7,a2,20016e96 <__umoddi3+0x154>
20016e14:	0ff00613          	li	a2,255
20016e18:	01167363          	bgeu	a2,a7,20016e1e <__umoddi3+0xdc>
20016e1c:	4721                	li	a4,8
20016e1e:	00e8d633          	srl	a2,a7,a4
20016e22:	96b2                	add	a3,a3,a2
20016e24:	0006ce03          	lbu	t3,0(a3)
20016e28:	02000313          	li	t1,32
20016e2c:	9e3a                	add	t3,t3,a4
20016e2e:	41c30333          	sub	t1,t1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
20016e32:	06031963          	bnez	t1,20016ea4 <__umoddi3+0x162>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
20016e36:	411585b3          	sub	a1,a1,a7
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
20016e3a:	0108d713          	srli	a4,a7,0x10
20016e3e:	01089513          	slli	a0,a7,0x10
20016e42:	8141                	srli	a0,a0,0x10
20016e44:	0107d613          	srli	a2,a5,0x10
20016e48:	02e5f6b3          	remu	a3,a1,a4
20016e4c:	02e5d5b3          	divu	a1,a1,a4
20016e50:	06c2                	slli	a3,a3,0x10
20016e52:	8ed1                	or	a3,a3,a2
20016e54:	02b505b3          	mul	a1,a0,a1
20016e58:	00b6f863          	bgeu	a3,a1,20016e68 <__umoddi3+0x126>
20016e5c:	96c6                	add	a3,a3,a7
20016e5e:	0116e563          	bltu	a3,a7,20016e68 <__umoddi3+0x126>
20016e62:	00b6f363          	bgeu	a3,a1,20016e68 <__umoddi3+0x126>
20016e66:	96c6                	add	a3,a3,a7
20016e68:	40b685b3          	sub	a1,a3,a1
20016e6c:	02e5f6b3          	remu	a3,a1,a4
20016e70:	07c2                	slli	a5,a5,0x10
20016e72:	83c1                	srli	a5,a5,0x10
20016e74:	02e5d5b3          	divu	a1,a1,a4
20016e78:	02b505b3          	mul	a1,a0,a1
20016e7c:	01069513          	slli	a0,a3,0x10
20016e80:	8fc9                	or	a5,a5,a0
20016e82:	00b7f863          	bgeu	a5,a1,20016e92 <__umoddi3+0x150>
20016e86:	97c6                	add	a5,a5,a7
20016e88:	0117e563          	bltu	a5,a7,20016e92 <__umoddi3+0x150>
20016e8c:	00b7f363          	bgeu	a5,a1,20016e92 <__umoddi3+0x150>
20016e90:	97c6                	add	a5,a5,a7
20016e92:	8f8d                	sub	a5,a5,a1
20016e94:	bfb1                	j	20016df0 <__umoddi3+0xae>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20016e96:	01000637          	lui	a2,0x1000
20016e9a:	4741                	li	a4,16
20016e9c:	f8c8e1e3          	bltu	a7,a2,20016e1e <__umoddi3+0xdc>
20016ea0:	4761                	li	a4,24
20016ea2:	bfb5                	j	20016e1e <__umoddi3+0xdc>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
20016ea4:	006898b3          	sll	a7,a7,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20016ea8:	01c5d733          	srl	a4,a1,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
20016eac:	006517b3          	sll	a5,a0,t1
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20016eb0:	01c55e33          	srl	t3,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20016eb4:	0108d513          	srli	a0,a7,0x10
20016eb8:	02a776b3          	remu	a3,a4,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20016ebc:	006595b3          	sll	a1,a1,t1
20016ec0:	00be6e33          	or	t3,t3,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20016ec4:	01089593          	slli	a1,a7,0x10
20016ec8:	81c1                	srli	a1,a1,0x10
20016eca:	010e5613          	srli	a2,t3,0x10
20016ece:	02a75733          	divu	a4,a4,a0
20016ed2:	06c2                	slli	a3,a3,0x10
20016ed4:	8ed1                	or	a3,a3,a2
20016ed6:	02e58733          	mul	a4,a1,a4
20016eda:	00e6f863          	bgeu	a3,a4,20016eea <__umoddi3+0x1a8>
20016ede:	96c6                	add	a3,a3,a7
20016ee0:	0116e563          	bltu	a3,a7,20016eea <__umoddi3+0x1a8>
20016ee4:	00e6f363          	bgeu	a3,a4,20016eea <__umoddi3+0x1a8>
20016ee8:	96c6                	add	a3,a3,a7
20016eea:	40e68633          	sub	a2,a3,a4
20016eee:	02a676b3          	remu	a3,a2,a0
20016ef2:	0e42                	slli	t3,t3,0x10
20016ef4:	010e5e13          	srli	t3,t3,0x10
20016ef8:	02a65633          	divu	a2,a2,a0
20016efc:	06c2                	slli	a3,a3,0x10
20016efe:	02c58633          	mul	a2,a1,a2
20016f02:	01c6e5b3          	or	a1,a3,t3
20016f06:	00c5f863          	bgeu	a1,a2,20016f16 <__umoddi3+0x1d4>
20016f0a:	95c6                	add	a1,a1,a7
20016f0c:	0115e563          	bltu	a1,a7,20016f16 <__umoddi3+0x1d4>
20016f10:	00c5f363          	bgeu	a1,a2,20016f16 <__umoddi3+0x1d4>
20016f14:	95c6                	add	a1,a1,a7
20016f16:	8d91                	sub	a1,a1,a2
20016f18:	b70d                	j	20016e3a <__umoddi3+0xf8>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
20016f1a:	ecd5eee3          	bltu	a1,a3,20016df6 <__umoddi3+0xb4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20016f1e:	6741                	lui	a4,0x10
20016f20:	04e6f563          	bgeu	a3,a4,20016f6a <__umoddi3+0x228>
20016f24:	0ff00e93          	li	t4,255
20016f28:	00deb733          	sltu	a4,t4,a3
20016f2c:	070e                	slli	a4,a4,0x3
20016f2e:	00e6d333          	srl	t1,a3,a4
20016f32:	00001897          	auipc	a7,0x1
20016f36:	f8688893          	addi	a7,a7,-122 # 20017eb8 <__clz_tab>
20016f3a:	989a                	add	a7,a7,t1
20016f3c:	0008ce83          	lbu	t4,0(a7)
20016f40:	02000e13          	li	t3,32
20016f44:	9eba                	add	t4,t4,a4
20016f46:	41de0e33          	sub	t3,t3,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
20016f4a:	020e1763          	bnez	t3,20016f78 <__umoddi3+0x236>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
20016f4e:	00b6e463          	bltu	a3,a1,20016f56 <__umoddi3+0x214>
20016f52:	00c56963          	bltu	a0,a2,20016f64 <__umoddi3+0x222>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1173
20016f56:	40c507b3          	sub	a5,a0,a2
20016f5a:	8d95                	sub	a1,a1,a3
20016f5c:	00f53533          	sltu	a0,a0,a5
20016f60:	40a58833          	sub	a6,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1184
20016f64:	853e                	mv	a0,a5
20016f66:	85c2                	mv	a1,a6
20016f68:	b579                	j	20016df6 <__umoddi3+0xb4>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20016f6a:	010008b7          	lui	a7,0x1000
20016f6e:	4741                	li	a4,16
20016f70:	fb16efe3          	bltu	a3,a7,20016f2e <__umoddi3+0x1ec>
20016f74:	4761                	li	a4,24
20016f76:	bf65                	j	20016f2e <__umoddi3+0x1ec>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
20016f78:	01d65733          	srl	a4,a2,t4
20016f7c:	01c696b3          	sll	a3,a3,t3
20016f80:	8ed9                	or	a3,a3,a4
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20016f82:	0106d813          	srli	a6,a3,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
20016f86:	01d5d733          	srl	a4,a1,t4
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20016f8a:	03077333          	remu	t1,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
20016f8e:	01c595b3          	sll	a1,a1,t3
20016f92:	01d557b3          	srl	a5,a0,t4
20016f96:	8fcd                	or	a5,a5,a1
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20016f98:	01069593          	slli	a1,a3,0x10
20016f9c:	81c1                	srli	a1,a1,0x10
20016f9e:	0107d893          	srli	a7,a5,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
20016fa2:	01c61633          	sll	a2,a2,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
20016fa6:	01c51533          	sll	a0,a0,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20016faa:	03075733          	divu	a4,a4,a6
20016fae:	0342                	slli	t1,t1,0x10
20016fb0:	011368b3          	or	a7,t1,a7
20016fb4:	02e58f33          	mul	t5,a1,a4
20016fb8:	833a                	mv	t1,a4
20016fba:	01e8fc63          	bgeu	a7,t5,20016fd2 <__umoddi3+0x290>
20016fbe:	98b6                	add	a7,a7,a3
20016fc0:	fff70313          	addi	t1,a4,-1 # ffff <__heap_size+0xf7ff>
20016fc4:	00d8e763          	bltu	a7,a3,20016fd2 <__umoddi3+0x290>
20016fc8:	01e8f563          	bgeu	a7,t5,20016fd2 <__umoddi3+0x290>
20016fcc:	ffe70313          	addi	t1,a4,-2
20016fd0:	98b6                	add	a7,a7,a3
20016fd2:	41e888b3          	sub	a7,a7,t5
20016fd6:	0308ff33          	remu	t5,a7,a6
20016fda:	0308d8b3          	divu	a7,a7,a6
20016fde:	0f42                	slli	t5,t5,0x10
20016fe0:	03158833          	mul	a6,a1,a7
20016fe4:	01079593          	slli	a1,a5,0x10
20016fe8:	81c1                	srli	a1,a1,0x10
20016fea:	00bf65b3          	or	a1,t5,a1
20016fee:	87c6                	mv	a5,a7
20016ff0:	0105fc63          	bgeu	a1,a6,20017008 <__umoddi3+0x2c6>
20016ff4:	95b6                	add	a1,a1,a3
20016ff6:	fff88793          	addi	a5,a7,-1 # ffffff <__heap_size+0xfff7ff>
20016ffa:	00d5e763          	bltu	a1,a3,20017008 <__umoddi3+0x2c6>
20016ffe:	0105f563          	bgeu	a1,a6,20017008 <__umoddi3+0x2c6>
20017002:	ffe88793          	addi	a5,a7,-2
20017006:	95b6                	add	a1,a1,a3
20017008:	0342                	slli	t1,t1,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2001700a:	6f41                	lui	t5,0x10
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
2001700c:	00f36333          	or	t1,t1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20017010:	ffff0793          	addi	a5,t5,-1 # ffff <__heap_size+0xf7ff>
20017014:	00f378b3          	and	a7,t1,a5
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20017018:	410585b3          	sub	a1,a1,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2001701c:	01035313          	srli	t1,t1,0x10
20017020:	01065813          	srli	a6,a2,0x10
20017024:	8ff1                	and	a5,a5,a2
20017026:	02f88733          	mul	a4,a7,a5
2001702a:	02f307b3          	mul	a5,t1,a5
2001702e:	030888b3          	mul	a7,a7,a6
20017032:	03030333          	mul	t1,t1,a6
20017036:	98be                	add	a7,a7,a5
20017038:	01075813          	srli	a6,a4,0x10
2001703c:	9846                	add	a6,a6,a7
2001703e:	00f87363          	bgeu	a6,a5,20017044 <__umoddi3+0x302>
20017042:	937a                	add	t1,t1,t5
20017044:	01085793          	srli	a5,a6,0x10
20017048:	933e                	add	t1,t1,a5
2001704a:	67c1                	lui	a5,0x10
2001704c:	17fd                	addi	a5,a5,-1
2001704e:	00f87833          	and	a6,a6,a5
20017052:	0842                	slli	a6,a6,0x10
20017054:	8f7d                	and	a4,a4,a5
20017056:	9742                	add	a4,a4,a6
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20017058:	0065e663          	bltu	a1,t1,20017064 <__umoddi3+0x322>
2001705c:	00659c63          	bne	a1,t1,20017074 <__umoddi3+0x332>
20017060:	00e57a63          	bgeu	a0,a4,20017074 <__umoddi3+0x332>
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
20017064:	40c70633          	sub	a2,a4,a2
20017068:	00c73733          	sltu	a4,a4,a2
2001706c:	9736                	add	a4,a4,a3
2001706e:	40e30333          	sub	t1,t1,a4
20017072:	8732                	mv	a4,a2
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1214
20017074:	40e50733          	sub	a4,a0,a4
20017078:	00e53533          	sltu	a0,a0,a4
2001707c:	406585b3          	sub	a1,a1,t1
20017080:	8d89                	sub	a1,a1,a0
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1215
20017082:	01d597b3          	sll	a5,a1,t4
20017086:	01c75733          	srl	a4,a4,t3
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1217
2001708a:	00e7e533          	or	a0,a5,a4
2001708e:	01c5d5b3          	srl	a1,a1,t3
__umoddi3():
/scratch/carsteng/freedom-tools-master/obj/x86_64-w64-mingw32/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1312
20017092:	b395                	j	20016df6 <__umoddi3+0xb4>

20017094 <metal_tty_putc>:
metal_tty_putc():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/tty.c:12

#if defined(__METAL_DT_STDOUT_UART_HANDLE)
/* This implementation serves as a small shim that interfaces with the first
 * UART on a system. */
int metal_tty_putc(int c)
{
20017094:	1101                	addi	sp,sp,-32
20017096:	ce06                	sw	ra,28(sp)
20017098:	cc22                	sw	s0,24(sp)
2001709a:	1000                	addi	s0,sp,32
2001709c:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/tty.c:13
    if (c == '\n') {
200170a0:	fec42703          	lw	a4,-20(s0)
200170a4:	47a9                	li	a5,10
200170a6:	00f71463          	bne	a4,a5,200170ae <metal_tty_putc+0x1a>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/tty.c:14
        metal_tty_putc_raw( '\r' );
200170aa:	4535                	li	a0,13
200170ac:	2811                	jal	200170c0 <metal_tty_putc_raw>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/tty.c:16
    }
    return metal_tty_putc_raw( c );
200170ae:	fec42503          	lw	a0,-20(s0)
200170b2:	2039                	jal	200170c0 <metal_tty_putc_raw>
200170b4:	87aa                	mv	a5,a0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/tty.c:17
}
200170b6:	853e                	mv	a0,a5
200170b8:	40f2                	lw	ra,28(sp)
200170ba:	4462                	lw	s0,24(sp)
200170bc:	6105                	addi	sp,sp,32
200170be:	8082                	ret

200170c0 <metal_tty_putc_raw>:
metal_tty_putc_raw():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/tty.c:20

int metal_tty_putc_raw(int c)
{
200170c0:	1101                	addi	sp,sp,-32
200170c2:	ce06                	sw	ra,28(sp)
200170c4:	cc22                	sw	s0,24(sp)
200170c6:	1000                	addi	s0,sp,32
200170c8:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/tty.c:21
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
200170cc:	fec42583          	lw	a1,-20(s0)
200170d0:	800017b7          	lui	a5,0x80001
200170d4:	a2078513          	addi	a0,a5,-1504 # 80000a20 <metal_segment_heap_target_end+0xfffff2b0>
200170d8:	9d6ff0ef          	jal	ra,200162ae <metal_uart_putc>
200170dc:	87aa                	mv	a5,a0
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/tty.c:22
}
200170de:	853e                	mv	a0,a5
200170e0:	40f2                	lw	ra,28(sp)
200170e2:	4462                	lw	s0,24(sp)
200170e4:	6105                	addi	sp,sp,32
200170e6:	8082                	ret

200170e8 <metal_tty_init>:
metal_tty_init():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/tty.c:40
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

static void metal_tty_init(void) __attribute__((constructor));
static void metal_tty_init(void)
{
200170e8:	1141                	addi	sp,sp,-16
200170ea:	c606                	sw	ra,12(sp)
200170ec:	c422                	sw	s0,8(sp)
200170ee:	0800                	addi	s0,sp,16
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/tty.c:41
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
200170f0:	67f1                	lui	a5,0x1c
200170f2:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
200170f6:	800017b7          	lui	a5,0x80001
200170fa:	a2078513          	addi	a0,a5,-1504 # 80000a20 <metal_segment_heap_target_end+0xfffff2b0>
200170fe:	984ff0ef          	jal	ra,20016282 <metal_uart_init>
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/src/tty.c:42
}
20017102:	0001                	nop
20017104:	40b2                	lw	ra,12(sp)
20017106:	4422                	lw	s0,8(sp)
20017108:	0141                	addi	sp,sp,16
2001710a:	8082                	ret

2001710c <_exit>:
_exit():
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_exit.c:5
#include <metal/shutdown.h>

void
_exit(int exit_status)
{
2001710c:	1101                	addi	sp,sp,-32
2001710e:	ce06                	sw	ra,28(sp)
20017110:	cc22                	sw	s0,24(sp)
20017112:	1000                	addi	s0,sp,32
20017114:	fea42623          	sw	a0,-20(s0)
D:/hifive1-revb/hifive1-revb-test-i2c-with-arduino/SiFive/sifive-hifive1-revb-i2c/freedom-metal/gloss/sys_exit.c:6
  metal_shutdown(exit_status);
20017118:	fec42503          	lw	a0,-20(s0)
2001711c:	834ff0ef          	jal	ra,20016150 <metal_shutdown>
